{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_configChangeHeadsUpBlocks",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "numConfigs",
          "type": "uint64"
        }
      ],
      "name": "ConfigScheduled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "numConfigs",
          "type": "uint64"
        }
      ],
      "name": "ConfigUnscheduled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "configChangeHeadsUpBlocks",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_configIndex",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "_keyperIndex",
          "type": "uint64"
        }
      ],
      "name": "configKeypers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_configIndex",
          "type": "uint64"
        }
      ],
      "name": "configNumKeypers",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "configs",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "startBatchIndex",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "startBlockNumber",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "threshold",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "batchSpan",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "batchSizeLimit",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "transactionSizeLimit",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "transactionGasLimit",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "feeReceiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "targetAddress",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "targetFunctionSelector",
          "type": "bytes4"
        },
        {
          "internalType": "uint64",
          "name": "executionTimeout",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_batchIndex",
          "type": "uint64"
        }
      ],
      "name": "getConfig",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "startBatchIndex",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "startBlockNumber",
              "type": "uint64"
            },
            {
              "internalType": "address[]",
              "name": "keypers",
              "type": "address[]"
            },
            {
              "internalType": "uint64",
              "name": "threshold",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "batchSpan",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "batchSizeLimit",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "transactionSizeLimit",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "transactionGasLimit",
              "type": "uint64"
            },
            {
              "internalType": "address",
              "name": "feeReceiver",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "targetAddress",
              "type": "address"
            },
            {
              "internalType": "bytes4",
              "name": "targetFunctionSelector",
              "type": "bytes4"
            },
            {
              "internalType": "uint64",
              "name": "executionTimeout",
              "type": "uint64"
            }
          ],
          "internalType": "struct BatchConfig",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextConfig",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "startBatchIndex",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "startBlockNumber",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "threshold",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "batchSpan",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "batchSizeLimit",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "transactionSizeLimit",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "transactionGasLimit",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "feeReceiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "targetAddress",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "targetFunctionSelector",
          "type": "bytes4"
        },
        {
          "internalType": "uint64",
          "name": "executionTimeout",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_newKeypers",
          "type": "address[]"
        }
      ],
      "name": "nextConfigAddKeypers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_index",
          "type": "uint64"
        }
      ],
      "name": "nextConfigKeypers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextConfigNumKeypers",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "n",
          "type": "uint64"
        }
      ],
      "name": "nextConfigRemoveKeypers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_batchSizeLimit",
          "type": "uint64"
        }
      ],
      "name": "nextConfigSetBatchSizeLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_batchSpan",
          "type": "uint64"
        }
      ],
      "name": "nextConfigSetBatchSpan",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_executionTimeout",
          "type": "uint64"
        }
      ],
      "name": "nextConfigSetExecutionTimeout",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeReceiver",
          "type": "address"
        }
      ],
      "name": "nextConfigSetFeeReceiver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_startBatchIndex",
          "type": "uint64"
        }
      ],
      "name": "nextConfigSetStartBatchIndex",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_startBlockNumber",
          "type": "uint64"
        }
      ],
      "name": "nextConfigSetStartBlockNumber",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_targetAddress",
          "type": "address"
        }
      ],
      "name": "nextConfigSetTargetAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_targetFunctionSelector",
          "type": "bytes4"
        }
      ],
      "name": "nextConfigSetTargetFunctionSelector",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_threshold",
          "type": "uint64"
        }
      ],
      "name": "nextConfigSetThreshold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_transactionGasLimit",
          "type": "uint64"
        }
      ],
      "name": "nextConfigSetTransactionGasLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_transactionSizeLimit",
          "type": "uint64"
        }
      ],
      "name": "nextConfigSetTransactionSizeLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numConfigs",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "scheduleNextConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_fromStartBlockNumber",
          "type": "uint64"
        }
      ],
      "name": "unscheduleConfigs",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/jannik/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/GSN/Context.sol",
    "1": "/home/jannik/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/access/Ownable.sol",
    "12": "contracts/ConfigContract.sol"
  },
  "ast": {
    "absolutePath": "contracts/ConfigContract.sol",
    "exportedSymbols": {
      "BatchConfig": [281],
      "ConfigContract": [903],
      "Ownable": [2832]
    },
    "id": 904,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 252,
        "literals": ["solidity", ">=", "0.7", ".0", "<", "0.8", ".0"],
        "nodeType": "PragmaDirective",
        "src": "33:31:12"
      },
      {
        "id": 253,
        "literals": ["experimental", "ABIEncoderV2"],
        "nodeType": "PragmaDirective",
        "src": "65:33:12"
      },
      {
        "absolutePath": "/home/jannik/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/access/Ownable.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/access/Ownable.sol",
        "id": 255,
        "nodeType": "ImportDirective",
        "scope": 904,
        "sourceUnit": 2833,
        "src": "100:101:12",
        "symbolAliases": [
          {
            "foreign": {
              "id": 254,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "113:7:12",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "canonicalName": "BatchConfig",
        "id": 281,
        "members": [
          {
            "constant": false,
            "id": 257,
            "mutability": "mutable",
            "name": "startBatchIndex",
            "nodeType": "VariableDeclaration",
            "scope": 281,
            "src": "228:22:12",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 256,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "228:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 259,
            "mutability": "mutable",
            "name": "startBlockNumber",
            "nodeType": "VariableDeclaration",
            "scope": 281,
            "src": "306:23:12",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 258,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "306:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 262,
            "mutability": "mutable",
            "name": "keypers",
            "nodeType": "VariableDeclaration",
            "scope": 281,
            "src": "395:17:12",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 260,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "395:7:12",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 261,
              "nodeType": "ArrayTypeName",
              "src": "395:9:12",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 264,
            "mutability": "mutable",
            "name": "threshold",
            "nodeType": "VariableDeclaration",
            "scope": 281,
            "src": "442:16:12",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 263,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "442:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 266,
            "mutability": "mutable",
            "name": "batchSpan",
            "nodeType": "VariableDeclaration",
            "scope": 281,
            "src": "491:16:12",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 265,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "491:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 268,
            "mutability": "mutable",
            "name": "batchSizeLimit",
            "nodeType": "VariableDeclaration",
            "scope": 281,
            "src": "552:21:12",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 267,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "552:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 270,
            "mutability": "mutable",
            "name": "transactionSizeLimit",
            "nodeType": "VariableDeclaration",
            "scope": 281,
            "src": "619:27:12",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 269,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "619:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 272,
            "mutability": "mutable",
            "name": "transactionGasLimit",
            "nodeType": "VariableDeclaration",
            "scope": 281,
            "src": "714:26:12",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 271,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "714:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 274,
            "mutability": "mutable",
            "name": "feeReceiver",
            "nodeType": "VariableDeclaration",
            "scope": 281,
            "src": "800:19:12",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 273,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "800:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 276,
            "mutability": "mutable",
            "name": "targetAddress",
            "nodeType": "VariableDeclaration",
            "scope": 281,
            "src": "869:21:12",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 275,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "869:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 278,
            "mutability": "mutable",
            "name": "targetFunctionSelector",
            "nodeType": "VariableDeclaration",
            "scope": 281,
            "src": "965:29:12",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 277,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "965:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 280,
            "mutability": "mutable",
            "name": "executionTimeout",
            "nodeType": "VariableDeclaration",
            "scope": 281,
            "src": "1062:23:12",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 279,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "1062:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "BatchConfig",
        "nodeType": "StructDefinition",
        "scope": 904,
        "src": "203:946:12",
        "visibility": "public"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 283,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2832,
              "src": "1737:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2832",
                "typeString": "contract Ownable"
              }
            },
            "id": 284,
            "nodeType": "InheritanceSpecifier",
            "src": "1737:7:12"
          }
        ],
        "contractDependencies": [2832, 4318],
        "contractKind": "contract",
        "documentation": {
          "id": 282,
          "nodeType": "StructuredDocumentation",
          "src": "1151:559:12",
          "text": "@title A contract that manages `BatchConfig` objects.\n @dev The config objects are stored in sequence, with configs applicable to later batches being\n     lined up behind configs applicable to earlier batches (according to\n     `config.startBlockNumber`). The contract owner is entitled to add or remove configs at the\n     end at will as long as a notice of at least `configChangeHeadsUpBlocks` is given.\n @dev To add a new config, first populate the `nextConfig` object accordingly and then schedule\n     it with `scheduleNextConfig`."
        },
        "fullyImplemented": true,
        "id": 903,
        "linearizedBaseContracts": [903, 2832, 4318],
        "name": "ConfigContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 285,
              "nodeType": "StructuredDocumentation",
              "src": "1751:135:12",
              "text": "@notice The event emitted after a new config object has been scheduled.\n @param numConfigs The new number of configs stored."
            },
            "id": 289,
            "name": "ConfigScheduled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 287,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "numConfigs",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "1913:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 286,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1913:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1912:19:12"
            },
            "src": "1891:41:12"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 290,
              "nodeType": "StructuredDocumentation",
              "src": "1938:149:12",
              "text": "@notice The event emitted after the owner has unscheduled one or more config objects.\n @param numConfigs The new number of configs stored."
            },
            "id": 294,
            "name": "ConfigUnscheduled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 292,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "numConfigs",
                  "nodeType": "VariableDeclaration",
                  "scope": 294,
                  "src": "2116:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 291,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2116:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2115:19:12"
            },
            "src": "2092:43:12"
          },
          {
            "constant": false,
            "functionSelector": "0098fa22",
            "id": 297,
            "mutability": "mutable",
            "name": "configs",
            "nodeType": "VariableDeclaration",
            "scope": 903,
            "src": "2141:28:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_BatchConfig_$281_storage_$dyn_storage",
              "typeString": "struct BatchConfig[]"
            },
            "typeName": {
              "baseType": {
                "id": 295,
                "name": "BatchConfig",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 281,
                "src": "2141:11:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_BatchConfig_$281_storage_ptr",
                  "typeString": "struct BatchConfig"
                }
              },
              "id": 296,
              "nodeType": "ArrayTypeName",
              "src": "2141:13:12",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_BatchConfig_$281_storage_$dyn_storage_ptr",
                "typeString": "struct BatchConfig[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "64e9f671",
            "id": 299,
            "mutability": "mutable",
            "name": "nextConfig",
            "nodeType": "VariableDeclaration",
            "scope": 903,
            "src": "2175:29:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_BatchConfig_$281_storage",
              "typeString": "struct BatchConfig"
            },
            "typeName": {
              "id": 298,
              "name": "BatchConfig",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 281,
              "src": "2175:11:12",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_BatchConfig_$281_storage_ptr",
                "typeString": "struct BatchConfig"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cd21aee7",
            "id": 301,
            "mutability": "immutable",
            "name": "configChangeHeadsUpBlocks",
            "nodeType": "VariableDeclaration",
            "scope": 903,
            "src": "2211:49:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 300,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "2211:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 317,
              "nodeType": "Block",
              "src": "2314:108:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 309,
                          "name": "zeroConfig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 352,
                          "src": "2337:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_BatchConfig_$281_memory_ptr_$",
                            "typeString": "function () pure returns (struct BatchConfig memory)"
                          }
                        },
                        "id": 310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2337:12:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BatchConfig_$281_memory_ptr",
                          "typeString": "struct BatchConfig memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_BatchConfig_$281_memory_ptr",
                          "typeString": "struct BatchConfig memory"
                        }
                      ],
                      "expression": {
                        "id": 306,
                        "name": "configs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 297,
                        "src": "2324:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_BatchConfig_$281_storage_$dyn_storage",
                          "typeString": "struct BatchConfig storage ref[] storage ref"
                        }
                      },
                      "id": 308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2324:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_BatchConfig_$281_storage_$returns$__$",
                        "typeString": "function (struct BatchConfig storage ref)"
                      }
                    },
                    "id": 311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2324:26:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 312,
                  "nodeType": "ExpressionStatement",
                  "src": "2324:26:12"
                },
                {
                  "expression": {
                    "id": 315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 313,
                      "name": "configChangeHeadsUpBlocks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 301,
                      "src": "2361:25:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 314,
                      "name": "_configChangeHeadsUpBlocks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 303,
                      "src": "2389:26:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "2361:54:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 316,
                  "nodeType": "ExpressionStatement",
                  "src": "2361:54:12"
                }
              ]
            },
            "id": 318,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 303,
                  "mutability": "mutable",
                  "name": "_configChangeHeadsUpBlocks",
                  "nodeType": "VariableDeclaration",
                  "scope": 318,
                  "src": "2279:33:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 302,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2279:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2278:35:12"
            },
            "returnParameters": {
              "id": 305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2314:0:12"
            },
            "scope": 903,
            "src": "2267:155:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 351,
              "nodeType": "Block",
              "src": "2493:527:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2569:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2606:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2648:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "2634:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (address[] memory)"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 326,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2638:7:12",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 327,
                            "nodeType": "ArrayTypeName",
                            "src": "2638:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                              "typeString": "address[]"
                            }
                          }
                        },
                        "id": 330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2634:16:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2679:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2709:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2744:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2785:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2825:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 338,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2865:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2857:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 336,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2857:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2857:10:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 342,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2908:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2900:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 340,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2900:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2900:10:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2959:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2952:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes4_$",
                            "typeString": "type(bytes4)"
                          },
                          "typeName": {
                            "id": 344,
                            "name": "bytes4",
                            "nodeType": "ElementaryTypeName",
                            "src": "2952:6:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2952:9:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2997:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 323,
                      "name": "BatchConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 281,
                      "src": "2522:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_BatchConfig_$281_storage_ptr_$",
                        "typeString": "type(struct BatchConfig storage pointer)"
                      }
                    },
                    "id": 349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "startBatchIndex",
                      "startBlockNumber",
                      "keypers",
                      "threshold",
                      "batchSpan",
                      "batchSizeLimit",
                      "transactionSizeLimit",
                      "transactionGasLimit",
                      "feeReceiver",
                      "targetAddress",
                      "targetFunctionSelector",
                      "executionTimeout"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "2522:491:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BatchConfig_$281_memory_ptr",
                      "typeString": "struct BatchConfig memory"
                    }
                  },
                  "functionReturnParameters": 322,
                  "id": 350,
                  "nodeType": "Return",
                  "src": "2503:510:12"
                }
              ]
            },
            "id": 352,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "zeroConfig",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 319,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2447:2:12"
            },
            "returnParameters": {
              "id": 322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 321,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 352,
                  "src": "2473:18:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BatchConfig_$281_memory_ptr",
                    "typeString": "struct BatchConfig"
                  },
                  "typeName": {
                    "id": 320,
                    "name": "BatchConfig",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 281,
                    "src": "2473:11:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BatchConfig_$281_storage_ptr",
                      "typeString": "struct BatchConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2472:20:12"
            },
            "scope": 903,
            "src": "2428:592:12",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 363,
              "nodeType": "Block",
              "src": "3079:46:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 359,
                          "name": "configs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 297,
                          "src": "3103:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_BatchConfig_$281_storage_$dyn_storage",
                            "typeString": "struct BatchConfig storage ref[] storage ref"
                          }
                        },
                        "id": 360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "3103:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3096:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint64_$",
                        "typeString": "type(uint64)"
                      },
                      "typeName": {
                        "id": 357,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "3096:6:12",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3096:22:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "functionReturnParameters": 356,
                  "id": 362,
                  "nodeType": "Return",
                  "src": "3089:29:12"
                }
              ]
            },
            "functionSelector": "0f0aae6f",
            "id": 364,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "numConfigs",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3045:2:12"
            },
            "returnParameters": {
              "id": 356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 355,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 364,
                  "src": "3071:6:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 354,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3071:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3070:8:12"
            },
            "scope": 903,
            "src": "3026:99:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 405,
              "nodeType": "Block",
              "src": "3344:255:12",
              "statements": [
                {
                  "body": {
                    "id": 399,
                    "nodeType": "Block",
                    "src": "3404:166:12",
                    "statements": [
                      {
                        "assignments": [386],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 386,
                            "mutability": "mutable",
                            "name": "config",
                            "nodeType": "VariableDeclaration",
                            "scope": 399,
                            "src": "3418:26:12",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BatchConfig_$281_storage_ptr",
                              "typeString": "struct BatchConfig"
                            },
                            "typeName": {
                              "id": 385,
                              "name": "BatchConfig",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 281,
                              "src": "3418:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BatchConfig_$281_storage_ptr",
                                "typeString": "struct BatchConfig"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 390,
                        "initialValue": {
                          "baseExpression": {
                            "id": 387,
                            "name": "configs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 297,
                            "src": "3447:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_BatchConfig_$281_storage_$dyn_storage",
                              "typeString": "struct BatchConfig storage ref[] storage ref"
                            }
                          },
                          "id": 389,
                          "indexExpression": {
                            "id": 388,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 373,
                            "src": "3455:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3447:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BatchConfig_$281_storage",
                            "typeString": "struct BatchConfig storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3418:39:12"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 391,
                              "name": "config",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 386,
                              "src": "3475:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BatchConfig_$281_storage_ptr",
                                "typeString": "struct BatchConfig storage pointer"
                              }
                            },
                            "id": 392,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "startBatchIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 257,
                            "src": "3475:22:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 393,
                            "name": "_batchIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 367,
                            "src": "3501:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "3475:37:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 398,
                        "nodeType": "IfStatement",
                        "src": "3471:89:12",
                        "trueBody": {
                          "id": 397,
                          "nodeType": "Block",
                          "src": "3514:46:12",
                          "statements": [
                            {
                              "expression": {
                                "id": 395,
                                "name": "config",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 386,
                                "src": "3539:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_BatchConfig_$281_storage_ptr",
                                  "typeString": "struct BatchConfig storage pointer"
                                }
                              },
                              "functionReturnParameters": 371,
                              "id": 396,
                              "nodeType": "Return",
                              "src": "3532:13:12"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 379,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 373,
                      "src": "3391:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3396:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3391:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 400,
                  "initializationExpression": {
                    "assignments": [373],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 373,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 400,
                        "src": "3359:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 372,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3359:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 378,
                    "initialValue": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 374,
                          "name": "configs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 297,
                          "src": "3371:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_BatchConfig_$281_storage_$dyn_storage",
                            "typeString": "struct BatchConfig storage ref[] storage ref"
                          }
                        },
                        "id": 375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "3371:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3388:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "3371:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3359:30:12"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "--",
                      "prefix": false,
                      "src": "3399:3:12",
                      "subExpression": {
                        "id": 382,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 373,
                        "src": "3399:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 384,
                    "nodeType": "ExpressionStatement",
                    "src": "3399:3:12"
                  },
                  "nodeType": "ForStatement",
                  "src": "3354:216:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3586:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 401,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "3579:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3579:13:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 404,
                  "nodeType": "ExpressionStatement",
                  "src": "3579:13:12"
                }
              ]
            },
            "documentation": {
              "id": 365,
              "nodeType": "StructuredDocumentation",
              "src": "3131:98:12",
              "text": "@notice Get the config for a certain batch.\n @param _batchIndex The index of the batch."
            },
            "functionSelector": "e008cb62",
            "id": 406,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getConfig",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 367,
                  "mutability": "mutable",
                  "name": "_batchIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "3253:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 366,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3253:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3252:20:12"
            },
            "returnParameters": {
              "id": 371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 370,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "3320:18:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BatchConfig_$281_memory_ptr",
                    "typeString": "struct BatchConfig"
                  },
                  "typeName": {
                    "id": 369,
                    "name": "BatchConfig",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 281,
                    "src": "3320:11:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BatchConfig_$281_storage_ptr",
                      "typeString": "struct BatchConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3319:20:12"
            },
            "scope": 903,
            "src": "3234:365:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 422,
              "nodeType": "Block",
              "src": "3773:67:12",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 415,
                          "name": "configs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 297,
                          "src": "3790:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_BatchConfig_$281_storage_$dyn_storage",
                            "typeString": "struct BatchConfig storage ref[] storage ref"
                          }
                        },
                        "id": 417,
                        "indexExpression": {
                          "id": 416,
                          "name": "_configIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 408,
                          "src": "3798:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3790:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BatchConfig_$281_storage",
                          "typeString": "struct BatchConfig storage ref"
                        }
                      },
                      "id": 418,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "keypers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 262,
                      "src": "3790:29:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 420,
                    "indexExpression": {
                      "id": 419,
                      "name": "_keyperIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 410,
                      "src": "3820:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3790:43:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 414,
                  "id": 421,
                  "nodeType": "Return",
                  "src": "3783:50:12"
                }
              ]
            },
            "functionSelector": "fa84ea02",
            "id": 423,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "configKeypers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 411,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 408,
                  "mutability": "mutable",
                  "name": "_configIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 423,
                  "src": "3671:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 407,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3671:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 410,
                  "mutability": "mutable",
                  "name": "_keyperIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 423,
                  "src": "3692:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 409,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3692:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3670:42:12"
            },
            "returnParameters": {
              "id": 414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 413,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 423,
                  "src": "3760:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 412,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3760:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3759:9:12"
            },
            "scope": 903,
            "src": "3648:192:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 439,
              "nodeType": "Block",
              "src": "3952:68:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 432,
                              "name": "configs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 297,
                              "src": "3976:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_BatchConfig_$281_storage_$dyn_storage",
                                "typeString": "struct BatchConfig storage ref[] storage ref"
                              }
                            },
                            "id": 434,
                            "indexExpression": {
                              "id": 433,
                              "name": "_configIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 425,
                              "src": "3984:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3976:21:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BatchConfig_$281_storage",
                              "typeString": "struct BatchConfig storage ref"
                            }
                          },
                          "id": 435,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "keypers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 262,
                          "src": "3976:29:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "3976:36:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3969:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint64_$",
                        "typeString": "type(uint64)"
                      },
                      "typeName": {
                        "id": 430,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "3969:6:12",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3969:44:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "functionReturnParameters": 429,
                  "id": 438,
                  "nodeType": "Return",
                  "src": "3962:51:12"
                }
              ]
            },
            "functionSelector": "d9a58f24",
            "id": 440,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "configNumKeypers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 425,
                  "mutability": "mutable",
                  "name": "_configIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "3872:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 424,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3872:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3871:21:12"
            },
            "returnParameters": {
              "id": 429,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 428,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "3940:6:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 427,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3940:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3939:8:12"
            },
            "scope": 903,
            "src": "3846:174:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 453,
              "nodeType": "Block",
              "src": "4169:62:12",
              "statements": [
                {
                  "expression": {
                    "id": 451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 447,
                        "name": "nextConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "4179:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BatchConfig_$281_storage",
                          "typeString": "struct BatchConfig storage ref"
                        }
                      },
                      "id": 449,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "startBatchIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 257,
                      "src": "4179:26:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 450,
                      "name": "_startBatchIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 442,
                      "src": "4208:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "4179:45:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 452,
                  "nodeType": "ExpressionStatement",
                  "src": "4179:45:12"
                }
              ]
            },
            "functionSelector": "ce9919b8",
            "id": 454,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 445,
                "modifierName": {
                  "id": 444,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2781,
                  "src": "4155:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4155:9:12"
              }
            ],
            "name": "nextConfigSetStartBatchIndex",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 442,
                  "mutability": "mutable",
                  "name": "_startBatchIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 454,
                  "src": "4105:23:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 441,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "4105:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4104:25:12"
            },
            "returnParameters": {
              "id": 446,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4169:0:12"
            },
            "scope": 903,
            "src": "4067:164:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 467,
              "nodeType": "Block",
              "src": "4341:64:12",
              "statements": [
                {
                  "expression": {
                    "id": 465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 461,
                        "name": "nextConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "4351:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BatchConfig_$281_storage",
                          "typeString": "struct BatchConfig storage ref"
                        }
                      },
                      "id": 463,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "startBlockNumber",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 259,
                      "src": "4351:27:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 464,
                      "name": "_startBlockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 456,
                      "src": "4381:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "4351:47:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 466,
                  "nodeType": "ExpressionStatement",
                  "src": "4351:47:12"
                }
              ]
            },
            "functionSelector": "81e905a3",
            "id": 468,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 459,
                "modifierName": {
                  "id": 458,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2781,
                  "src": "4327:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4327:9:12"
              }
            ],
            "name": "nextConfigSetStartBlockNumber",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 457,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 456,
                  "mutability": "mutable",
                  "name": "_startBlockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 468,
                  "src": "4276:24:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 455,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "4276:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4275:26:12"
            },
            "returnParameters": {
              "id": 460,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4341:0:12"
            },
            "scope": 903,
            "src": "4237:168:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 481,
              "nodeType": "Block",
              "src": "4481:50:12",
              "statements": [
                {
                  "expression": {
                    "id": 479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 475,
                        "name": "nextConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "4491:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BatchConfig_$281_storage",
                          "typeString": "struct BatchConfig storage ref"
                        }
                      },
                      "id": 477,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "threshold",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 264,
                      "src": "4491:20:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 478,
                      "name": "_threshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 470,
                      "src": "4514:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "4491:33:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 480,
                  "nodeType": "ExpressionStatement",
                  "src": "4491:33:12"
                }
              ]
            },
            "functionSelector": "73ed43db",
            "id": 482,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 473,
                "modifierName": {
                  "id": 472,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2781,
                  "src": "4471:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4471:9:12"
              }
            ],
            "name": "nextConfigSetThreshold",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 470,
                  "mutability": "mutable",
                  "name": "_threshold",
                  "nodeType": "VariableDeclaration",
                  "scope": 482,
                  "src": "4443:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 469,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "4443:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4442:19:12"
            },
            "returnParameters": {
              "id": 474,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4481:0:12"
            },
            "scope": 903,
            "src": "4411:120:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 502,
              "nodeType": "Block",
              "src": "4607:253:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 490,
                          "name": "_batchSpan",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 484,
                          "src": "4694:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 491,
                          "name": "configChangeHeadsUpBlocks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 301,
                          "src": "4707:25:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "4694:38:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e666967436f6e74726163743a206261746368207370616e206e6f742073686f72746572207468616e206865616473207570",
                        "id": 493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4746:54:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_097329313c334d4617d98748f52e35d3335e8b7dc7b88777ba68a0ca2729c03f",
                          "typeString": "literal_string \"ConfigContract: batch span not shorter than heads up\""
                        },
                        "value": "ConfigContract: batch span not shorter than heads up"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_097329313c334d4617d98748f52e35d3335e8b7dc7b88777ba68a0ca2729c03f",
                          "typeString": "literal_string \"ConfigContract: batch span not shorter than heads up\""
                        }
                      ],
                      "id": 489,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "4673:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4673:137:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 495,
                  "nodeType": "ExpressionStatement",
                  "src": "4673:137:12"
                },
                {
                  "expression": {
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 496,
                        "name": "nextConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "4820:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BatchConfig_$281_storage",
                          "typeString": "struct BatchConfig storage ref"
                        }
                      },
                      "id": 498,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "batchSpan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 266,
                      "src": "4820:20:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 499,
                      "name": "_batchSpan",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 484,
                      "src": "4843:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "4820:33:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 501,
                  "nodeType": "ExpressionStatement",
                  "src": "4820:33:12"
                }
              ]
            },
            "functionSelector": "5dc6fdb8",
            "id": 503,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 487,
                "modifierName": {
                  "id": 486,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2781,
                  "src": "4597:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4597:9:12"
              }
            ],
            "name": "nextConfigSetBatchSpan",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 484,
                  "mutability": "mutable",
                  "name": "_batchSpan",
                  "nodeType": "VariableDeclaration",
                  "scope": 503,
                  "src": "4569:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 483,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "4569:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4568:19:12"
            },
            "returnParameters": {
              "id": 488,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4607:0:12"
            },
            "scope": 903,
            "src": "4537:323:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 516,
              "nodeType": "Block",
              "src": "4966:60:12",
              "statements": [
                {
                  "expression": {
                    "id": 514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 510,
                        "name": "nextConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "4976:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BatchConfig_$281_storage",
                          "typeString": "struct BatchConfig storage ref"
                        }
                      },
                      "id": 512,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "batchSizeLimit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 268,
                      "src": "4976:25:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 513,
                      "name": "_batchSizeLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 505,
                      "src": "5004:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "4976:43:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 515,
                  "nodeType": "ExpressionStatement",
                  "src": "4976:43:12"
                }
              ]
            },
            "functionSelector": "c7c6e9f4",
            "id": 517,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 508,
                "modifierName": {
                  "id": 507,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2781,
                  "src": "4952:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4952:9:12"
              }
            ],
            "name": "nextConfigSetBatchSizeLimit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 505,
                  "mutability": "mutable",
                  "name": "_batchSizeLimit",
                  "nodeType": "VariableDeclaration",
                  "scope": 517,
                  "src": "4903:22:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 504,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "4903:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4902:24:12"
            },
            "returnParameters": {
              "id": 509,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4966:0:12"
            },
            "scope": 903,
            "src": "4866:160:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 530,
              "nodeType": "Block",
              "src": "5144:72:12",
              "statements": [
                {
                  "expression": {
                    "id": 528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 524,
                        "name": "nextConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "5154:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BatchConfig_$281_storage",
                          "typeString": "struct BatchConfig storage ref"
                        }
                      },
                      "id": 526,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "transactionSizeLimit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 270,
                      "src": "5154:31:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 527,
                      "name": "_transactionSizeLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 519,
                      "src": "5188:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "5154:55:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 529,
                  "nodeType": "ExpressionStatement",
                  "src": "5154:55:12"
                }
              ]
            },
            "functionSelector": "606df514",
            "id": 531,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 522,
                "modifierName": {
                  "id": 521,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2781,
                  "src": "5130:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5130:9:12"
              }
            ],
            "name": "nextConfigSetTransactionSizeLimit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 520,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 519,
                  "mutability": "mutable",
                  "name": "_transactionSizeLimit",
                  "nodeType": "VariableDeclaration",
                  "scope": 531,
                  "src": "5075:28:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 518,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "5075:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5074:30:12"
            },
            "returnParameters": {
              "id": 523,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5144:0:12"
            },
            "scope": 903,
            "src": "5032:184:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 544,
              "nodeType": "Block",
              "src": "5332:70:12",
              "statements": [
                {
                  "expression": {
                    "id": 542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 538,
                        "name": "nextConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "5342:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BatchConfig_$281_storage",
                          "typeString": "struct BatchConfig storage ref"
                        }
                      },
                      "id": 540,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "transactionGasLimit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 272,
                      "src": "5342:30:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 541,
                      "name": "_transactionGasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 533,
                      "src": "5375:20:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "5342:53:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 543,
                  "nodeType": "ExpressionStatement",
                  "src": "5342:53:12"
                }
              ]
            },
            "functionSelector": "564093fc",
            "id": 545,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 536,
                "modifierName": {
                  "id": 535,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2781,
                  "src": "5318:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5318:9:12"
              }
            ],
            "name": "nextConfigSetTransactionGasLimit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 534,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 533,
                  "mutability": "mutable",
                  "name": "_transactionGasLimit",
                  "nodeType": "VariableDeclaration",
                  "scope": 545,
                  "src": "5264:27:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 532,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "5264:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5263:29:12"
            },
            "returnParameters": {
              "id": 537,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5332:0:12"
            },
            "scope": 903,
            "src": "5222:180:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 558,
              "nodeType": "Block",
              "src": "5483:54:12",
              "statements": [
                {
                  "expression": {
                    "id": 556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 552,
                        "name": "nextConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "5493:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BatchConfig_$281_storage",
                          "typeString": "struct BatchConfig storage ref"
                        }
                      },
                      "id": 554,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "feeReceiver",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 274,
                      "src": "5493:22:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 555,
                      "name": "_feeReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 547,
                      "src": "5518:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5493:37:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 557,
                  "nodeType": "ExpressionStatement",
                  "src": "5493:37:12"
                }
              ]
            },
            "functionSelector": "2b2cc6c4",
            "id": 559,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 550,
                "modifierName": {
                  "id": 549,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2781,
                  "src": "5473:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5473:9:12"
              }
            ],
            "name": "nextConfigSetFeeReceiver",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 547,
                  "mutability": "mutable",
                  "name": "_feeReceiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 559,
                  "src": "5442:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 546,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5442:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5441:22:12"
            },
            "returnParameters": {
              "id": 551,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5483:0:12"
            },
            "scope": 903,
            "src": "5408:129:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 572,
              "nodeType": "Block",
              "src": "5642:58:12",
              "statements": [
                {
                  "expression": {
                    "id": 570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 566,
                        "name": "nextConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "5652:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BatchConfig_$281_storage",
                          "typeString": "struct BatchConfig storage ref"
                        }
                      },
                      "id": 568,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "targetAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 276,
                      "src": "5652:24:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 569,
                      "name": "_targetAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 561,
                      "src": "5679:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5652:41:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 571,
                  "nodeType": "ExpressionStatement",
                  "src": "5652:41:12"
                }
              ]
            },
            "functionSelector": "bcf67268",
            "id": 573,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 564,
                "modifierName": {
                  "id": 563,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2781,
                  "src": "5628:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5628:9:12"
              }
            ],
            "name": "nextConfigSetTargetAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 561,
                  "mutability": "mutable",
                  "name": "_targetAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 573,
                  "src": "5579:22:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 560,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5579:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5578:24:12"
            },
            "returnParameters": {
              "id": 565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5642:0:12"
            },
            "scope": 903,
            "src": "5543:157:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 586,
              "nodeType": "Block",
              "src": "5822:76:12",
              "statements": [
                {
                  "expression": {
                    "id": 584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 580,
                        "name": "nextConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "5832:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BatchConfig_$281_storage",
                          "typeString": "struct BatchConfig storage ref"
                        }
                      },
                      "id": 582,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "targetFunctionSelector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 278,
                      "src": "5832:33:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 583,
                      "name": "_targetFunctionSelector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 575,
                      "src": "5868:23:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "5832:59:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 585,
                  "nodeType": "ExpressionStatement",
                  "src": "5832:59:12"
                }
              ]
            },
            "functionSelector": "d1ac2e52",
            "id": 587,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 578,
                "modifierName": {
                  "id": 577,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2781,
                  "src": "5808:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5808:9:12"
              }
            ],
            "name": "nextConfigSetTargetFunctionSelector",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 575,
                  "mutability": "mutable",
                  "name": "_targetFunctionSelector",
                  "nodeType": "VariableDeclaration",
                  "scope": 587,
                  "src": "5751:30:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 574,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "5751:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5750:32:12"
            },
            "returnParameters": {
              "id": 579,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5822:0:12"
            },
            "scope": 903,
            "src": "5706:192:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 600,
              "nodeType": "Block",
              "src": "6008:64:12",
              "statements": [
                {
                  "expression": {
                    "id": 598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 594,
                        "name": "nextConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "6018:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BatchConfig_$281_storage",
                          "typeString": "struct BatchConfig storage ref"
                        }
                      },
                      "id": 596,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "executionTimeout",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 280,
                      "src": "6018:27:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 597,
                      "name": "_executionTimeout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 589,
                      "src": "6048:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "6018:47:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 599,
                  "nodeType": "ExpressionStatement",
                  "src": "6018:47:12"
                }
              ]
            },
            "functionSelector": "719f2e17",
            "id": 601,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 592,
                "modifierName": {
                  "id": 591,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2781,
                  "src": "5994:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5994:9:12"
              }
            ],
            "name": "nextConfigSetExecutionTimeout",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 589,
                  "mutability": "mutable",
                  "name": "_executionTimeout",
                  "nodeType": "VariableDeclaration",
                  "scope": 601,
                  "src": "5943:24:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 588,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "5943:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5942:26:12"
            },
            "returnParameters": {
              "id": 593,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6008:0:12"
            },
            "scope": 903,
            "src": "5904:168:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 648,
              "nodeType": "Block",
              "src": "6179:299:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "id": 610,
                              "name": "nextConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 299,
                              "src": "6210:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BatchConfig_$281_storage",
                                "typeString": "struct BatchConfig storage ref"
                              }
                            },
                            "id": 611,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "keypers",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 262,
                            "src": "6210:18:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6210:25:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 615,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6244:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint64_$",
                                    "typeString": "type(uint64)"
                                  },
                                  "typeName": {
                                    "id": 614,
                                    "name": "uint64",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6244:6:12",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint64_$",
                                    "typeString": "type(uint64)"
                                  }
                                ],
                                "id": 613,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "6239:4:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6239:12:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint64",
                                "typeString": "type(uint64)"
                              }
                            },
                            "id": 617,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "6239:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "expression": {
                              "id": 618,
                              "name": "_newKeypers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 604,
                              "src": "6258:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            "id": 619,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "6258:18:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6239:37:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6210:66:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e666967436f6e74726163743a206e756d626572206f66206b65797065727320657863656564732075696e743634",
                        "id": 622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6290:50:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3fd11abed67c4a30126d885540196bd1c91511ca45ff1e8df412c28c1d4763a7",
                          "typeString": "literal_string \"ConfigContract: number of keypers exceeds uint64\""
                        },
                        "value": "ConfigContract: number of keypers exceeds uint64"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3fd11abed67c4a30126d885540196bd1c91511ca45ff1e8df412c28c1d4763a7",
                          "typeString": "literal_string \"ConfigContract: number of keypers exceeds uint64\""
                        }
                      ],
                      "id": 609,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "6189:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6189:161:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 624,
                  "nodeType": "ExpressionStatement",
                  "src": "6189:161:12"
                },
                {
                  "body": {
                    "id": 646,
                    "nodeType": "Block",
                    "src": "6408:64:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 641,
                                "name": "_newKeypers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 604,
                                "src": "6446:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 643,
                              "indexExpression": {
                                "id": 642,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 626,
                                "src": "6458:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6446:14:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 636,
                                "name": "nextConfig",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 299,
                                "src": "6422:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_BatchConfig_$281_storage",
                                  "typeString": "struct BatchConfig storage ref"
                                }
                              },
                              "id": 639,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "keypers",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 262,
                              "src": "6422:18:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 640,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "6422:23:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6422:39:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 645,
                        "nodeType": "ExpressionStatement",
                        "src": "6422:39:12"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 629,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 626,
                      "src": "6379:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 630,
                        "name": "_newKeypers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 604,
                        "src": "6383:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6383:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6379:22:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 647,
                  "initializationExpression": {
                    "assignments": [626],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 626,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 647,
                        "src": "6365:8:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 625,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "6365:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 628,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6376:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6365:12:12"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6403:3:12",
                      "subExpression": {
                        "id": 633,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 626,
                        "src": "6403:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "id": 635,
                    "nodeType": "ExpressionStatement",
                    "src": "6403:3:12"
                  },
                  "nodeType": "ForStatement",
                  "src": "6360:112:12"
                }
              ]
            },
            "functionSelector": "62fced0e",
            "id": 649,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 607,
                "modifierName": {
                  "id": 606,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2781,
                  "src": "6165:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6165:9:12"
              }
            ],
            "name": "nextConfigAddKeypers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 604,
                  "mutability": "mutable",
                  "name": "_newKeypers",
                  "nodeType": "VariableDeclaration",
                  "scope": 649,
                  "src": "6108:30:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 602,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "6108:7:12",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 603,
                    "nodeType": "ArrayTypeName",
                    "src": "6108:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6107:32:12"
            },
            "returnParameters": {
              "id": 608,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6179:0:12"
            },
            "scope": 903,
            "src": "6078:400:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 691,
              "nodeType": "Block",
              "src": "6546:267:12",
              "statements": [
                {
                  "assignments": [657],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 657,
                      "mutability": "mutable",
                      "name": "currentLength",
                      "nodeType": "VariableDeclaration",
                      "scope": 691,
                      "src": "6556:21:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 656,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6556:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 661,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 658,
                        "name": "nextConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "6580:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BatchConfig_$281_storage",
                          "typeString": "struct BatchConfig storage ref"
                        }
                      },
                      "id": 659,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "keypers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 262,
                      "src": "6580:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "6580:25:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6556:49:12"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 662,
                      "name": "n",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 651,
                      "src": "6619:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 663,
                      "name": "currentLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 657,
                      "src": "6624:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6619:18:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 689,
                    "nodeType": "Block",
                    "src": "6757:50:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "6771:25:12",
                          "subExpression": {
                            "expression": {
                              "id": 685,
                              "name": "nextConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 299,
                              "src": "6778:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BatchConfig_$281_storage",
                                "typeString": "struct BatchConfig storage ref"
                              }
                            },
                            "id": 686,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "keypers",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 262,
                            "src": "6778:18:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 688,
                        "nodeType": "ExpressionStatement",
                        "src": "6771:25:12"
                      }
                    ]
                  },
                  "id": 690,
                  "nodeType": "IfStatement",
                  "src": "6615:192:12",
                  "trueBody": {
                    "id": 684,
                    "nodeType": "Block",
                    "src": "6639:112:12",
                    "statements": [
                      {
                        "body": {
                          "id": 682,
                          "nodeType": "Block",
                          "src": "6684:57:12",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "expression": {
                                      "id": 675,
                                      "name": "nextConfig",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 299,
                                      "src": "6702:10:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_BatchConfig_$281_storage",
                                        "typeString": "struct BatchConfig storage ref"
                                      }
                                    },
                                    "id": 678,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "keypers",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 262,
                                    "src": "6702:18:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 679,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "pop",
                                  "nodeType": "MemberAccess",
                                  "src": "6702:22:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
                                    "typeString": "function ()"
                                  }
                                },
                                "id": 680,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6702:24:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 681,
                              "nodeType": "ExpressionStatement",
                              "src": "6702:24:12"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 669,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 666,
                            "src": "6672:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 670,
                            "name": "n",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 651,
                            "src": "6676:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "6672:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 683,
                        "initializationExpression": {
                          "assignments": [666],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 666,
                              "mutability": "mutable",
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "scope": 683,
                              "src": "6658:8:12",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              "typeName": {
                                "id": 665,
                                "name": "uint64",
                                "nodeType": "ElementaryTypeName",
                                "src": "6658:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 668,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 667,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6669:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "6658:12:12"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 673,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "6679:3:12",
                            "subExpression": {
                              "id": 672,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 666,
                              "src": "6679:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "id": 674,
                          "nodeType": "ExpressionStatement",
                          "src": "6679:3:12"
                        },
                        "nodeType": "ForStatement",
                        "src": "6653:88:12"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "9d63753e",
            "id": 692,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 654,
                "modifierName": {
                  "id": 653,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2781,
                  "src": "6536:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6536:9:12"
              }
            ],
            "name": "nextConfigRemoveKeypers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 651,
                  "mutability": "mutable",
                  "name": "n",
                  "nodeType": "VariableDeclaration",
                  "scope": 692,
                  "src": "6517:8:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 650,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "6517:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6516:10:12"
            },
            "returnParameters": {
              "id": 655,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6546:0:12"
            },
            "scope": 903,
            "src": "6484:329:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 704,
              "nodeType": "Block",
              "src": "6940:50:12",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "expression": {
                        "id": 699,
                        "name": "nextConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "6957:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BatchConfig_$281_storage",
                          "typeString": "struct BatchConfig storage ref"
                        }
                      },
                      "id": 700,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "keypers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 262,
                      "src": "6957:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 702,
                    "indexExpression": {
                      "id": 701,
                      "name": "_index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 694,
                      "src": "6976:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6957:26:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 698,
                  "id": 703,
                  "nodeType": "Return",
                  "src": "6950:33:12"
                }
              ]
            },
            "functionSelector": "660744dc",
            "id": 705,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextConfigKeypers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 695,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 694,
                  "mutability": "mutable",
                  "name": "_index",
                  "nodeType": "VariableDeclaration",
                  "scope": 705,
                  "src": "6893:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 693,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "6893:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6892:15:12"
            },
            "returnParameters": {
              "id": 698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 697,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 705,
                  "src": "6931:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 696,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6931:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6930:9:12"
            },
            "scope": 903,
            "src": "6866:124:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 717,
              "nodeType": "Block",
              "src": "7059:57:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 712,
                            "name": "nextConfig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 299,
                            "src": "7083:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BatchConfig_$281_storage",
                              "typeString": "struct BatchConfig storage ref"
                            }
                          },
                          "id": 713,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "keypers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 262,
                          "src": "7083:18:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "7083:25:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7076:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint64_$",
                        "typeString": "type(uint64)"
                      },
                      "typeName": {
                        "id": 710,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "7076:6:12",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7076:33:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "functionReturnParameters": 709,
                  "id": 716,
                  "nodeType": "Return",
                  "src": "7069:40:12"
                }
              ]
            },
            "functionSelector": "287447c4",
            "id": 718,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextConfigNumKeypers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 706,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7025:2:12"
            },
            "returnParameters": {
              "id": 709,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 708,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 718,
                  "src": "7051:6:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 707,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "7051:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7050:8:12"
            },
            "scope": 903,
            "src": "6996:120:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 824,
              "nodeType": "Block",
              "src": "7757:1281:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 725,
                            "name": "configs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 297,
                            "src": "7788:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_BatchConfig_$281_storage_$dyn_storage",
                              "typeString": "struct BatchConfig storage ref[] storage ref"
                            }
                          },
                          "id": 726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "7788:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 729,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7810:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint64_$",
                                    "typeString": "type(uint64)"
                                  },
                                  "typeName": {
                                    "id": 728,
                                    "name": "uint64",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7810:6:12",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint64_$",
                                    "typeString": "type(uint64)"
                                  }
                                ],
                                "id": 727,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "7805:4:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 730,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7805:12:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint64",
                                "typeString": "type(uint64)"
                              }
                            },
                            "id": 731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "7805:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 732,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7824:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "7805:20:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "7788:37:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e666967436f6e74726163743a206e756d626572206f6620636f6e6669677320657863656564732075696e743634",
                        "id": 735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7839:50:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a73966878a5037a8e256fca05ecaa0477e23ab31e3b969a191aec1415949bb5",
                          "typeString": "literal_string \"ConfigContract: number of configs exceeds uint64\""
                        },
                        "value": "ConfigContract: number of configs exceeds uint64"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a73966878a5037a8e256fca05ecaa0477e23ab31e3b969a191aec1415949bb5",
                          "typeString": "literal_string \"ConfigContract: number of configs exceeds uint64\""
                        }
                      ],
                      "id": 724,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "7767:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7767:132:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 737,
                  "nodeType": "ExpressionStatement",
                  "src": "7767:132:12"
                },
                {
                  "assignments": [739],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 739,
                      "mutability": "mutable",
                      "name": "_config",
                      "nodeType": "VariableDeclaration",
                      "scope": 824,
                      "src": "7909:26:12",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BatchConfig_$281_memory_ptr",
                        "typeString": "struct BatchConfig"
                      },
                      "typeName": {
                        "id": 738,
                        "name": "BatchConfig",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 281,
                        "src": "7909:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BatchConfig_$281_storage_ptr",
                          "typeString": "struct BatchConfig"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 746,
                  "initialValue": {
                    "baseExpression": {
                      "id": 740,
                      "name": "configs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 297,
                      "src": "7938:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_BatchConfig_$281_storage_$dyn_storage",
                        "typeString": "struct BatchConfig storage ref[] storage ref"
                      }
                    },
                    "id": 745,
                    "indexExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 741,
                          "name": "configs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 297,
                          "src": "7946:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_BatchConfig_$281_storage_$dyn_storage",
                            "typeString": "struct BatchConfig storage ref[] storage ref"
                          }
                        },
                        "id": 742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "7946:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7963:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "7946:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7938:27:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BatchConfig_$281_storage",
                      "typeString": "struct BatchConfig storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7909:56:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 748,
                            "name": "nextConfig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 299,
                            "src": "7997:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BatchConfig_$281_storage",
                              "typeString": "struct BatchConfig storage ref"
                            }
                          },
                          "id": 749,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "startBlockNumber",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 259,
                          "src": "7997:27:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 750,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "8043:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 751,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "8043:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 752,
                            "name": "configChangeHeadsUpBlocks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 301,
                            "src": "8058:25:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "8043:40:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7997:86:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e666967436f6e74726163743a20737461727420626c6f636b20746f6f206561726c79",
                        "id": 755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8097:39:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_476109b77256e679d2e4036d0a452aed61368d246f87746456fb2d6d3aea9b47",
                          "typeString": "literal_string \"ConfigContract: start block too early\""
                        },
                        "value": "ConfigContract: start block too early"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_476109b77256e679d2e4036d0a452aed61368d246f87746456fb2d6d3aea9b47",
                          "typeString": "literal_string \"ConfigContract: start block too early\""
                        }
                      ],
                      "id": 747,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "7976:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7976:170:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 757,
                  "nodeType": "ExpressionStatement",
                  "src": "7976:170:12"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "id": 761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 758,
                        "name": "_config",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 739,
                        "src": "8161:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BatchConfig_$281_memory_ptr",
                          "typeString": "struct BatchConfig memory"
                        }
                      },
                      "id": 759,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "batchSpan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 266,
                      "src": "8161:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8181:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8161:21:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 803,
                    "nodeType": "Block",
                    "src": "8700:207:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              "id": 799,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 795,
                                  "name": "nextConfig",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 299,
                                  "src": "8739:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_BatchConfig_$281_storage",
                                    "typeString": "struct BatchConfig storage ref"
                                  }
                                },
                                "id": 796,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "startBatchIndex",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 257,
                                "src": "8739:26:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 797,
                                  "name": "_config",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 739,
                                  "src": "8769:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_BatchConfig_$281_memory_ptr",
                                    "typeString": "struct BatchConfig memory"
                                  }
                                },
                                "id": 798,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "startBatchIndex",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 257,
                                "src": "8769:23:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "src": "8739:53:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436f6e666967436f6e74726163743a207472616e736974696f6e2066726f6d20696e61637469766520636f6e66696720776974682077726f6e6720737461727420696e646578",
                              "id": 800,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8810:72:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2abf2862f43033f05f30d4a292688a3021256dae34bc691ead9e4b9e4ea96ae7",
                                "typeString": "literal_string \"ConfigContract: transition from inactive config with wrong start index\""
                              },
                              "value": "ConfigContract: transition from inactive config with wrong start index"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2abf2862f43033f05f30d4a292688a3021256dae34bc691ead9e4b9e4ea96ae7",
                                "typeString": "literal_string \"ConfigContract: transition from inactive config with wrong start index\""
                              }
                            ],
                            "id": 794,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "8714:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8714:182:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 802,
                        "nodeType": "ExpressionStatement",
                        "src": "8714:182:12"
                      }
                    ]
                  },
                  "id": 804,
                  "nodeType": "IfStatement",
                  "src": "8157:750:12",
                  "trueBody": {
                    "id": 793,
                    "nodeType": "Block",
                    "src": "8184:510:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              "id": 767,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 763,
                                  "name": "nextConfig",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 299,
                                  "src": "8223:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_BatchConfig_$281_storage",
                                    "typeString": "struct BatchConfig storage ref"
                                  }
                                },
                                "id": 764,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "startBatchIndex",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 257,
                                "src": "8223:26:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "expression": {
                                  "id": 765,
                                  "name": "_config",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 739,
                                  "src": "8252:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_BatchConfig_$281_memory_ptr",
                                    "typeString": "struct BatchConfig memory"
                                  }
                                },
                                "id": 766,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "startBatchIndex",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 257,
                                "src": "8252:23:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "src": "8223:52:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436f6e666967436f6e74726163743a20737461727420626174636820696e64657820746f6f20736d616c6c",
                              "id": 768,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8293:45:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d444f946fe0144b90c11d865fefa58ffb6d9e29bc4a642d0ce74111df635b436",
                                "typeString": "literal_string \"ConfigContract: start batch index too small\""
                              },
                              "value": "ConfigContract: start batch index too small"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d444f946fe0144b90c11d865fefa58ffb6d9e29bc4a642d0ce74111df635b436",
                                "typeString": "literal_string \"ConfigContract: start batch index too small\""
                              }
                            ],
                            "id": 762,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "8198:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8198:154:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 770,
                        "nodeType": "ExpressionStatement",
                        "src": "8198:154:12"
                      },
                      {
                        "assignments": [772],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 772,
                            "mutability": "mutable",
                            "name": "_batchDelta",
                            "nodeType": "VariableDeclaration",
                            "scope": 793,
                            "src": "8366:18:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            "typeName": {
                              "id": 771,
                              "name": "uint64",
                              "nodeType": "ElementaryTypeName",
                              "src": "8366:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 778,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 773,
                              "name": "nextConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 299,
                              "src": "8387:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BatchConfig_$281_storage",
                                "typeString": "struct BatchConfig storage ref"
                              }
                            },
                            "id": 774,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "startBatchIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 257,
                            "src": "8387:26:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "expression": {
                              "id": 775,
                              "name": "_config",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 739,
                              "src": "8432:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BatchConfig_$281_memory_ptr",
                                "typeString": "struct BatchConfig memory"
                              }
                            },
                            "id": 776,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "startBatchIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 257,
                            "src": "8432:23:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "8387:68:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8366:89:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              "id": 789,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                },
                                "id": 786,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 780,
                                    "name": "_config",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 739,
                                    "src": "8494:7:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_BatchConfig_$281_memory_ptr",
                                      "typeString": "struct BatchConfig memory"
                                    }
                                  },
                                  "id": 781,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "startBlockNumber",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 259,
                                  "src": "8494:24:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  },
                                  "id": 785,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 782,
                                      "name": "_config",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 739,
                                      "src": "8521:7:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_BatchConfig_$281_memory_ptr",
                                        "typeString": "struct BatchConfig memory"
                                      }
                                    },
                                    "id": 783,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "batchSpan",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 266,
                                    "src": "8521:17:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 784,
                                    "name": "_batchDelta",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 772,
                                    "src": "8541:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  "src": "8521:31:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "src": "8494:58:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 787,
                                  "name": "nextConfig",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 299,
                                  "src": "8576:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_BatchConfig_$281_storage",
                                    "typeString": "struct BatchConfig storage ref"
                                  }
                                },
                                "id": 788,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "startBlockNumber",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 259,
                                "src": "8576:27:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "src": "8494:109:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436f6e666967436f6e74726163743a20636f6e666967207472616e736974696f6e206e6f74207365616d6c657373",
                              "id": 790,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8621:48:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a20e20ea2e17bf21100601724ad1ae07575064640097e2f0f8ac4aa43c8376dd",
                                "typeString": "literal_string \"ConfigContract: config transition not seamless\""
                              },
                              "value": "ConfigContract: config transition not seamless"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a20e20ea2e17bf21100601724ad1ae07575064640097e2f0f8ac4aa43c8376dd",
                                "typeString": "literal_string \"ConfigContract: config transition not seamless\""
                              }
                            ],
                            "id": 779,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "8469:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8469:214:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 792,
                        "nodeType": "ExpressionStatement",
                        "src": "8469:214:12"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 808,
                        "name": "nextConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "8930:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BatchConfig_$281_storage",
                          "typeString": "struct BatchConfig storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_BatchConfig_$281_storage",
                          "typeString": "struct BatchConfig storage ref"
                        }
                      ],
                      "expression": {
                        "id": 805,
                        "name": "configs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 297,
                        "src": "8917:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_BatchConfig_$281_storage_$dyn_storage",
                          "typeString": "struct BatchConfig storage ref[] storage ref"
                        }
                      },
                      "id": 807,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "8917:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_BatchConfig_$281_storage_$returns$__$",
                        "typeString": "function (struct BatchConfig storage ref)"
                      }
                    },
                    "id": 809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8917:24:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 810,
                  "nodeType": "ExpressionStatement",
                  "src": "8917:24:12"
                },
                {
                  "expression": {
                    "id": 814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 811,
                      "name": "nextConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 299,
                      "src": "8951:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BatchConfig_$281_storage",
                        "typeString": "struct BatchConfig storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 812,
                        "name": "zeroConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 352,
                        "src": "8964:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_BatchConfig_$281_memory_ptr_$",
                          "typeString": "function () pure returns (struct BatchConfig memory)"
                        }
                      },
                      "id": 813,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8964:12:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BatchConfig_$281_memory_ptr",
                        "typeString": "struct BatchConfig memory"
                      }
                    },
                    "src": "8951:25:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BatchConfig_$281_storage",
                      "typeString": "struct BatchConfig storage ref"
                    }
                  },
                  "id": 815,
                  "nodeType": "ExpressionStatement",
                  "src": "8951:25:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 819,
                              "name": "configs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 297,
                              "src": "9015:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_BatchConfig_$281_storage_$dyn_storage",
                                "typeString": "struct BatchConfig storage ref[] storage ref"
                              }
                            },
                            "id": 820,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "9015:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9008:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint64_$",
                            "typeString": "type(uint64)"
                          },
                          "typeName": {
                            "id": 817,
                            "name": "uint64",
                            "nodeType": "ElementaryTypeName",
                            "src": "9008:6:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9008:22:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 816,
                      "name": "ConfigScheduled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 289,
                      "src": "8992:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
                        "typeString": "function (uint64)"
                      }
                    },
                    "id": 822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8992:39:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 823,
                  "nodeType": "EmitStatement",
                  "src": "8987:44:12"
                }
              ]
            },
            "documentation": {
              "id": 719,
              "nodeType": "StructuredDocumentation",
              "src": "7155:548:12",
              "text": "@notice Finalize the `nextConfig` object and add it to the end of the config sequence.\n @notice `startBlockNumber` of the next config must be `configChangeHeadsUpBlocks`\n     blocks in the future. Note that the batch spans are smaller than or equal to\n     `configChangeHeadsUpBlocks`, so the heads up corresponds to at least one batch.\n @notice The transition between the next config and the config currently at the end of the\n     config sequence must be seamless, i.e., there batches must not be cut short."
            },
            "functionSelector": "18b5e830",
            "id": 825,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 722,
                "modifierName": {
                  "id": 721,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2781,
                  "src": "7747:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7747:9:12"
              }
            ],
            "name": "scheduleNextConfig",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 720,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7735:2:12"
            },
            "returnParameters": {
              "id": 723,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7757:0:12"
            },
            "scope": 903,
            "src": "7708:1330:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 901,
              "nodeType": "Block",
              "src": "9540:688:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 834,
                          "name": "_fromStartBlockNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 828,
                          "src": "9571:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 835,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "9595:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 836,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "9595:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 837,
                            "name": "configChangeHeadsUpBlocks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 301,
                            "src": "9610:25:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "9595:40:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9571:64:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e666967436f6e74726163743a2066726f6d20737461727420626c6f636b20746f6f206561726c79",
                        "id": 840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9649:44:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_693ebbb6e6b18e0afbba5714dee40fd47968c53c14f2ce5ad426ecd19e5b7c66",
                          "typeString": "literal_string \"ConfigContract: from start block too early\""
                        },
                        "value": "ConfigContract: from start block too early"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_693ebbb6e6b18e0afbba5714dee40fd47968c53c14f2ce5ad426ecd19e5b7c66",
                          "typeString": "literal_string \"ConfigContract: from start block too early\""
                        }
                      ],
                      "id": 833,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "9550:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9550:153:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 842,
                  "nodeType": "ExpressionStatement",
                  "src": "9550:153:12"
                },
                {
                  "assignments": [844],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 844,
                      "mutability": "mutable",
                      "name": "_lengthBefore",
                      "nodeType": "VariableDeclaration",
                      "scope": 901,
                      "src": "9714:20:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 843,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "9714:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 850,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 847,
                          "name": "configs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 297,
                          "src": "9744:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_BatchConfig_$281_storage_$dyn_storage",
                            "typeString": "struct BatchConfig storage ref[] storage ref"
                          }
                        },
                        "id": 848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "9744:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "9737:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint64_$",
                        "typeString": "type(uint64)"
                      },
                      "typeName": {
                        "id": 845,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "9737:6:12",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9737:22:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9714:45:12"
                },
                {
                  "body": {
                    "id": 883,
                    "nodeType": "Block",
                    "src": "9819:221:12",
                    "statements": [
                      {
                        "assignments": [865],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 865,
                            "mutability": "mutable",
                            "name": "config",
                            "nodeType": "VariableDeclaration",
                            "scope": 883,
                            "src": "9833:26:12",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BatchConfig_$281_storage_ptr",
                              "typeString": "struct BatchConfig"
                            },
                            "typeName": {
                              "id": 864,
                              "name": "BatchConfig",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 281,
                              "src": "9833:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BatchConfig_$281_storage_ptr",
                                "typeString": "struct BatchConfig"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 869,
                        "initialValue": {
                          "baseExpression": {
                            "id": 866,
                            "name": "configs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 297,
                            "src": "9862:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_BatchConfig_$281_storage_$dyn_storage",
                              "typeString": "struct BatchConfig storage ref[] storage ref"
                            }
                          },
                          "id": 868,
                          "indexExpression": {
                            "id": 867,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 852,
                            "src": "9870:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9862:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BatchConfig_$281_storage",
                            "typeString": "struct BatchConfig storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9833:39:12"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 870,
                              "name": "config",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 865,
                              "src": "9890:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BatchConfig_$281_storage_ptr",
                                "typeString": "struct BatchConfig storage pointer"
                              }
                            },
                            "id": 871,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "startBlockNumber",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 259,
                            "src": "9890:23:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 872,
                            "name": "_fromStartBlockNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 828,
                            "src": "9917:21:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "9890:48:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 881,
                          "nodeType": "Block",
                          "src": "9992:38:12",
                          "statements": [
                            {
                              "id": 880,
                              "nodeType": "Break",
                              "src": "10010:5:12"
                            }
                          ]
                        },
                        "id": 882,
                        "nodeType": "IfStatement",
                        "src": "9886:144:12",
                        "trueBody": {
                          "id": 879,
                          "nodeType": "Block",
                          "src": "9940:46:12",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 874,
                                    "name": "configs",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 297,
                                    "src": "9958:7:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_BatchConfig_$281_storage_$dyn_storage",
                                      "typeString": "struct BatchConfig storage ref[] storage ref"
                                    }
                                  },
                                  "id": 876,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "pop",
                                  "nodeType": "MemberAccess",
                                  "src": "9958:11:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
                                    "typeString": "function ()"
                                  }
                                },
                                "id": 877,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9958:13:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 878,
                              "nodeType": "ExpressionStatement",
                              "src": "9958:13:12"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 858,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 852,
                      "src": "9807:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9811:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9807:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 884,
                  "initializationExpression": {
                    "assignments": [852],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 852,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 884,
                        "src": "9775:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 851,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9775:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 857,
                    "initialValue": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 856,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 853,
                          "name": "configs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 297,
                          "src": "9787:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_BatchConfig_$281_storage_$dyn_storage",
                            "typeString": "struct BatchConfig storage ref[] storage ref"
                          }
                        },
                        "id": 854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "9787:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9804:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "9787:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9775:30:12"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 862,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "--",
                      "prefix": false,
                      "src": "9814:3:12",
                      "subExpression": {
                        "id": 861,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 852,
                        "src": "9814:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 863,
                    "nodeType": "ExpressionStatement",
                    "src": "9814:3:12"
                  },
                  "nodeType": "ForStatement",
                  "src": "9770:270:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 886,
                            "name": "configs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 297,
                            "src": "10071:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_BatchConfig_$281_storage_$dyn_storage",
                              "typeString": "struct BatchConfig storage ref[] storage ref"
                            }
                          },
                          "id": 887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "10071:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 888,
                          "name": "_lengthBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 844,
                          "src": "10088:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "10071:30:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e666967436f6e74726163743a206e6f20636f6e6669677320756e7363686564756c6564",
                        "id": 890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10115:40:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5639d26c51bb7211d5737c73b35171f90c2212e1ec6f58601d6c77713b1cedc1",
                          "typeString": "literal_string \"ConfigContract: no configs unscheduled\""
                        },
                        "value": "ConfigContract: no configs unscheduled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5639d26c51bb7211d5737c73b35171f90c2212e1ec6f58601d6c77713b1cedc1",
                          "typeString": "literal_string \"ConfigContract: no configs unscheduled\""
                        }
                      ],
                      "id": 885,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "10050:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10050:115:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 892,
                  "nodeType": "ExpressionStatement",
                  "src": "10050:115:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 896,
                              "name": "configs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 297,
                              "src": "10205:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_BatchConfig_$281_storage_$dyn_storage",
                                "typeString": "struct BatchConfig storage ref[] storage ref"
                              }
                            },
                            "id": 897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "10205:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10198:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint64_$",
                            "typeString": "type(uint64)"
                          },
                          "typeName": {
                            "id": 894,
                            "name": "uint64",
                            "nodeType": "ElementaryTypeName",
                            "src": "10198:6:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10198:22:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 893,
                      "name": "ConfigUnscheduled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 294,
                      "src": "10180:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
                        "typeString": "function (uint64)"
                      }
                    },
                    "id": 899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10180:41:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 900,
                  "nodeType": "EmitStatement",
                  "src": "10175:46:12"
                }
              ]
            },
            "documentation": {
              "id": 826,
              "nodeType": "StructuredDocumentation",
              "src": "9044:395:12",
              "text": "@notice Remove configs from the end.\n @param _fromStartBlockNumber All configs with a start block number greater than or equal\n     to this will be removed.\n @notice `_fromStartBlockNumber` must be `configChangeHeadsUpBlocks` blocks in the future.\n @notice This method can remove one or more configs. If no config would be removed, an error\n     is thrown."
            },
            "functionSelector": "c9515c58",
            "id": 902,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 831,
                "modifierName": {
                  "id": 830,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2781,
                  "src": "9526:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "9526:9:12"
              }
            ],
            "name": "unscheduleConfigs",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 828,
                  "mutability": "mutable",
                  "name": "_fromStartBlockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 902,
                  "src": "9471:28:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 827,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "9471:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9470:30:12"
            },
            "returnParameters": {
              "id": 832,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9540:0:12"
            },
            "scope": 903,
            "src": "9444:784:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 904,
        "src": "1710:8520:12"
      }
    ],
    "src": "33:10198:12"
  },
  "bytecode": "60a06040523480156200001157600080fd5b506040516200250e3803806200250e8339810160408190526200003491620003ae565b60006200004062000249565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506001620000966200024d565b815460018181018455600093845260209384902083516005909302018054858501516001600160401b039081166801000000000000000002600160401b600160801b0319919095166001600160401b0319909216919091171692909217825560408301518051939492936200011493928501929190910190620002c8565b50606082015160028201805460808086015160a087015160c0808901516001600160401b03199586166001600160401b0398891617600160401b600160801b03191668010000000000000000948916850217600160801b600160c01b031916600160801b93891693909302929092176001600160c01b03908116600160c01b93891684021790965560e0808a015160038a0180546101008d01519816918a1691909117600160401b600160e01b0319166001600160a01b0397881690950294909417909355610120890151600490980180546101408b0151610160909b01516001600160a01b0319909116999096169890981763ffffffff60a01b1916600160a01b9990931c989098029190911790931691909316909102179091556001600160c01b03199290911b919091169052620003de565b3390565b6200025762000332565b506040805161018081018252600080825260208083018290528351828152908101845292820192909252606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915290565b82805482825590600052602060002090810192821562000320579160200282015b828111156200032057825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620002e9565b506200032e92915062000397565b5090565b604080516101808101825260008082526020820181905260609282018390529181018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915290565b5b808211156200032e576000815560010162000398565b600060208284031215620003c0578081fd5b81516001600160401b0381168114620003d7578182fd5b9392505050565b60805160c01c6121036200040b6000398061061c5280610c095280611307528061148c52506121036000f3fe608060405234801561001057600080fd5b50600436106101a85760003560e01c806373ed43db116100f9578063cd21aee711610097578063d9a58f2411610071578063d9a58f2414610351578063e008cb6214610364578063f2fde38b14610384578063fa84ea0214610397576101a8565b8063cd21aee714610323578063ce9919b81461032b578063d1ac2e521461033e576101a8565b80639d63753e116100d35780639d63753e146102d7578063bcf67268146102ea578063c7c6e9f4146102fd578063c9515c5814610310576101a8565b806373ed43db146102a957806381e905a3146102bc5780638da5cb5b146102cf576101a8565b80635dc6fdb81161016657806364e9f6711161014057806364e9f67114610266578063660744dc1461026e578063715018a61461028e578063719f2e1714610296576101a8565b80635dc6fdb81461022d578063606df5141461024057806362fced0e14610253576101a8565b806298fa22146101ad5780630f0aae6f146101e057806318b5e830146101f5578063287447c4146101ff5780632b2cc6c414610207578063564093fc1461021a575b600080fd5b6101c06101bb366004611b3e565b6103aa565b6040516101d79b9a99989796959493929190611fff565b60405180910390f35b6101e861043a565b6040516101d79190611feb565b6101fd610440565b005b6101e8610aaa565b6101fd610215366004611a7a565b610ab0565b6101fd610228366004611b56565b610b34565b6101fd61023b366004611b56565b610baf565b6101fd61024e366004611b56565b610c85565b6101fd610261366004611aa8565b610d05565b6101c0610e06565b61028161027c366004611b56565b610e72565b6040516101d79190611c0d565b6101fd610eaa565b6101fd6102a4366004611b56565b610f4c565b6101fd6102b7366004611b56565b610fcc565b6101fd6102ca366004611b56565b611047565b6102816110cc565b6101fd6102e5366004611b56565b6110db565b6101fd6102f8366004611a7a565b6111ae565b6101fd61030b366004611b56565b611228565b6101fd61031e366004611b56565b6112ad565b6101e861148a565b6101fd610339366004611b56565b6114ae565b6101fd61034c366004611b16565b611529565b6101e861035f366004611b56565b6115a5565b610377610372366004611b56565b6115d7565b6040516101d79190611eef565b6101fd610392366004611a7a565b611755565b6102816103a5366004611b70565b61184d565b600181815481106103ba57600080fd5b600091825260209091206005909102018054600282015460038301546004909301546001600160401b038084169550600160401b9384900481169483821694808504831694600160801b8104841694600160c01b91829004851694848116946001600160a01b03949004841693821692600160a01b830460e01b9204168b565b60015490565b6104486118a6565b6000546001600160a01b03908116911614610498576040805162461bcd60e51b815260206004820181905260248201526000805160206120ae833981519152604482015290519081900360640190fd5b60015467fffffffffffffffe116104ca5760405162461bcd60e51b81526004016104c190611c75565b60405180910390fd5b600180546000919060001981019081106104e057fe5b60009182526020918290206040805161018081018252600590930290910180546001600160401b038082168552600160401b9091041683850152600181018054835181870281018701855281815294959294938601939283018282801561057057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610552575b50505091835250506002828101546001600160401b038082166020850152600160401b80830482166040860152600160801b830482166060860152600160c01b9283900482166080860152600386015480831660a08701528190046001600160a01b0390811660c087015260049096015495861660e080870191909152600160a01b8704901b6001600160e01b03191661010086015291909404841661012090930192909252549293507f0000000000000000000000000000000000000000000000000000000000000000821643019204161161065f5760405162461bcd60e51b81526004016104c190611d81565b60808101516001600160401b0316156106f25780516002546001600160401b039182169116116106a15760405162461bcd60e51b81526004016104c190611ea4565b8051600254608083015160208401516001600160401b038084169490940393918402018116600160401b90920416146106ec5760405162461bcd60e51b81526004016104c190611e56565b50610721565b80516002546001600160401b039081169116146107215760405162461bcd60e51b81526004016104c190611cc5565b6001805480820182556000919091526002805460059092027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf68101805467ffffffffffffffff19166001600160401b03948516178082558354600160401b9081900490951690940267ffffffffffffffff60401b19909416939093178355600380549293926107d3927fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf7019190611923565b5060028281018054918301805467ffffffffffffffff199081166001600160401b03948516178083558354600160401b908190048616810267ffffffffffffffff60401b19909216919091178084558454600160801b9081900487160267ffffffffffffffff60801b19909116178084559354600160c01b90819004861681026001600160c01b03958616179093556003808801805491880180549094169187169190911780845590546001600160a01b03908390048116909202600160401b600160e01b031990911617909155600495860180549690950180546001600160a01b0319169690911695909517808655845463ffffffff600160a01b91829004160263ffffffff60a01b1990911617808655935481900490921690910291161790556108fd6118aa565b80516002805460208085015167ffffffffffffffff199092166001600160401b039485161767ffffffffffffffff60401b1916600160401b94909216939093021781556040830151805191926109599260039290910190611973565b506060820151600282018054608085015160a086015160c087015167ffffffffffffffff199384166001600160401b039687161767ffffffffffffffff60401b1916600160401b93871684021767ffffffffffffffff60801b1916600160801b92871692909202919091176001600160c01b03908116600160c01b92871683021790945560e0808801516003880180546101008b0151961691881691909117600160401b600160e01b0319166001600160a01b039586169094029390931790925561012087015160049096018054610140890151610160909901516001600160a01b0319909116979094169690961763ffffffff60a01b1916600160a01b9790921c969096021790911691169092029190911790556001546040517f38889ef980014448a73b6e5dc5579ba1a4b7bd213a586b3f4832351448c48ae691610a9f91611feb565b60405180910390a150565b60035490565b610ab86118a6565b6000546001600160a01b03908116911614610b08576040805162461bcd60e51b815260206004820181905260248201526000805160206120ae833981519152604482015290519081900360640190fd5b600580546001600160a01b03909216600160401b02600160401b600160e01b0319909216919091179055565b610b3c6118a6565b6000546001600160a01b03908116911614610b8c576040805162461bcd60e51b815260206004820181905260248201526000805160206120ae833981519152604482015290519081900360640190fd5b6005805467ffffffffffffffff19166001600160401b0392909216919091179055565b610bb76118a6565b6000546001600160a01b03908116911614610c07576040805162461bcd60e51b815260206004820181905260248201526000805160206120ae833981519152604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160401b0316816001600160401b031610610c585760405162461bcd60e51b81526004016104c190611c21565b600480546001600160401b03909216600160401b0267ffffffffffffffff60401b19909216919091179055565b610c8d6118a6565b6000546001600160a01b03908116911614610cdd576040805162461bcd60e51b815260206004820181905260248201526000805160206120ae833981519152604482015290519081900360640190fd5b600480546001600160401b03909216600160c01b026001600160c01b03909216919091179055565b610d0d6118a6565b6000546001600160a01b03908116911614610d5d576040805162461bcd60e51b815260206004820181905260248201526000805160206120ae833981519152604482015290519081900360640190fd5b6003546001600160401b038290031015610d895760405162461bcd60e51b81526004016104c190611d31565b60005b6001600160401b038116821115610e0157600383836001600160401b038416818110610db457fe5b9050602002016020810190610dc99190611a7a565b815460018082018455600093845260209093200180546001600160a01b0319166001600160a01b039290921691909117905501610d8c565b505050565b6002546004546005546006546001600160401b0380851694600160401b9081900482169482811694828204841694600160801b8304851694600160c01b938490048116948184169493046001600160a01b039081169390831692600160a01b810460e01b92919004168b565b60006002600101826001600160401b031681548110610e8d57fe5b6000918252602090912001546001600160a01b031690505b919050565b610eb26118a6565b6000546001600160a01b03908116911614610f02576040805162461bcd60e51b815260206004820181905260248201526000805160206120ae833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b610f546118a6565b6000546001600160a01b03908116911614610fa4576040805162461bcd60e51b815260206004820181905260248201526000805160206120ae833981519152604482015290519081900360640190fd5b600680546001600160401b03909216600160c01b026001600160c01b03909216919091179055565b610fd46118a6565b6000546001600160a01b03908116911614611024576040805162461bcd60e51b815260206004820181905260248201526000805160206120ae833981519152604482015290519081900360640190fd5b6004805467ffffffffffffffff19166001600160401b0392909216919091179055565b61104f6118a6565b6000546001600160a01b0390811691161461109f576040805162461bcd60e51b815260206004820181905260248201526000805160206120ae833981519152604482015290519081900360640190fd5b600280546001600160401b03909216600160401b0267ffffffffffffffff60401b19909216919091179055565b6000546001600160a01b031690565b6110e36118a6565b6000546001600160a01b03908116911614611133576040805162461bcd60e51b815260206004820181905260248201526000805160206120ae833981519152604482015290519081900360640190fd5b6003546001600160401b038216811061119e5760005b826001600160401b0316816001600160401b0316101561119857600380548061116e57fe5b600082815260209020810160001990810180546001600160a01b0319169055019055600101611149565b506111aa565b6111aa600360006119c8565b5050565b6111b66118a6565b6000546001600160a01b03908116911614611206576040805162461bcd60e51b815260206004820181905260248201526000805160206120ae833981519152604482015290519081900360640190fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6112306118a6565b6000546001600160a01b03908116911614611280576040805162461bcd60e51b815260206004820181905260248201526000805160206120ae833981519152604482015290519081900360640190fd5b600480546001600160401b03909216600160801b0267ffffffffffffffff60801b19909216919091179055565b6112b56118a6565b6000546001600160a01b03908116911614611305576040805162461bcd60e51b815260206004820181905260248201526000805160206120ae833981519152604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160401b03164301816001600160401b0316116113585760405162461bcd60e51b81526004016104c190611e0c565b60015460001981015b80156114225760006001828154811061137657fe5b6000918252602090912060059091020180549091506001600160401b03808616600160401b90920416106114125760018054806113af57fe5b60008281526020812060056000199093019283020180546fffffffffffffffffffffffffffffffff19168155906113e960018301826119c8565b506000600282018190556003820180546001600160e01b03191690556004909101559055611418565b50611422565b5060001901611361565b506001546001600160401b0382161161144d5760405162461bcd60e51b81526004016104c190611dc6565b6001546040517f202adac5e4f5fa65a6e6ec3afc99da8986c020c2799f4e0aee50552a05a0bfdf9161147e91611feb565b60405180910390a15050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6114b66118a6565b6000546001600160a01b03908116911614611506576040805162461bcd60e51b815260206004820181905260248201526000805160206120ae833981519152604482015290519081900360640190fd5b6002805467ffffffffffffffff19166001600160401b0392909216919091179055565b6115316118a6565b6000546001600160a01b03908116911614611581576040805162461bcd60e51b815260206004820181905260248201526000805160206120ae833981519152604482015290519081900360640190fd5b6006805460e09290921c600160a01b0263ffffffff60a01b19909216919091179055565b60006001826001600160401b0316815481106115bd57fe5b600091825260209091206001600590920201015492915050565b6115df6119e9565b600154600019015b6000600182815481106115f657fe5b6000918252602090912060059091020180549091506001600160401b0380861691161161174b57604080516101808101825282546001600160401b038082168352600160401b9091041660208083019190915260018401805484518184028101840186528181529394869490860193909291908301828280156116a257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611684575b505050918352505060028201546001600160401b038082166020840152600160401b80830482166040850152600160801b830482166060850152600160c01b9283900482166080850152600385015480831660a0860152046001600160a01b0390811660c085015260049094015493841660e080850191909152600160a01b8504901b6001600160e01b0319166101008401529204909116610120909101529250610ea5915050565b50600019016115e7565b61175d6118a6565b6000546001600160a01b039081169116146117ad576040805162461bcd60e51b815260206004820181905260248201526000805160206120ae833981519152604482015290519081900360640190fd5b6001600160a01b0381166117f25760405162461bcd60e51b81526004018080602001828103825260268152602001806120886026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006001836001600160401b03168154811061186557fe5b9060005260206000209060050201600101826001600160401b03168154811061188a57fe5b6000918252602090912001546001600160a01b03169392505050565b3390565b6118b26119e9565b506040805161018081018252600080825260208083018290528351828152908101845292820192909252606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915290565b8280548282559060005260206000209081019282156119635760005260206000209182015b82811115611963578254825591600101919060010190611948565b5061196f929150611a4e565b5090565b828054828255906000526020600020908101928215611963579160200282015b8281111561196357825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611993565b50805460008255906000526020600020908101906119e69190611a4e565b50565b604080516101808101825260008082526020820181905260609282018390529181018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915290565b5b8082111561196f5760008155600101611a4f565b80356001600160401b0381168114610ea557600080fd5b600060208284031215611a8b578081fd5b81356001600160a01b0381168114611aa1578182fd5b9392505050565b60008060208385031215611aba578081fd5b82356001600160401b0380821115611ad0578283fd5b818501915085601f830112611ae3578283fd5b813581811115611af1578384fd5b8660208083028501011115611b04578384fd5b60209290920196919550909350505050565b600060208284031215611b27578081fd5b81356001600160e01b031981168114611aa1578182fd5b600060208284031215611b4f578081fd5b5035919050565b600060208284031215611b67578081fd5b611aa182611a63565b60008060408385031215611b82578182fd5b611b8b83611a63565b9150611b9960208401611a63565b90509250929050565b6001600160a01b03169052565b6000815180845260208085019450808401835b83811015611be75781516001600160a01b031687529582019590820190600101611bc2565b509495945050505050565b6001600160e01b0319169052565b6001600160401b03169052565b6001600160a01b0391909116815260200190565b60208082526034908201527f436f6e666967436f6e74726163743a206261746368207370616e206e6f7420736040820152730686f72746572207468616e2068656164732075760641b606082015260800190565b60208082526030908201527f436f6e666967436f6e74726163743a206e756d626572206f6620636f6e66696760408201526f1cc8195e18d959591cc81d5a5b9d0d8d60821b606082015260800190565b60208082526046908201527f436f6e666967436f6e74726163743a207472616e736974696f6e2066726f6d2060408201527f696e61637469766520636f6e66696720776974682077726f6e67207374617274606082015265040d2dcc8caf60d31b608082015260a00190565b60208082526030908201527f436f6e666967436f6e74726163743a206e756d626572206f66206b657970657260408201526f1cc8195e18d959591cc81d5a5b9d0d8d60821b606082015260800190565b60208082526025908201527f436f6e666967436f6e74726163743a20737461727420626c6f636b20746f6f206040820152646561726c7960d81b606082015260800190565b60208082526026908201527f436f6e666967436f6e74726163743a206e6f20636f6e6669677320756e73636860408201526519591d5b195960d21b606082015260800190565b6020808252602a908201527f436f6e666967436f6e74726163743a2066726f6d20737461727420626c6f636b60408201526920746f6f206561726c7960b01b606082015260800190565b6020808252602e908201527f436f6e666967436f6e74726163743a20636f6e666967207472616e736974696f60408201526d6e206e6f74207365616d6c65737360901b606082015260800190565b6020808252602b908201527f436f6e666967436f6e74726163743a20737461727420626174636820696e646560408201526a1e081d1bdbc81cdb585b1b60aa1b606082015260800190565b600060208252611f03602083018451611c00565b6020830151611f156040840182611c00565b506040830151610180806060850152611f326101a0850183611baf565b91506060850151611f466080860182611c00565b506080850151611f5960a0860182611c00565b5060a0850151611f6c60c0860182611c00565b5060c0850151611f7f60e0860182611c00565b5060e0850151610100611f9481870183611c00565b8601519050610120611fa886820183611ba2565b8601519050610140611fbc86820183611ba2565b8601519050610160611fd086820183611bf2565b8601519050611fe185830182611c00565b5090949350505050565b6001600160401b0391909116815260200190565b6001600160401b038c811682528b811660208301528a811660408301528981166060830152888116608083015287811660a0830152861660c08201526001600160a01b0385811660e083015284166101008201526001600160e01b031983166101208201526101608101612077610140830184611c00565b9c9b50505050505050505050505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220b278579041921abc3cbefc7c9b99b068ef0d85090c8ddcf24c07c9879925088864736f6c63430007060033",
  "bytecodeSha1": "7c7bef0b8929601005bea9bb3b3ce7100a8132bd",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.7.6+commit.7338295f"
  },
  "contractName": "ConfigContract",
  "coverageMap": {
    "branches": {},
    "statements": {}
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.3.0/Context",
    "OpenZeppelin/openzeppelin-contracts@3.3.0/Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101a85760003560e01c806373ed43db116100f9578063cd21aee711610097578063d9a58f2411610071578063d9a58f2414610351578063e008cb6214610364578063f2fde38b14610384578063fa84ea0214610397576101a8565b8063cd21aee714610323578063ce9919b81461032b578063d1ac2e521461033e576101a8565b80639d63753e116100d35780639d63753e146102d7578063bcf67268146102ea578063c7c6e9f4146102fd578063c9515c5814610310576101a8565b806373ed43db146102a957806381e905a3146102bc5780638da5cb5b146102cf576101a8565b80635dc6fdb81161016657806364e9f6711161014057806364e9f67114610266578063660744dc1461026e578063715018a61461028e578063719f2e1714610296576101a8565b80635dc6fdb81461022d578063606df5141461024057806362fced0e14610253576101a8565b806298fa22146101ad5780630f0aae6f146101e057806318b5e830146101f5578063287447c4146101ff5780632b2cc6c414610207578063564093fc1461021a575b600080fd5b6101c06101bb366004611b3e565b6103aa565b6040516101d79b9a99989796959493929190611fff565b60405180910390f35b6101e861043a565b6040516101d79190611feb565b6101fd610440565b005b6101e8610aaa565b6101fd610215366004611a7a565b610ab0565b6101fd610228366004611b56565b610b34565b6101fd61023b366004611b56565b610baf565b6101fd61024e366004611b56565b610c85565b6101fd610261366004611aa8565b610d05565b6101c0610e06565b61028161027c366004611b56565b610e72565b6040516101d79190611c0d565b6101fd610eaa565b6101fd6102a4366004611b56565b610f4c565b6101fd6102b7366004611b56565b610fcc565b6101fd6102ca366004611b56565b611047565b6102816110cc565b6101fd6102e5366004611b56565b6110db565b6101fd6102f8366004611a7a565b6111ae565b6101fd61030b366004611b56565b611228565b6101fd61031e366004611b56565b6112ad565b6101e861148a565b6101fd610339366004611b56565b6114ae565b6101fd61034c366004611b16565b611529565b6101e861035f366004611b56565b6115a5565b610377610372366004611b56565b6115d7565b6040516101d79190611eef565b6101fd610392366004611a7a565b611755565b6102816103a5366004611b70565b61184d565b600181815481106103ba57600080fd5b600091825260209091206005909102018054600282015460038301546004909301546001600160401b038084169550600160401b9384900481169483821694808504831694600160801b8104841694600160c01b91829004851694848116946001600160a01b03949004841693821692600160a01b830460e01b9204168b565b60015490565b6104486118a6565b6000546001600160a01b03908116911614610498576040805162461bcd60e51b815260206004820181905260248201526000805160206120ae833981519152604482015290519081900360640190fd5b60015467fffffffffffffffe116104ca5760405162461bcd60e51b81526004016104c190611c75565b60405180910390fd5b600180546000919060001981019081106104e057fe5b60009182526020918290206040805161018081018252600590930290910180546001600160401b038082168552600160401b9091041683850152600181018054835181870281018701855281815294959294938601939283018282801561057057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610552575b50505091835250506002828101546001600160401b038082166020850152600160401b80830482166040860152600160801b830482166060860152600160c01b9283900482166080860152600386015480831660a08701528190046001600160a01b0390811660c087015260049096015495861660e080870191909152600160a01b8704901b6001600160e01b03191661010086015291909404841661012090930192909252549293507f0000000000000000000000000000000000000000000000000000000000000000821643019204161161065f5760405162461bcd60e51b81526004016104c190611d81565b60808101516001600160401b0316156106f25780516002546001600160401b039182169116116106a15760405162461bcd60e51b81526004016104c190611ea4565b8051600254608083015160208401516001600160401b038084169490940393918402018116600160401b90920416146106ec5760405162461bcd60e51b81526004016104c190611e56565b50610721565b80516002546001600160401b039081169116146107215760405162461bcd60e51b81526004016104c190611cc5565b6001805480820182556000919091526002805460059092027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf68101805467ffffffffffffffff19166001600160401b03948516178082558354600160401b9081900490951690940267ffffffffffffffff60401b19909416939093178355600380549293926107d3927fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf7019190611923565b5060028281018054918301805467ffffffffffffffff199081166001600160401b03948516178083558354600160401b908190048616810267ffffffffffffffff60401b19909216919091178084558454600160801b9081900487160267ffffffffffffffff60801b19909116178084559354600160c01b90819004861681026001600160c01b03958616179093556003808801805491880180549094169187169190911780845590546001600160a01b03908390048116909202600160401b600160e01b031990911617909155600495860180549690950180546001600160a01b0319169690911695909517808655845463ffffffff600160a01b91829004160263ffffffff60a01b1990911617808655935481900490921690910291161790556108fd6118aa565b80516002805460208085015167ffffffffffffffff199092166001600160401b039485161767ffffffffffffffff60401b1916600160401b94909216939093021781556040830151805191926109599260039290910190611973565b506060820151600282018054608085015160a086015160c087015167ffffffffffffffff199384166001600160401b039687161767ffffffffffffffff60401b1916600160401b93871684021767ffffffffffffffff60801b1916600160801b92871692909202919091176001600160c01b03908116600160c01b92871683021790945560e0808801516003880180546101008b0151961691881691909117600160401b600160e01b0319166001600160a01b039586169094029390931790925561012087015160049096018054610140890151610160909901516001600160a01b0319909116979094169690961763ffffffff60a01b1916600160a01b9790921c969096021790911691169092029190911790556001546040517f38889ef980014448a73b6e5dc5579ba1a4b7bd213a586b3f4832351448c48ae691610a9f91611feb565b60405180910390a150565b60035490565b610ab86118a6565b6000546001600160a01b03908116911614610b08576040805162461bcd60e51b815260206004820181905260248201526000805160206120ae833981519152604482015290519081900360640190fd5b600580546001600160a01b03909216600160401b02600160401b600160e01b0319909216919091179055565b610b3c6118a6565b6000546001600160a01b03908116911614610b8c576040805162461bcd60e51b815260206004820181905260248201526000805160206120ae833981519152604482015290519081900360640190fd5b6005805467ffffffffffffffff19166001600160401b0392909216919091179055565b610bb76118a6565b6000546001600160a01b03908116911614610c07576040805162461bcd60e51b815260206004820181905260248201526000805160206120ae833981519152604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160401b0316816001600160401b031610610c585760405162461bcd60e51b81526004016104c190611c21565b600480546001600160401b03909216600160401b0267ffffffffffffffff60401b19909216919091179055565b610c8d6118a6565b6000546001600160a01b03908116911614610cdd576040805162461bcd60e51b815260206004820181905260248201526000805160206120ae833981519152604482015290519081900360640190fd5b600480546001600160401b03909216600160c01b026001600160c01b03909216919091179055565b610d0d6118a6565b6000546001600160a01b03908116911614610d5d576040805162461bcd60e51b815260206004820181905260248201526000805160206120ae833981519152604482015290519081900360640190fd5b6003546001600160401b038290031015610d895760405162461bcd60e51b81526004016104c190611d31565b60005b6001600160401b038116821115610e0157600383836001600160401b038416818110610db457fe5b9050602002016020810190610dc99190611a7a565b815460018082018455600093845260209093200180546001600160a01b0319166001600160a01b039290921691909117905501610d8c565b505050565b6002546004546005546006546001600160401b0380851694600160401b9081900482169482811694828204841694600160801b8304851694600160c01b938490048116948184169493046001600160a01b039081169390831692600160a01b810460e01b92919004168b565b60006002600101826001600160401b031681548110610e8d57fe5b6000918252602090912001546001600160a01b031690505b919050565b610eb26118a6565b6000546001600160a01b03908116911614610f02576040805162461bcd60e51b815260206004820181905260248201526000805160206120ae833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b610f546118a6565b6000546001600160a01b03908116911614610fa4576040805162461bcd60e51b815260206004820181905260248201526000805160206120ae833981519152604482015290519081900360640190fd5b600680546001600160401b03909216600160c01b026001600160c01b03909216919091179055565b610fd46118a6565b6000546001600160a01b03908116911614611024576040805162461bcd60e51b815260206004820181905260248201526000805160206120ae833981519152604482015290519081900360640190fd5b6004805467ffffffffffffffff19166001600160401b0392909216919091179055565b61104f6118a6565b6000546001600160a01b0390811691161461109f576040805162461bcd60e51b815260206004820181905260248201526000805160206120ae833981519152604482015290519081900360640190fd5b600280546001600160401b03909216600160401b0267ffffffffffffffff60401b19909216919091179055565b6000546001600160a01b031690565b6110e36118a6565b6000546001600160a01b03908116911614611133576040805162461bcd60e51b815260206004820181905260248201526000805160206120ae833981519152604482015290519081900360640190fd5b6003546001600160401b038216811061119e5760005b826001600160401b0316816001600160401b0316101561119857600380548061116e57fe5b600082815260209020810160001990810180546001600160a01b0319169055019055600101611149565b506111aa565b6111aa600360006119c8565b5050565b6111b66118a6565b6000546001600160a01b03908116911614611206576040805162461bcd60e51b815260206004820181905260248201526000805160206120ae833981519152604482015290519081900360640190fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6112306118a6565b6000546001600160a01b03908116911614611280576040805162461bcd60e51b815260206004820181905260248201526000805160206120ae833981519152604482015290519081900360640190fd5b600480546001600160401b03909216600160801b0267ffffffffffffffff60801b19909216919091179055565b6112b56118a6565b6000546001600160a01b03908116911614611305576040805162461bcd60e51b815260206004820181905260248201526000805160206120ae833981519152604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160401b03164301816001600160401b0316116113585760405162461bcd60e51b81526004016104c190611e0c565b60015460001981015b80156114225760006001828154811061137657fe5b6000918252602090912060059091020180549091506001600160401b03808616600160401b90920416106114125760018054806113af57fe5b60008281526020812060056000199093019283020180546fffffffffffffffffffffffffffffffff19168155906113e960018301826119c8565b506000600282018190556003820180546001600160e01b03191690556004909101559055611418565b50611422565b5060001901611361565b506001546001600160401b0382161161144d5760405162461bcd60e51b81526004016104c190611dc6565b6001546040517f202adac5e4f5fa65a6e6ec3afc99da8986c020c2799f4e0aee50552a05a0bfdf9161147e91611feb565b60405180910390a15050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6114b66118a6565b6000546001600160a01b03908116911614611506576040805162461bcd60e51b815260206004820181905260248201526000805160206120ae833981519152604482015290519081900360640190fd5b6002805467ffffffffffffffff19166001600160401b0392909216919091179055565b6115316118a6565b6000546001600160a01b03908116911614611581576040805162461bcd60e51b815260206004820181905260248201526000805160206120ae833981519152604482015290519081900360640190fd5b6006805460e09290921c600160a01b0263ffffffff60a01b19909216919091179055565b60006001826001600160401b0316815481106115bd57fe5b600091825260209091206001600590920201015492915050565b6115df6119e9565b600154600019015b6000600182815481106115f657fe5b6000918252602090912060059091020180549091506001600160401b0380861691161161174b57604080516101808101825282546001600160401b038082168352600160401b9091041660208083019190915260018401805484518184028101840186528181529394869490860193909291908301828280156116a257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611684575b505050918352505060028201546001600160401b038082166020840152600160401b80830482166040850152600160801b830482166060850152600160c01b9283900482166080850152600385015480831660a0860152046001600160a01b0390811660c085015260049094015493841660e080850191909152600160a01b8504901b6001600160e01b0319166101008401529204909116610120909101529250610ea5915050565b50600019016115e7565b61175d6118a6565b6000546001600160a01b039081169116146117ad576040805162461bcd60e51b815260206004820181905260248201526000805160206120ae833981519152604482015290519081900360640190fd5b6001600160a01b0381166117f25760405162461bcd60e51b81526004018080602001828103825260268152602001806120886026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006001836001600160401b03168154811061186557fe5b9060005260206000209060050201600101826001600160401b03168154811061188a57fe5b6000918252602090912001546001600160a01b03169392505050565b3390565b6118b26119e9565b506040805161018081018252600080825260208083018290528351828152908101845292820192909252606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915290565b8280548282559060005260206000209081019282156119635760005260206000209182015b82811115611963578254825591600101919060010190611948565b5061196f929150611a4e565b5090565b828054828255906000526020600020908101928215611963579160200282015b8281111561196357825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611993565b50805460008255906000526020600020908101906119e69190611a4e565b50565b604080516101808101825260008082526020820181905260609282018390529181018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915290565b5b8082111561196f5760008155600101611a4f565b80356001600160401b0381168114610ea557600080fd5b600060208284031215611a8b578081fd5b81356001600160a01b0381168114611aa1578182fd5b9392505050565b60008060208385031215611aba578081fd5b82356001600160401b0380821115611ad0578283fd5b818501915085601f830112611ae3578283fd5b813581811115611af1578384fd5b8660208083028501011115611b04578384fd5b60209290920196919550909350505050565b600060208284031215611b27578081fd5b81356001600160e01b031981168114611aa1578182fd5b600060208284031215611b4f578081fd5b5035919050565b600060208284031215611b67578081fd5b611aa182611a63565b60008060408385031215611b82578182fd5b611b8b83611a63565b9150611b9960208401611a63565b90509250929050565b6001600160a01b03169052565b6000815180845260208085019450808401835b83811015611be75781516001600160a01b031687529582019590820190600101611bc2565b509495945050505050565b6001600160e01b0319169052565b6001600160401b03169052565b6001600160a01b0391909116815260200190565b60208082526034908201527f436f6e666967436f6e74726163743a206261746368207370616e206e6f7420736040820152730686f72746572207468616e2068656164732075760641b606082015260800190565b60208082526030908201527f436f6e666967436f6e74726163743a206e756d626572206f6620636f6e66696760408201526f1cc8195e18d959591cc81d5a5b9d0d8d60821b606082015260800190565b60208082526046908201527f436f6e666967436f6e74726163743a207472616e736974696f6e2066726f6d2060408201527f696e61637469766520636f6e66696720776974682077726f6e67207374617274606082015265040d2dcc8caf60d31b608082015260a00190565b60208082526030908201527f436f6e666967436f6e74726163743a206e756d626572206f66206b657970657260408201526f1cc8195e18d959591cc81d5a5b9d0d8d60821b606082015260800190565b60208082526025908201527f436f6e666967436f6e74726163743a20737461727420626c6f636b20746f6f206040820152646561726c7960d81b606082015260800190565b60208082526026908201527f436f6e666967436f6e74726163743a206e6f20636f6e6669677320756e73636860408201526519591d5b195960d21b606082015260800190565b6020808252602a908201527f436f6e666967436f6e74726163743a2066726f6d20737461727420626c6f636b60408201526920746f6f206561726c7960b01b606082015260800190565b6020808252602e908201527f436f6e666967436f6e74726163743a20636f6e666967207472616e736974696f60408201526d6e206e6f74207365616d6c65737360901b606082015260800190565b6020808252602b908201527f436f6e666967436f6e74726163743a20737461727420626174636820696e646560408201526a1e081d1bdbc81cdb585b1b60aa1b606082015260800190565b600060208252611f03602083018451611c00565b6020830151611f156040840182611c00565b506040830151610180806060850152611f326101a0850183611baf565b91506060850151611f466080860182611c00565b506080850151611f5960a0860182611c00565b5060a0850151611f6c60c0860182611c00565b5060c0850151611f7f60e0860182611c00565b5060e0850151610100611f9481870183611c00565b8601519050610120611fa886820183611ba2565b8601519050610140611fbc86820183611ba2565b8601519050610160611fd086820183611bf2565b8601519050611fe185830182611c00565b5090949350505050565b6001600160401b0391909116815260200190565b6001600160401b038c811682528b811660208301528a811660408301528981166060830152888116608083015287811660a0830152861660c08201526001600160a01b0385811660e083015284166101008201526001600160e01b031983166101208201526101608101612077610140830184611c00565b9c9b50505050505050505050505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220b278579041921abc3cbefc7c9b99b068ef0d85090c8ddcf24c07c9879925088864736f6c63430007060033",
  "deployedSourceMap": "1710:8520:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2141:28;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;3026:99;;;:::i;:::-;;;;;;;:::i;7708:1330::-;;;:::i;:::-;;6996:120;;;:::i;5408:129::-;;;;;;:::i;:::-;;:::i;5222:180::-;;;;;;:::i;:::-;;:::i;4537:323::-;;;;;;:::i;:::-;;:::i;5032:184::-;;;;;;:::i;:::-;;:::i;6078:400::-;;;;;;:::i;:::-;;:::i;2175:29::-;;;:::i;6866:124::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1706:145:1:-;;;:::i;5904:168:12:-;;;;;;:::i;:::-;;:::i;4411:120::-;;;;;;:::i;:::-;;:::i;4237:168::-;;;;;;:::i;:::-;;:::i;1083:77:1:-;;;:::i;6484:329:12:-;;;;;;:::i;:::-;;:::i;5543:157::-;;;;;;:::i;:::-;;:::i;4866:160::-;;;;;;:::i;:::-;;:::i;9444:784::-;;;;;;:::i;:::-;;:::i;2211:49::-;;;:::i;4067:164::-;;;;;;:::i;:::-;;:::i;5706:192::-;;;;;;:::i;:::-;;:::i;3846:174::-;;;;;;:::i;:::-;;:::i;3234:365::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2000:240:1:-;;;;;;:::i;:::-;;:::i;3648:192:12:-;;;;;;:::i;:::-;;:::i;2141:28::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2141:28:12;;;;-1:-1:-1;;;;2141:28:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;2141:28:12;;;;;-1:-1:-1;;;2141:28:12;;;;;;;;;;;-1:-1:-1;;;;;2141:28:12;;;;;;;;;-1:-1:-1;;;2141:28:12;;;;;;;;:::o;3026:99::-;3103:7;:14;3026:99;:::o;7708:1330::-;1297:12:1;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:1;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:1;;;;;;;;;;;;;;;7824:1:12::1;7788:14:::0;7805:20;-1:-1:-1;7767:132:12::1;;;;-1:-1:-1::0;;;7767:132:12::1;;;;;;;:::i;:::-;;;;;;;;;7938:7;7946:14:::0;;7909:26:::1;::::0;7938:7;-1:-1:-1;;7946:18:12;;;7938:27;::::1;;;;;;::::0;;;::::1;::::0;;;;7909:56:::1;::::0;;::::1;::::0;::::1;::::0;;7938:27:::1;::::0;;::::1;::::0;;::::1;7909:56:::0;;-1:-1:-1;;;;;7909:56:12;;::::1;::::0;;-1:-1:-1;;;7909:56:12;;::::1;;::::0;;::::1;::::0;;;::::1;::::0;;;;;;::::1;::::0;;;;;;;;;;;7938:27;;7909:56;;;;;;::::1;::::0;;;::::1;;;;;;;;;;;;;;;;::::0;;-1:-1:-1;;;;;7909:56:12::1;::::0;;;;;::::1;::::0;::::1;;::::0;;::::1;;;;-1:-1:-1::0;;;7909:56:12;;;-1:-1:-1;;7909:56:12::1;::::0;;::::1;::::0;-1:-1:-1;;;;;7909:56:12;;::::1;;::::0;::::1;::::0;-1:-1:-1;;;7909:56:12;;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;7909:56:12;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;7909:56:12;;;::::1;::::0;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;;::::1;-1:-1:-1::0;;;;;7909:56:12;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;;;;;-1:-1:-1;;;7909:56:12;::::1;::::0;::::1;-1:-1:-1::0;;;;;;7909:56:12::1;;::::0;;;;;;::::1;::::0;::::1;::::0;;;;;;;;7997:27;7909:56;;-1:-1:-1;8058:25:12::1;8043:40:::0;::::1;:12;:40;7997:27:::0;::::1;;:86;7976:170;;;;-1:-1:-1::0;;;7976:170:12::1;;;;;;;:::i;:::-;8161:17;::::0;::::1;::::0;-1:-1:-1;;;;;8161:21:12::1;::::0;8157:750:::1;;8252:23:::0;;8223:10:::1;:26:::0;-1:-1:-1;;;;;8223:52:12;;::::1;:26:::0;::::1;:52;8198:154;;;;-1:-1:-1::0;;;8198:154:12::1;;;;;;;:::i;:::-;8432:23:::0;;8387:10:::1;:26:::0;8521:17:::1;::::0;::::1;::::0;8494:24:::1;::::0;::::1;::::0;-1:-1:-1;;;;;8387:26:12;;::::1;:68:::0;;;::::1;::::0;8521:31;;::::1;8494:58;:109:::0;::::1;-1:-1:-1::0;;;8576:27:12;;::::1;;8494:109;8469:214;;;;-1:-1:-1::0;;;8469:214:12::1;;;;;;;:::i;:::-;8157:750;;;;8769:23:::0;;8739:10:::1;:26:::0;-1:-1:-1;;;;;8739:26:12;;::::1;:53:::0;::::1;;8714:182;;;;-1:-1:-1::0;;;8714:182:12::1;;;;;;;:::i;:::-;8917:7;:24:::0;;;;::::1;::::0;;-1:-1:-1;8917:24:12;;;;8930:10:::1;8917:24:::0;;::::1;::::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;8917:24:12::1;-1:-1:-1::0;;;;;8917:24:12;;::::1;;::::0;;;;;-1:-1:-1;;;8917:24:12;;;::::1;::::0;;::::1;::::0;;::::1;-1:-1:-1::0;;;;8917:24:12;;::::1;::::0;;;::::1;::::0;;;;;8930:10;;8917:24;::::1;::::0;;;;;::::1;:::i;:::-;-1:-1:-1::0;8917:24:12::1;::::0;;::::1;::::0;;;;::::1;::::0;;-1:-1:-1;;8917:24:12;;::::1;-1:-1:-1::0;;;;;8917:24:12;;::::1;;::::0;;;;;-1:-1:-1;;;8917:24:12;;;::::1;::::0;::::1;::::0;::::1;-1:-1:-1::0;;;;8917:24:12;;::::1;::::0;;;::::1;::::0;;;;;-1:-1:-1;;;8917:24:12;;;::::1;::::0;::::1;;-1:-1:-1::0;;;;8917:24:12;;::::1;;::::0;;;;;-1:-1:-1;;;8917:24:12;;;::::1;::::0;::::1;::::0;::::1;-1:-1:-1::0;;;;;8917:24:12;;::::1;;::::0;;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;;-1:-1:-1;;;;;8917:24:12;;;::::1;::::0;::::1;::::0;;::::1;-1:-1:-1::0;;;;;;;;8917:24:12;;::::1;;::::0;;;::::1;::::0;;::::1;::::0;;;;;::::1;::::0;;-1:-1:-1;;;;;;8917:24:12::1;::::0;;;::::1;::::0;;;::::1;::::0;;;;;::::1;-1:-1:-1::0;;;8917:24:12;;;::::1;::::0;::::1;-1:-1:-1::0;;;;8917:24:12;;::::1;;::::0;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;::::1;;::::0;;8964:12:::1;:10;:12::i;:::-;8951:25:::0;;:10:::1;:25:::0;;::::1;::::0;;::::1;::::0;-1:-1:-1;;8951:25:12;;::::1;-1:-1:-1::0;;;;;8951:25:12;;::::1;;-1:-1:-1::0;;;;8951:25:12::1;-1:-1:-1::0;;;8951:25:12;;;::::1;::::0;;;::::1;;::::0;;::::1;::::0;::::1;::::0;;;:10;;:25:::1;::::0;;;;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;8951:25:12::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;-1:-1:-1;;8951:25:12;;::::1;-1:-1:-1::0;;;;;8951:25:12;;::::1;;-1:-1:-1::0;;;;8951:25:12::1;-1:-1:-1::0;;;8951:25:12;;::::1;::::0;::::1;;-1:-1:-1::0;;;;8951:25:12::1;-1:-1:-1::0;;;8951:25:12;;::::1;::::0;;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;;8951:25:12;;::::1;-1:-1:-1::0;;;8951:25:12;;::::1;::::0;::::1;;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;;;;;8951:25:12::1;-1:-1:-1::0;;;;;8951:25:12;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;-1:-1:-1;;;;;;8951:25:12;;::::1;::::0;;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;8951:25:12::1;-1:-1:-1::0;;;8951:25:12;;;::::1;::::0;;;::::1;;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;9015:14:12;8992:39:::1;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;1356:1:1;7708:1330:12:o:0;6996:120::-;7083:18;:25;6996:120;:::o;5408:129::-;1297:12:1;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:1;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:1;;;;;;;;;;;;;;;5493:22:12;:37;;-1:-1:-1;;;;;5493:37:12;;::::1;-1:-1:-1::0;;;5493:37:12::1;-1:-1:-1::0;;;;;;;;5493:37:12;;::::1;::::0;;;::::1;::::0;;5408:129::o;5222:180::-;1297:12:1;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:1;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:1;;;;;;;;;;;;;;;5342:30:12;:53;;-1:-1:-1;;5342:53:12::1;-1:-1:-1::0;;;;;5342:53:12;;;::::1;::::0;;;::::1;::::0;;5222:180::o;4537:323::-;1297:12:1;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:1;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:1;;;;;;;;;;;;;;;4707:25:12::1;-1:-1:-1::0;;;;;4694:38:12::1;:10;-1:-1:-1::0;;;;;4694:38:12::1;;4673:137;;;;-1:-1:-1::0;;;4673:137:12::1;;;;;;;:::i;:::-;4820:20:::0;:33;;-1:-1:-1;;;;;4820:33:12;;::::1;-1:-1:-1::0;;;4820:33:12::1;-1:-1:-1::0;;;;4820:33:12;;::::1;::::0;;;::::1;::::0;;4537:323::o;5032:184::-;1297:12:1;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:1;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:1;;;;;;;;;;;;;;;5154:31:12;:55;;-1:-1:-1;;;;;5154:55:12;;::::1;-1:-1:-1::0;;;5154:55:12::1;-1:-1:-1::0;;;;;5154:55:12;;::::1;::::0;;;::::1;::::0;;5032:184::o;6078:400::-;1297:12:1;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:1;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:1;;;;;;;;;;;;;;;6210:18:12;:25;-1:-1:-1;;;;;6239:37:12;;::::1;-1:-1:-1::0;6210:66:12::1;6189:161;;;;-1:-1:-1::0;;;6189:161:12::1;;;;;;;:::i;:::-;6365:8;6360:112;-1:-1:-1::0;;;;;6379:22:12;::::1;::::0;-1:-1:-1;6360:112:12::1;;;6422:18:::0;6446:11;;-1:-1:-1;;;;;6446:14:12;::::1;::::0;;::::1;;;;;;;;;;;;;;;;;;:::i;:::-;6422:39:::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;6422:39:12;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;;;;6422:39:12::1;-1:-1:-1::0;;;;;6422:39:12;;;::::1;::::0;;;::::1;::::0;;6403:3:::1;6360:112;;;;6078:400:::0;;:::o;2175:29::-;;;;;;;;;-1:-1:-1;;;;;2175:29:12;;;;-1:-1:-1;;;2175:29:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;2175:29:12;;;;;-1:-1:-1;;;2175:29:12;;;;;;;;;;;;;-1:-1:-1;;;;;2175:29:12;;;;;;;;-1:-1:-1;;;2175:29:12;;;;;;;;;;:::o;6866:124::-;6931:7;6957:10;:18;;6976:6;-1:-1:-1;;;;;6957:26:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6957:26:12;;-1:-1:-1;6866:124:12;;;;:::o;1706:145:1:-;1297:12;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:1;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:1;;;;;;;;;;;;;;;1812:1:::1;1796:6:::0;;1775:40:::1;::::0;-1:-1:-1;;;;;1796:6:1;;::::1;::::0;1775:40:::1;::::0;1812:1;;1775:40:::1;1842:1;1825:19:::0;;-1:-1:-1;;;;;;1825:19:1::1;::::0;;1706:145::o;5904:168:12:-;1297:12:1;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:1;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:1;;;;;;;;;;;;;;;6018:27:12;:47;;-1:-1:-1;;;;;6018:47:12;;::::1;-1:-1:-1::0;;;6018:47:12::1;-1:-1:-1::0;;;;;6018:47:12;;::::1;::::0;;;::::1;::::0;;5904:168::o;4411:120::-;1297:12:1;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:1;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:1;;;;;;;;;;;;;;;4491:20:12;:33;;-1:-1:-1;;4491:33:12::1;-1:-1:-1::0;;;;;4491:33:12;;;::::1;::::0;;;::::1;::::0;;4411:120::o;4237:168::-;1297:12:1;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:1;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:1;;;;;;;;;;;;;;;4351:10:12::1;:47:::0;;-1:-1:-1;;;;;4351:47:12;;::::1;-1:-1:-1::0;;;4351:47:12::1;-1:-1:-1::0;;;;4351:47:12;;::::1;::::0;;;::::1;::::0;;4237:168::o;1083:77:1:-;1121:7;1147:6;-1:-1:-1;;;;;1147:6:1;1083:77;:::o;6484:329:12:-;1297:12:1;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:1;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:1;;;;;;;;;;;;;;;6580:18:12;:25;-1:-1:-1;;;;;6619:18:12;::::1;::::0;-1:-1:-1;6615:192:12::1;;6658:8;6653:88;6676:1;-1:-1:-1::0;;;;;6672:5:12::1;:1;-1:-1:-1::0;;;;;6672:5:12::1;;6653:88;;;6702:18:::0;:24;;;::::1;;;;;::::0;;;::::1;::::0;;;;-1:-1:-1;;6702:24:12;;;;;-1:-1:-1;;;;;;6702:24:12::1;::::0;;;;;::::1;6679:3;6653:88;;;;6615:192;;;6771:25;6778:18:::0;::::1;6771:25;:::i;:::-;1356:1:1;6484:329:12::0;:::o;5543:157::-;1297:12:1;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:1;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:1;;;;;;;;;;;;;;;5652:24:12;:41;;-1:-1:-1;;;;;;5652:41:12::1;-1:-1:-1::0;;;;;5652:41:12;;;::::1;::::0;;;::::1;::::0;;5543:157::o;4866:160::-;1297:12:1;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:1;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:1;;;;;;;;;;;;;;;4976:25:12;:43;;-1:-1:-1;;;;;4976:43:12;;::::1;-1:-1:-1::0;;;4976:43:12::1;-1:-1:-1::0;;;;4976:43:12;;::::1;::::0;;;::::1;::::0;;4866:160::o;9444:784::-;1297:12:1;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:1;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:1;;;;;;;;;;;;;;;9610:25:12::1;-1:-1:-1::0;;;;;9595:40:12::1;:12;:40;9571:21;-1:-1:-1::0;;;;;9571:64:12::1;;9550:153;;;;-1:-1:-1::0;;;9550:153:12::1;;;;;;;:::i;:::-;9744:7;:14:::0;-1:-1:-1;;9787:18:12;;9770:270:::1;9807:5:::0;;9770:270:::1;;9833:26;9862:7;9870:1;9862:10;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;9890:23:::0;;9862:10;;-1:-1:-1;;;;;;9890:48:12;;::::1;-1:-1:-1::0;;;9890:23:12;;::::1;;:48;9886:144;;9958:7;:13;;;;;;;;::::0;;;::::1;::::0;;::::1;-1:-1:-1::0;;9958:13:12;;;;;::::1;;::::0;;-1:-1:-1;;9958:13:12;;;;::::1;;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;9958:13:12::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;;9958:13:12;;;::::1;::::0;;::::1;::::0;;;9886:144:::1;;;10010:5;;;9886:144;-1:-1:-1::0;;;9814:3:12;9770:270:::1;;;-1:-1:-1::0;10071:7:12::1;:14:::0;-1:-1:-1;;;;;10071:30:12;::::1;-1:-1:-1::0;10050:115:12::1;;;;-1:-1:-1::0;;;10050:115:12::1;;;;;;;:::i;:::-;10205:7;:14:::0;10180:41:::1;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;1356:1:1;9444:784:12::0;:::o;2211:49::-;;;:::o;4067:164::-;1297:12:1;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:1;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:1;;;;;;;;;;;;;;;4179:10:12::1;:45:::0;;-1:-1:-1;;4179:45:12::1;-1:-1:-1::0;;;;;4179:45:12;;;::::1;::::0;;;::::1;::::0;;4067:164::o;5706:192::-;1297:12:1;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:1;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:1;;;;;;;;;;;;;;;5832:33:12;:59;;::::1;::::0;;;::::1;-1:-1:-1::0;;;5832:59:12::1;-1:-1:-1::0;;;;5832:59:12;;::::1;::::0;;;::::1;::::0;;5706:192::o;3846:174::-;3940:6;3976:7;3984:12;-1:-1:-1;;;;;3976:21:12;;;;;;;;;;;;;;;;;:29;:21;;;;;:29;:36;;3846:174;-1:-1:-1;;3846:174:12:o;3234:365::-;3320:18;;:::i;:::-;3388:1;3371:14;-1:-1:-1;;3371:18:12;3354:216;3418:26;3447:7;3455:1;3447:10;;;;;;;;;;;;;;;;;;;;;3475:22;;3447:10;;-1:-1:-1;;;;;;3475:37:12;;;:22;;:37;3471:89;;3532:13;;;;;;;;;;-1:-1:-1;;;;;3532:13:12;;;;;-1:-1:-1;;;3532:13:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3539:6;;3532:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3532:13:12;;;;;;;;;;;;;;;;-1:-1:-1;;;3532:13:12;;;-1:-1:-1;;3532:13:12;;;;-1:-1:-1;;;;;3532:13:12;;;;;;;-1:-1:-1;;;3532:13:12;;;;;;;;;-1:-1:-1;;;3532:13:12;;;;;;;;-1:-1:-1;;;3532:13:12;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3532:13:12;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3532:13:12;;;;-1:-1:-1;;;;;;3532:13:12;;;;;;;;;;;;;;;;-1:-1:-1;3532:13:12;;-1:-1:-1;;3532:13:12;3471:89;-1:-1:-1;;;3399:3:12;3354:216;;2000:240:1;1297:12;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:1;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:1;;;;;;;;;;;;;;;-1:-1:-1;;;;;2088:22:1;::::1;2080:73;;;;-1:-1:-1::0;;;2080:73:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2189:6;::::0;;2168:38:::1;::::0;-1:-1:-1;;;;;2168:38:1;;::::1;::::0;2189:6;::::1;::::0;2168:38:::1;::::0;::::1;2216:6;:17:::0;;-1:-1:-1;;;;;;2216:17:1::1;-1:-1:-1::0;;;;;2216:17:1;;;::::1;::::0;;;::::1;::::0;;2000:240::o;3648:192:12:-;3760:7;3790;3798:12;-1:-1:-1;;;;;3790:21:12;;;;;;;;;;;;;;;;;;;:29;;3820:12;-1:-1:-1;;;;;3790:43:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3790:43:12;;3648:192;-1:-1:-1;;;3648:192:12:o;598:104:0:-;685:10;598:104;:::o;2428:592:12:-;2473:18;;:::i;:::-;-1:-1:-1;2522:491:12;;;;;;;;-1:-1:-1;2522:491:12;;;;;;;;;;2634:16;;;;;;;;;;2522:491;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2428:592::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;14:173:22;83:20;;-1:-1:-1;;;;;132:30:22;;122:41;;112:2;;177:1;174;167:12;192:306;;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;356:23;;-1:-1:-1;;;;;408:31:22;;398:42;;388:2;;459:6;451;444:22;388:2;487:5;262:236;-1:-1:-1;;;262:236:22:o;503:666::-;;;650:2;638:9;629:7;625:23;621:32;618:2;;;671:6;663;656:22;618:2;716:9;703:23;-1:-1:-1;;;;;786:2:22;778:6;775:14;772:2;;;807:6;799;792:22;772:2;850:6;839:9;835:22;825:32;;895:7;888:4;884:2;880:13;876:27;866:2;;922:6;914;907:22;866:2;967;954:16;993:2;985:6;982:14;979:2;;;1014:6;1006;999:22;979:2;1073:7;1068:2;1062;1054:6;1050:15;1046:2;1042:24;1038:33;1035:46;1032:2;;;1099:6;1091;1084:22;1032:2;1135;1127:11;;;;;1157:6;;-1:-1:-1;608:561:22;;-1:-1:-1;;;;608:561:22:o;1174:306::-;;1285:2;1273:9;1264:7;1260:23;1256:32;1253:2;;;1306:6;1298;1291:22;1253:2;1337:23;;-1:-1:-1;;;;;;1389:32:22;;1379:43;;1369:2;;1441:6;1433;1426:22;1485:190;;1597:2;1585:9;1576:7;1572:23;1568:32;1565:2;;;1618:6;1610;1603:22;1565:2;-1:-1:-1;1646:23:22;;1555:120;-1:-1:-1;1555:120:22:o;1680:196::-;;1791:2;1779:9;1770:7;1766:23;1762:32;1759:2;;;1812:6;1804;1797:22;1759:2;1840:30;1860:9;1840:30;:::i;1881:270::-;;;2008:2;1996:9;1987:7;1983:23;1979:32;1976:2;;;2029:6;2021;2014:22;1976:2;2057:30;2077:9;2057:30;:::i;:::-;2047:40;;2106:39;2141:2;2130:9;2126:18;2106:39;:::i;:::-;2096:49;;1966:185;;;;;:::o;2156:106::-;-1:-1:-1;;;;;2224:31:22;2212:44;;2202:60::o;2267:469::-;;2364:5;2358:12;2391:6;2386:3;2379:19;2417:4;2446:2;2441:3;2437:12;2430:19;;2483:2;2476:5;2472:14;2504:3;2516:195;2530:6;2527:1;2524:13;2516:195;;;2595:13;;-1:-1:-1;;;;;2591:39:22;2579:52;;2651:12;;;;2686:15;;;;2627:1;2545:9;2516:195;;;-1:-1:-1;2727:3:22;;2334:402;-1:-1:-1;;;;;2334:402:22:o;2741:106::-;-1:-1:-1;;;;;;2808:32:22;2796:45;;2786:61::o;2852:104::-;-1:-1:-1;;;;;2919:30:22;2907:43;;2897:59::o;2961:203::-;-1:-1:-1;;;;;3125:32:22;;;;3107:51;;3095:2;3080:18;;3062:102::o;3169:416::-;3371:2;3353:21;;;3410:2;3390:18;;;3383:30;3449:34;3444:2;3429:18;;3422:62;-1:-1:-1;;;3515:2:22;3500:18;;3493:50;3575:3;3560:19;;3343:242::o;3590:412::-;3792:2;3774:21;;;3831:2;3811:18;;;3804:30;3870:34;3865:2;3850:18;;3843:62;-1:-1:-1;;;3936:2:22;3921:18;;3914:46;3992:3;3977:19;;3764:238::o;4007:474::-;4209:2;4191:21;;;4248:2;4228:18;;;4221:30;4287:34;4282:2;4267:18;;4260:62;4358:34;4353:2;4338:18;;4331:62;-1:-1:-1;;;4424:3:22;4409:19;;4402:37;4471:3;4456:19;;4181:300::o;4486:412::-;4688:2;4670:21;;;4727:2;4707:18;;;4700:30;4766:34;4761:2;4746:18;;4739:62;-1:-1:-1;;;4832:2:22;4817:18;;4810:46;4888:3;4873:19;;4660:238::o;4903:401::-;5105:2;5087:21;;;5144:2;5124:18;;;5117:30;5183:34;5178:2;5163:18;;5156:62;-1:-1:-1;;;5249:2:22;5234:18;;5227:35;5294:3;5279:19;;5077:227::o;5309:402::-;5511:2;5493:21;;;5550:2;5530:18;;;5523:30;5589:34;5584:2;5569:18;;5562:62;-1:-1:-1;;;5655:2:22;5640:18;;5633:36;5701:3;5686:19;;5483:228::o;5716:406::-;5918:2;5900:21;;;5957:2;5937:18;;;5930:30;5996:34;5991:2;5976:18;;5969:62;-1:-1:-1;;;6062:2:22;6047:18;;6040:40;6112:3;6097:19;;5890:232::o;6127:410::-;6329:2;6311:21;;;6368:2;6348:18;;;6341:30;6407:34;6402:2;6387:18;;6380:62;-1:-1:-1;;;6473:2:22;6458:18;;6451:44;6527:3;6512:19;;6301:236::o;6542:407::-;6744:2;6726:21;;;6783:2;6763:18;;;6756:30;6822:34;6817:2;6802:18;;6795:62;-1:-1:-1;;;6888:2:22;6873:18;;6866:41;6939:3;6924:19;;6716:233::o;6954:1757::-;;7139:2;7128:9;7121:21;7151:54;7201:2;7190:9;7186:18;7177:6;7171:13;7151:54;:::i;:::-;7252:2;7244:6;7240:15;7234:22;7265:53;7314:2;7303:9;7299:18;7285:12;7265:53;:::i;:::-;;7367:2;7359:6;7355:15;7349:22;7390:6;7432:2;7427;7416:9;7412:18;7405:30;7458:71;7524:3;7513:9;7509:19;7493:14;7458:71;:::i;:::-;7444:85;;7578:2;7570:6;7566:15;7560:22;7591:56;7642:3;7631:9;7627:19;7611:14;7591:56;:::i;:::-;;7696:3;7688:6;7684:16;7678:23;7710:56;7761:3;7750:9;7746:19;7730:14;7710:56;:::i;:::-;;7815:3;7807:6;7803:16;7797:23;7829:56;7880:3;7869:9;7865:19;7849:14;7829:56;:::i;:::-;;7934:3;7926:6;7922:16;7916:23;7948:56;7999:3;7988:9;7984:19;7968:14;7948:56;:::i;:::-;;8053:3;8045:6;8041:16;8035:23;8077:3;8089:55;8140:2;8129:9;8125:18;8109:14;8089:55;:::i;:::-;8181:15;;8175:22;;-1:-1:-1;8216:3:22;8228:56;8265:18;;;8175:22;8228:56;:::i;:::-;8321:15;;8315:22;;-1:-1:-1;8356:3:22;8368:56;8405:18;;;8315:22;8368:56;:::i;:::-;8461:15;;8455:22;;-1:-1:-1;8496:3:22;8508:55;8544:18;;;8455:22;8508:55;:::i;:::-;8601:15;;8595:22;;-1:-1:-1;8626:56:22;8663:18;;;8595:22;8626:56;:::i;:::-;-1:-1:-1;8699:6:22;;7111:1600;-1:-1:-1;;;;7111:1600:22:o;8716:200::-;-1:-1:-1;;;;;8878:31:22;;;;8860:50;;8848:2;8833:18;;8815:101::o;8921:1075::-;-1:-1:-1;;;;;9386:15:22;;;9368:34;;9438:15;;;9433:2;9418:18;;9411:43;9490:15;;;9485:2;9470:18;;9463:43;9542:15;;;9537:2;9522:18;;9515:43;9595:15;;;9589:3;9574:19;;9567:44;9648:15;;;9642:3;9627:19;;9620:44;9701:15;;9695:3;9680:19;;9673:44;-1:-1:-1;;;;;9792:15:22;;;9786:3;9771:19;;9764:44;9845:15;;9839:3;9824:19;;9817:44;-1:-1:-1;;;;;;9898:33:22;;9892:3;9877:19;;9870:62;9318:3;9303:19;;9941:49;9985:3;9970:19;;9961:7;9941:49;:::i;:::-;9285:711;;;;;;;;;;;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "details": "The config objects are stored in sequence, with configs applicable to later batches being     lined up behind configs applicable to earlier batches (according to     `config.startBlockNumber`). The contract owner is entitled to add or remove configs at the     end at will as long as a notice of at least `configChangeHeadsUpBlocks` is given.To add a new config, first populate the `nextConfig` object accordingly and then schedule     it with `scheduleNextConfig`.",
    "events": {
      "ConfigScheduled(uint64)": {
        "params": {
          "numConfigs": "The new number of configs stored."
        }
      },
      "ConfigUnscheduled(uint64)": {
        "params": {
          "numConfigs": "The new number of configs stored."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "getConfig(uint64)": {
        "notice": "Get the config for a certain batch.",
        "params": {
          "_batchIndex": "The index of the batch."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "scheduleNextConfig()": {
        "notice": "Finalize the `nextConfig` object and add it to the end of the config sequence.`startBlockNumber` of the next config must be `configChangeHeadsUpBlocks`     blocks in the future. Note that the batch spans are smaller than or equal to     `configChangeHeadsUpBlocks`, so the heads up corresponds to at least one batch.The transition between the next config and the config currently at the end of the     config sequence must be seamless, i.e., there batches must not be cut short."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unscheduleConfigs(uint64)": {
        "notice": "Remove configs from the end.`_fromStartBlockNumber` must be `configChangeHeadsUpBlocks` blocks in the future.This method can remove one or more configs. If no config would be removed, an error     is thrown.",
        "params": {
          "_fromStartBlockNumber": "All configs with a start block number greater than or equal     to this will be removed."
        }
      }
    },
    "title": "A contract that manages `BatchConfig` objects.",
    "version": 1
  },
  "offset": [1710, 10230],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x73ED43DB GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xCD21AEE7 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD9A58F24 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD9A58F24 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xE008CB62 EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0xFA84EA02 EQ PUSH2 0x397 JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH4 0xCD21AEE7 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xCE9919B8 EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0xD1AC2E52 EQ PUSH2 0x33E JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH4 0x9D63753E GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x9D63753E EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0xBCF67268 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0xC7C6E9F4 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0xC9515C58 EQ PUSH2 0x310 JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH4 0x73ED43DB EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0x81E905A3 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2CF JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH4 0x5DC6FDB8 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x64E9F671 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x64E9F671 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x660744DC EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x719F2E17 EQ PUSH2 0x296 JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH4 0x5DC6FDB8 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x606DF514 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x62FCED0E EQ PUSH2 0x253 JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH3 0x98FA22 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0xF0AAE6F EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x18B5E830 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x287447C4 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x2B2CC6C4 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x564093FC EQ PUSH2 0x21A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C0 PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0x1B3E JUMP JUMPDEST PUSH2 0x3AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D7 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH2 0x43A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x1FEB JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x440 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E8 PUSH2 0xAAA JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A7A JUMP JUMPDEST PUSH2 0xAB0 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x228 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B56 JUMP JUMPDEST PUSH2 0xB34 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x23B CALLDATASIZE PUSH1 0x4 PUSH2 0x1B56 JUMP JUMPDEST PUSH2 0xBAF JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x24E CALLDATASIZE PUSH1 0x4 PUSH2 0x1B56 JUMP JUMPDEST PUSH2 0xC85 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x261 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AA8 JUMP JUMPDEST PUSH2 0xD05 JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0xE06 JUMP JUMPDEST PUSH2 0x281 PUSH2 0x27C CALLDATASIZE PUSH1 0x4 PUSH2 0x1B56 JUMP JUMPDEST PUSH2 0xE72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x1C0D JUMP JUMPDEST PUSH2 0x1FD PUSH2 0xEAA JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x2A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B56 JUMP JUMPDEST PUSH2 0xF4C JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x2B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B56 JUMP JUMPDEST PUSH2 0xFCC JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x2CA CALLDATASIZE PUSH1 0x4 PUSH2 0x1B56 JUMP JUMPDEST PUSH2 0x1047 JUMP JUMPDEST PUSH2 0x281 PUSH2 0x10CC JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x2E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B56 JUMP JUMPDEST PUSH2 0x10DB JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x2F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A7A JUMP JUMPDEST PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x30B CALLDATASIZE PUSH1 0x4 PUSH2 0x1B56 JUMP JUMPDEST PUSH2 0x1228 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x31E CALLDATASIZE PUSH1 0x4 PUSH2 0x1B56 JUMP JUMPDEST PUSH2 0x12AD JUMP JUMPDEST PUSH2 0x1E8 PUSH2 0x148A JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x339 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B56 JUMP JUMPDEST PUSH2 0x14AE JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x34C CALLDATASIZE PUSH1 0x4 PUSH2 0x1B16 JUMP JUMPDEST PUSH2 0x1529 JUMP JUMPDEST PUSH2 0x1E8 PUSH2 0x35F CALLDATASIZE PUSH1 0x4 PUSH2 0x1B56 JUMP JUMPDEST PUSH2 0x15A5 JUMP JUMPDEST PUSH2 0x377 PUSH2 0x372 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B56 JUMP JUMPDEST PUSH2 0x15D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x1EEF JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x392 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A7A JUMP JUMPDEST PUSH2 0x1755 JUMP JUMPDEST PUSH2 0x281 PUSH2 0x3A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B70 JUMP JUMPDEST PUSH2 0x184D JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP5 AND SWAP6 POP PUSH1 0x1 PUSH1 0x40 SHL SWAP4 DUP5 SWAP1 DIV DUP2 AND SWAP5 DUP4 DUP3 AND SWAP5 DUP1 DUP6 DIV DUP4 AND SWAP5 PUSH1 0x1 PUSH1 0x80 SHL DUP2 DIV DUP5 AND SWAP5 PUSH1 0x1 PUSH1 0xC0 SHL SWAP2 DUP3 SWAP1 DIV DUP6 AND SWAP5 DUP5 DUP2 AND SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 DIV DUP5 AND SWAP4 DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0xA0 SHL DUP4 DIV PUSH1 0xE0 SHL SWAP3 DIV AND DUP12 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x448 PUSH2 0x18A6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x498 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x20AE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFE GT PUSH2 0x4CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C1 SWAP1 PUSH2 0x1C75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0x4E0 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x180 DUP2 ADD DUP3 MSTORE PUSH1 0x5 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 AND DUP6 MSTORE PUSH1 0x1 PUSH1 0x40 SHL SWAP1 SWAP2 DIV AND DUP4 DUP6 ADD MSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD DUP4 MLOAD DUP2 DUP8 MUL DUP2 ADD DUP8 ADD DUP6 MSTORE DUP2 DUP2 MSTORE SWAP5 SWAP6 SWAP3 SWAP5 SWAP4 DUP7 ADD SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x570 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x552 JUMPI JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x2 DUP3 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x40 SHL DUP1 DUP4 DIV DUP3 AND PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV DUP3 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 SHL SWAP3 DUP4 SWAP1 DIV DUP3 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x3 DUP7 ADD SLOAD DUP1 DUP4 AND PUSH1 0xA0 DUP8 ADD MSTORE DUP2 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0x4 SWAP1 SWAP7 ADD SLOAD SWAP6 DUP7 AND PUSH1 0xE0 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP8 DIV SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x100 DUP7 ADD MSTORE SWAP2 SWAP1 SWAP5 DIV DUP5 AND PUSH2 0x120 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 MSTORE SLOAD SWAP3 SWAP4 POP PUSH32 0x0 DUP3 AND NUMBER ADD SWAP3 DIV AND GT PUSH2 0x65F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C1 SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND ISZERO PUSH2 0x6F2 JUMPI DUP1 MLOAD PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 DUP3 AND SWAP2 AND GT PUSH2 0x6A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C1 SWAP1 PUSH2 0x1EA4 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x2 SLOAD PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP5 AND SWAP5 SWAP1 SWAP5 SUB SWAP4 SWAP2 DUP5 MUL ADD DUP2 AND PUSH1 0x1 PUSH1 0x40 SHL SWAP1 SWAP3 DIV AND EQ PUSH2 0x6EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C1 SWAP1 PUSH2 0x1E56 JUMP JUMPDEST POP PUSH2 0x721 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x721 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C1 SWAP1 PUSH2 0x1CC5 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x5 SWAP1 SWAP3 MUL PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 DUP2 ADD DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP5 DUP6 AND OR DUP1 DUP3 SSTORE DUP4 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DUP2 SWAP1 DIV SWAP1 SWAP6 AND SWAP1 SWAP5 MUL PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 SHL NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR DUP4 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP3 SWAP4 SWAP3 PUSH2 0x7D3 SWAP3 PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF7 ADD SWAP2 SWAP1 PUSH2 0x1923 JUMP JUMPDEST POP PUSH1 0x2 DUP3 DUP2 ADD DUP1 SLOAD SWAP2 DUP4 ADD DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP5 DUP6 AND OR DUP1 DUP4 SSTORE DUP4 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DUP2 SWAP1 DIV DUP7 AND DUP2 MUL PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP1 DUP5 SSTORE DUP5 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DUP2 SWAP1 DIV DUP8 AND MUL PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT SWAP1 SWAP2 AND OR DUP1 DUP5 SSTORE SWAP4 SLOAD PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DUP2 SWAP1 DIV DUP7 AND DUP2 MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB SWAP6 DUP7 AND OR SWAP1 SWAP4 SSTORE PUSH1 0x3 DUP1 DUP9 ADD DUP1 SLOAD SWAP2 DUP9 ADD DUP1 SLOAD SWAP1 SWAP5 AND SWAP2 DUP8 AND SWAP2 SWAP1 SWAP2 OR DUP1 DUP5 SSTORE SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP4 SWAP1 DIV DUP2 AND SWAP1 SWAP3 MUL PUSH1 0x1 PUSH1 0x40 SHL PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x4 SWAP6 DUP7 ADD DUP1 SLOAD SWAP7 SWAP1 SWAP6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP7 SWAP1 SWAP2 AND SWAP6 SWAP1 SWAP6 OR DUP1 DUP7 SSTORE DUP5 SLOAD PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xA0 SHL SWAP2 DUP3 SWAP1 DIV AND MUL PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL NOT SWAP1 SWAP2 AND OR DUP1 DUP7 SSTORE SWAP4 SLOAD DUP2 SWAP1 DIV SWAP1 SWAP3 AND SWAP1 SWAP2 MUL SWAP2 AND OR SWAP1 SSTORE PUSH2 0x8FD PUSH2 0x18AA JUMP JUMPDEST DUP1 MLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x20 DUP1 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP5 DUP6 AND OR PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL SWAP5 SWAP1 SWAP3 AND SWAP4 SWAP1 SWAP4 MUL OR DUP2 SSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP1 MLOAD SWAP2 SWAP3 PUSH2 0x959 SWAP3 PUSH1 0x3 SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1973 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0xA0 DUP7 ADD MLOAD PUSH1 0xC0 DUP8 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP7 DUP8 AND OR PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL SWAP4 DUP8 AND DUP5 MUL OR PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL SWAP3 DUP8 AND SWAP3 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0xC0 SHL SWAP3 DUP8 AND DUP4 MUL OR SWAP1 SWAP5 SSTORE PUSH1 0xE0 DUP1 DUP9 ADD MLOAD PUSH1 0x3 DUP9 ADD DUP1 SLOAD PUSH2 0x100 DUP12 ADD MLOAD SWAP7 AND SWAP2 DUP9 AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0x40 SHL PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND SWAP1 SWAP5 MUL SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH2 0x120 DUP8 ADD MLOAD PUSH1 0x4 SWAP1 SWAP7 ADD DUP1 SLOAD PUSH2 0x140 DUP10 ADD MLOAD PUSH2 0x160 SWAP1 SWAP10 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND SWAP8 SWAP1 SWAP5 AND SWAP7 SWAP1 SWAP7 OR PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL SWAP8 SWAP1 SWAP3 SHR SWAP7 SWAP1 SWAP7 MUL OR SWAP1 SWAP2 AND SWAP2 AND SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x38889EF980014448A73B6E5DC5579BA1A4B7BD213A586B3F4832351448C48AE6 SWAP2 PUSH2 0xA9F SWAP2 PUSH2 0x1FEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xAB8 PUSH2 0x18A6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xB08 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x20AE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x40 SHL MUL PUSH1 0x1 PUSH1 0x40 SHL PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xB3C PUSH2 0x18A6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xB8C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x20AE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xBB7 PUSH2 0x18A6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xC07 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x20AE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND LT PUSH2 0xC58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C1 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x40 SHL MUL PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xC8D PUSH2 0x18A6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xCDD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x20AE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0xC0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xD0D PUSH2 0x18A6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xD5D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x20AE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 SWAP1 SUB LT ISZERO PUSH2 0xD89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C1 SWAP1 PUSH2 0x1D31 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP3 GT ISZERO PUSH2 0xE01 JUMPI PUSH1 0x3 DUP4 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 AND DUP2 DUP2 LT PUSH2 0xDB4 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xDC9 SWAP2 SWAP1 PUSH2 0x1A7A JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE ADD PUSH2 0xD8C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP6 AND SWAP5 PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DUP2 SWAP1 DIV DUP3 AND SWAP5 DUP3 DUP2 AND SWAP5 DUP3 DUP3 DIV DUP5 AND SWAP5 PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV DUP6 AND SWAP5 PUSH1 0x1 PUSH1 0xC0 SHL SWAP4 DUP5 SWAP1 DIV DUP2 AND SWAP5 DUP2 DUP5 AND SWAP5 SWAP4 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP4 SWAP1 DUP4 AND SWAP3 PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0xE0 SHL SWAP3 SWAP2 SWAP1 DIV AND DUP12 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x1 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 SLOAD DUP2 LT PUSH2 0xE8D JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEB2 PUSH2 0x18A6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xF02 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x20AE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xF54 PUSH2 0x18A6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xFA4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x20AE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0xC0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xFD4 PUSH2 0x18A6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1024 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x20AE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x104F PUSH2 0x18A6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x109F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x20AE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x40 SHL MUL PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x10E3 PUSH2 0x18A6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1133 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x20AE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND DUP2 LT PUSH2 0x119E JUMPI PUSH1 0x0 JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND LT ISZERO PUSH2 0x1198 JUMPI PUSH1 0x3 DUP1 SLOAD DUP1 PUSH2 0x116E JUMPI INVALID JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x1149 JUMP JUMPDEST POP PUSH2 0x11AA JUMP JUMPDEST PUSH2 0x11AA PUSH1 0x3 PUSH1 0x0 PUSH2 0x19C8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x11B6 PUSH2 0x18A6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1206 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x20AE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1230 PUSH2 0x18A6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1280 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x20AE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x80 SHL MUL PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x12B5 PUSH2 0x18A6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1305 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x20AE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND NUMBER ADD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT PUSH2 0x1358 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C1 SWAP1 PUSH2 0x1E0C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 NOT DUP2 ADD JUMPDEST DUP1 ISZERO PUSH2 0x1422 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1376 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP7 AND PUSH1 0x1 PUSH1 0x40 SHL SWAP1 SWAP3 DIV AND LT PUSH2 0x1412 JUMPI PUSH1 0x1 DUP1 SLOAD DUP1 PUSH2 0x13AF JUMPI INVALID JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x5 PUSH1 0x0 NOT SWAP1 SWAP4 ADD SWAP3 DUP4 MUL ADD DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 SSTORE SWAP1 PUSH2 0x13E9 PUSH1 0x1 DUP4 ADD DUP3 PUSH2 0x19C8 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE SWAP1 SSTORE PUSH2 0x1418 JUMP JUMPDEST POP PUSH2 0x1422 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD PUSH2 0x1361 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND GT PUSH2 0x144D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C1 SWAP1 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x202ADAC5E4F5FA65A6E6EC3AFC99DA8986C020C2799F4E0AEE50552A05A0BFDF SWAP2 PUSH2 0x147E SWAP2 PUSH2 0x1FEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x14B6 PUSH2 0x18A6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1506 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x20AE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1531 PUSH2 0x18A6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1581 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x20AE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0xE0 SWAP3 SWAP1 SWAP3 SHR PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 SLOAD DUP2 LT PUSH2 0x15BD JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15DF PUSH2 0x19E9 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 NOT ADD JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x15F6 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP7 AND SWAP2 AND GT PUSH2 0x174B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH2 0x180 DUP2 ADD DUP3 MSTORE DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 AND DUP4 MSTORE PUSH1 0x1 PUSH1 0x40 SHL SWAP1 SWAP2 DIV AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP5 ADD DUP1 SLOAD DUP5 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD DUP7 MSTORE DUP2 DUP2 MSTORE SWAP4 SWAP5 DUP7 SWAP5 SWAP1 DUP7 ADD SWAP4 SWAP1 SWAP3 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x16A2 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1684 JUMPI JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x40 SHL DUP1 DUP4 DIV DUP3 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV DUP3 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 SHL SWAP3 DUP4 SWAP1 DIV DUP3 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x3 DUP6 ADD SLOAD DUP1 DUP4 AND PUSH1 0xA0 DUP7 ADD MSTORE DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP4 DUP5 AND PUSH1 0xE0 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP6 DIV SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x100 DUP5 ADD MSTORE SWAP3 DIV SWAP1 SWAP2 AND PUSH2 0x120 SWAP1 SWAP2 ADD MSTORE SWAP3 POP PUSH2 0xEA5 SWAP2 POP POP JUMP JUMPDEST POP PUSH1 0x0 NOT ADD PUSH2 0x15E7 JUMP JUMPDEST PUSH2 0x175D PUSH2 0x18A6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x17AD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x20AE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x17F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2088 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 SLOAD DUP2 LT PUSH2 0x1865 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 SLOAD DUP2 LT PUSH2 0x188A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0x18B2 PUSH2 0x19E9 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH2 0x180 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE DUP4 MLOAD DUP3 DUP2 MSTORE SWAP1 DUP2 ADD DUP5 MSTORE SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x100 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x120 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x140 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x160 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1963 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1963 JUMPI DUP3 SLOAD DUP3 SSTORE SWAP2 PUSH1 0x1 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1948 JUMP JUMPDEST POP PUSH2 0x196F SWAP3 SWAP2 POP PUSH2 0x1A4E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1963 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1963 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1993 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x19E6 SWAP2 SWAP1 PUSH2 0x1A4E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x180 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 SWAP3 DUP3 ADD DUP4 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x100 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x120 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x140 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x160 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x196F JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1A4F JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xEA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A8B JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1AA1 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1ABA JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1AD0 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1AE3 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1AF1 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x1B04 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B27 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1AA1 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B4F JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B67 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1AA1 DUP3 PUSH2 0x1A63 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B82 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x1B8B DUP4 PUSH2 0x1A63 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B99 PUSH1 0x20 DUP5 ADD PUSH2 0x1A63 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BE7 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1BC2 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x34 SWAP1 DUP3 ADD MSTORE PUSH32 0x436F6E666967436F6E74726163743A206261746368207370616E206E6F742073 PUSH1 0x40 DUP3 ADD MSTORE PUSH20 0x686F72746572207468616E20686561647320757 PUSH1 0x64 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x30 SWAP1 DUP3 ADD MSTORE PUSH32 0x436F6E666967436F6E74726163743A206E756D626572206F6620636F6E666967 PUSH1 0x40 DUP3 ADD MSTORE PUSH16 0x1CC8195E18D959591CC81D5A5B9D0D8D PUSH1 0x82 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x46 SWAP1 DUP3 ADD MSTORE PUSH32 0x436F6E666967436F6E74726163743A207472616E736974696F6E2066726F6D20 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x696E61637469766520636F6E66696720776974682077726F6E67207374617274 PUSH1 0x60 DUP3 ADD MSTORE PUSH6 0x40D2DCC8CAF PUSH1 0xD3 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x30 SWAP1 DUP3 ADD MSTORE PUSH32 0x436F6E666967436F6E74726163743A206E756D626572206F66206B6579706572 PUSH1 0x40 DUP3 ADD MSTORE PUSH16 0x1CC8195E18D959591CC81D5A5B9D0D8D PUSH1 0x82 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x436F6E666967436F6E74726163743A20737461727420626C6F636B20746F6F20 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6561726C79 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x436F6E666967436F6E74726163743A206E6F20636F6E6669677320756E736368 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x19591D5B1959 PUSH1 0xD2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x436F6E666967436F6E74726163743A2066726F6D20737461727420626C6F636B PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x20746F6F206561726C79 PUSH1 0xB0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x436F6E666967436F6E74726163743A20636F6E666967207472616E736974696F PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x6E206E6F74207365616D6C657373 PUSH1 0x90 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x436F6E666967436F6E74726163743A20737461727420626174636820696E6465 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x1E081D1BDBC81CDB585B1B PUSH1 0xAA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x1F03 PUSH1 0x20 DUP4 ADD DUP5 MLOAD PUSH2 0x1C00 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x1F15 PUSH1 0x40 DUP5 ADD DUP3 PUSH2 0x1C00 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x180 DUP1 PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x1F32 PUSH2 0x1A0 DUP6 ADD DUP4 PUSH2 0x1BAF JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD MLOAD PUSH2 0x1F46 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x1C00 JUMP JUMPDEST POP PUSH1 0x80 DUP6 ADD MLOAD PUSH2 0x1F59 PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x1C00 JUMP JUMPDEST POP PUSH1 0xA0 DUP6 ADD MLOAD PUSH2 0x1F6C PUSH1 0xC0 DUP7 ADD DUP3 PUSH2 0x1C00 JUMP JUMPDEST POP PUSH1 0xC0 DUP6 ADD MLOAD PUSH2 0x1F7F PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0x1C00 JUMP JUMPDEST POP PUSH1 0xE0 DUP6 ADD MLOAD PUSH2 0x100 PUSH2 0x1F94 DUP2 DUP8 ADD DUP4 PUSH2 0x1C00 JUMP JUMPDEST DUP7 ADD MLOAD SWAP1 POP PUSH2 0x120 PUSH2 0x1FA8 DUP7 DUP3 ADD DUP4 PUSH2 0x1BA2 JUMP JUMPDEST DUP7 ADD MLOAD SWAP1 POP PUSH2 0x140 PUSH2 0x1FBC DUP7 DUP3 ADD DUP4 PUSH2 0x1BA2 JUMP JUMPDEST DUP7 ADD MLOAD SWAP1 POP PUSH2 0x160 PUSH2 0x1FD0 DUP7 DUP3 ADD DUP4 PUSH2 0x1BF2 JUMP JUMPDEST DUP7 ADD MLOAD SWAP1 POP PUSH2 0x1FE1 DUP6 DUP4 ADD DUP3 PUSH2 0x1C00 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP13 DUP2 AND DUP3 MSTORE DUP12 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP11 DUP2 AND PUSH1 0x40 DUP4 ADD MSTORE DUP10 DUP2 AND PUSH1 0x60 DUP4 ADD MSTORE DUP9 DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE DUP8 DUP2 AND PUSH1 0xA0 DUP4 ADD MSTORE DUP7 AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0xE0 DUP4 ADD MSTORE DUP5 AND PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND PUSH2 0x120 DUP3 ADD MSTORE PUSH2 0x160 DUP2 ADD PUSH2 0x2077 PUSH2 0x140 DUP4 ADD DUP5 PUSH2 0x1C00 JUMP JUMPDEST SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x776E6572A2646970667358221220B278 JUMPI SWAP1 COINBASE SWAP3 BYTE 0xBC EXTCODECOPY 0xBE 0xFC PUSH29 0x9B99B068EF0D85090C8DDCF24C07C9879925088864736F6C6343000706 STOP CALLER ",
  "pcMap": {},
  "sha1": "471407208ccafaa89b795fef2f16139f29702e46",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.7.0 <0.8.0;\npragma experimental ABIEncoderV2;\n\nimport {\n    Ownable\n} from \"OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/access/Ownable.sol\";\n\nstruct BatchConfig {\n    uint64 startBatchIndex; // the index of the first batch using this config\n    uint64 startBlockNumber; // the block number from which on this config is applicable\n    address[] keypers; // the keyper addresses\n    uint64 threshold; // the threshold parameter\n    uint64 batchSpan; // the duration of one batch in blocks\n    uint64 batchSizeLimit; // the maximum size of a batch in bytes\n    uint64 transactionSizeLimit; // the maximum size of each transaction in the batch in bytes\n    uint64 transactionGasLimit; // the maximum amount of gas each transaction may use\n    address feeReceiver; // the address receiving the collected fees\n    address targetAddress; // the address of the contract responsible of executing transactions\n    bytes4 targetFunctionSelector; // function of the target contract that executes transactions\n    uint64 executionTimeout; // the number of blocks after which execution can be skipped\n}\n\n/// @title A contract that manages `BatchConfig` objects.\n/// @dev The config objects are stored in sequence, with configs applicable to later batches being\n///     lined up behind configs applicable to earlier batches (according to\n///     `config.startBlockNumber`). The contract owner is entitled to add or remove configs at the\n///     end at will as long as a notice of at least `configChangeHeadsUpBlocks` is given.\n/// @dev To add a new config, first populate the `nextConfig` object accordingly and then schedule\n///     it with `scheduleNextConfig`.\ncontract ConfigContract is Ownable {\n    /// @notice The event emitted after a new config object has been scheduled.\n    /// @param numConfigs The new number of configs stored.\n    event ConfigScheduled(uint64 numConfigs);\n\n    /// @notice The event emitted after the owner has unscheduled one or more config objects.\n    /// @param numConfigs The new number of configs stored.\n    event ConfigUnscheduled(uint64 numConfigs);\n\n    BatchConfig[] public configs;\n    BatchConfig public nextConfig;\n\n    uint64 public immutable configChangeHeadsUpBlocks;\n\n    constructor(uint64 _configChangeHeadsUpBlocks) {\n        configs.push(zeroConfig());\n\n        configChangeHeadsUpBlocks = _configChangeHeadsUpBlocks;\n    }\n\n    function zeroConfig() internal pure returns (BatchConfig memory) {\n        return\n            BatchConfig({\n                startBatchIndex: 0,\n                startBlockNumber: 0,\n                keypers: new address[](0),\n                threshold: 0,\n                batchSpan: 0,\n                batchSizeLimit: 0,\n                transactionSizeLimit: 0,\n                transactionGasLimit: 0,\n                feeReceiver: address(0),\n                targetAddress: address(0),\n                targetFunctionSelector: bytes4(0),\n                executionTimeout: 0\n            });\n    }\n\n    function numConfigs() external view returns (uint64) {\n        return uint64(configs.length);\n    }\n\n    /// @notice Get the config for a certain batch.\n    /// @param _batchIndex The index of the batch.\n    function getConfig(uint64 _batchIndex)\n        external\n        view\n        returns (BatchConfig memory)\n    {\n        for (uint256 i = configs.length - 1; i >= 0; i--) {\n            BatchConfig storage config = configs[i];\n            if (config.startBatchIndex <= _batchIndex) {\n                return config;\n            }\n        }\n        assert(false);\n    }\n\n    //\n    // Config keyper getters\n    //\n    function configKeypers(uint64 _configIndex, uint64 _keyperIndex)\n        external\n        view\n        returns (address)\n    {\n        return configs[_configIndex].keypers[_keyperIndex];\n    }\n\n    function configNumKeypers(uint64 _configIndex)\n        external\n        view\n        returns (uint64)\n    {\n        return uint64(configs[_configIndex].keypers.length);\n    }\n\n    //\n    // next config setters\n    //\n    function nextConfigSetStartBatchIndex(uint64 _startBatchIndex)\n        external\n        onlyOwner\n    {\n        nextConfig.startBatchIndex = _startBatchIndex;\n    }\n\n    function nextConfigSetStartBlockNumber(uint64 _startBlockNumber)\n        external\n        onlyOwner\n    {\n        nextConfig.startBlockNumber = _startBlockNumber;\n    }\n\n    function nextConfigSetThreshold(uint64 _threshold) external onlyOwner {\n        nextConfig.threshold = _threshold;\n    }\n\n    function nextConfigSetBatchSpan(uint64 _batchSpan) external onlyOwner {\n        // make sure the heads up is at least one batch\n        require(\n            _batchSpan < configChangeHeadsUpBlocks,\n            \"ConfigContract: batch span not shorter than heads up\"\n        );\n        nextConfig.batchSpan = _batchSpan;\n    }\n\n    function nextConfigSetBatchSizeLimit(uint64 _batchSizeLimit)\n        external\n        onlyOwner\n    {\n        nextConfig.batchSizeLimit = _batchSizeLimit;\n    }\n\n    function nextConfigSetTransactionSizeLimit(uint64 _transactionSizeLimit)\n        external\n        onlyOwner\n    {\n        nextConfig.transactionSizeLimit = _transactionSizeLimit;\n    }\n\n    function nextConfigSetTransactionGasLimit(uint64 _transactionGasLimit)\n        external\n        onlyOwner\n    {\n        nextConfig.transactionGasLimit = _transactionGasLimit;\n    }\n\n    function nextConfigSetFeeReceiver(address _feeReceiver) external onlyOwner {\n        nextConfig.feeReceiver = _feeReceiver;\n    }\n\n    function nextConfigSetTargetAddress(address _targetAddress)\n        external\n        onlyOwner\n    {\n        nextConfig.targetAddress = _targetAddress;\n    }\n\n    function nextConfigSetTargetFunctionSelector(bytes4 _targetFunctionSelector)\n        external\n        onlyOwner\n    {\n        nextConfig.targetFunctionSelector = _targetFunctionSelector;\n    }\n\n    function nextConfigSetExecutionTimeout(uint64 _executionTimeout)\n        external\n        onlyOwner\n    {\n        nextConfig.executionTimeout = _executionTimeout;\n    }\n\n    function nextConfigAddKeypers(address[] calldata _newKeypers)\n        external\n        onlyOwner\n    {\n        require(\n            nextConfig.keypers.length <= type(uint64).max - _newKeypers.length,\n            \"ConfigContract: number of keypers exceeds uint64\"\n        );\n        for (uint64 i = 0; i < _newKeypers.length; i++) {\n            nextConfig.keypers.push(_newKeypers[i]);\n        }\n    }\n\n    function nextConfigRemoveKeypers(uint64 n) external onlyOwner {\n        uint256 currentLength = nextConfig.keypers.length;\n        if (n <= currentLength) {\n            for (uint64 i = 0; i < n; i++) {\n                nextConfig.keypers.pop();\n            }\n        } else {\n            delete nextConfig.keypers;\n        }\n    }\n\n    //\n    // nextConfig keyper getters\n    //\n    function nextConfigKeypers(uint64 _index) external view returns (address) {\n        return nextConfig.keypers[_index];\n    }\n\n    function nextConfigNumKeypers() external view returns (uint64) {\n        return uint64(nextConfig.keypers.length);\n    }\n\n    //\n    // Scheduling\n    //\n\n    /// @notice Finalize the `nextConfig` object and add it to the end of the config sequence.\n    /// @notice `startBlockNumber` of the next config must be `configChangeHeadsUpBlocks`\n    ///     blocks in the future. Note that the batch spans are smaller than or equal to\n    ///     `configChangeHeadsUpBlocks`, so the heads up corresponds to at least one batch.\n    /// @notice The transition between the next config and the config currently at the end of the\n    ///     config sequence must be seamless, i.e., there batches must not be cut short.\n    function scheduleNextConfig() external onlyOwner {\n        require(\n            configs.length < type(uint64).max - 1,\n            \"ConfigContract: number of configs exceeds uint64\"\n        );\n        BatchConfig memory _config = configs[configs.length - 1];\n\n        require(\n            nextConfig.startBlockNumber >\n                block.number + configChangeHeadsUpBlocks,\n            \"ConfigContract: start block too early\"\n        );\n\n        if (_config.batchSpan > 0) {\n            require(\n                nextConfig.startBatchIndex > _config.startBatchIndex,\n                \"ConfigContract: start batch index too small\"\n            );\n            uint64 _batchDelta = nextConfig.startBatchIndex -\n                _config.startBatchIndex;\n            require(\n                _config.startBlockNumber + _config.batchSpan * _batchDelta ==\n                    nextConfig.startBlockNumber,\n                \"ConfigContract: config transition not seamless\"\n            );\n        } else {\n            require(\n                nextConfig.startBatchIndex == _config.startBatchIndex,\n                \"ConfigContract: transition from inactive config with wrong start index\"\n            );\n        }\n\n        configs.push(nextConfig);\n        nextConfig = zeroConfig();\n\n        emit ConfigScheduled(uint64(configs.length));\n    }\n\n    /// @notice Remove configs from the end.\n    /// @param _fromStartBlockNumber All configs with a start block number greater than or equal\n    ///     to this will be removed.\n    /// @notice `_fromStartBlockNumber` must be `configChangeHeadsUpBlocks` blocks in the future.\n    /// @notice This method can remove one or more configs. If no config would be removed, an error\n    ///     is thrown.\n    function unscheduleConfigs(uint64 _fromStartBlockNumber)\n        external\n        onlyOwner\n    {\n        require(\n            _fromStartBlockNumber > block.number + configChangeHeadsUpBlocks,\n            \"ConfigContract: from start block too early\"\n        );\n\n        uint64 _lengthBefore = uint64(configs.length);\n\n        for (uint256 i = configs.length - 1; i > 0; i--) {\n            BatchConfig storage config = configs[i];\n            if (config.startBlockNumber >= _fromStartBlockNumber) {\n                configs.pop();\n            } else {\n                break;\n            }\n        }\n\n        require(\n            configs.length < _lengthBefore,\n            \"ConfigContract: no configs unscheduled\"\n        );\n        emit ConfigUnscheduled(uint64(configs.length));\n    }\n}\n",
  "sourceMap": "1710:8520:12:-:0;;;2267:155;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;882:17:1;902:12;:10;:12::i;:::-;924:6;:18;;-1:-1:-1;;;;;;924:18:1;-1:-1:-1;;;;;924:18:1;;;;;;;957:43;;924:18;;-1:-1:-1;924:18:1;957:43;;924:6;;957:43;-1:-1:-1;2324:7:12;2337:12;:10;:12::i;:::-;2324:26;;;;;;;;-1:-1:-1;2324:26:12;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2324:26:12;;;;;-1:-1:-1;;;;;;;;2324:26:12;;;;-1:-1:-1;;;;;;2324:26:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2324:26:12;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2324:26:12;;;-1:-1:-1;;;;;2324:26:12;;;;-1:-1:-1;;;;;;;;2324:26:12;;;;;;;;-1:-1:-1;;;;;;;;2324:26:12;-1:-1:-1;;;2324:26:12;;;;;;;;;;;-1:-1:-1;;;;;2324:26:12;;;-1:-1:-1;;;2324:26:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;2324:26:12;-1:-1:-1;;;;;2324:26:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2324:26:12;;;;;;;;;;;-1:-1:-1;;;;2324:26:12;-1:-1:-1;;;2324:26:12;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2361:54:12;;;;;;;;;;1710:8520;;598:104:0;685:10;598:104;:::o;2428:592:12:-;2473:18;;:::i;:::-;-1:-1:-1;2522:491:12;;;;;;;;-1:-1:-1;2522:491:12;;;;;;;;;;2634:16;;;;;;;;;;2522:491;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2428:592::o;1710:8520::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1710:8520:12;-1:-1:-1;;;;;1710:8520:12;;;;;;;;;;;-1:-1:-1;1710:8520:12;;;;;;;-1:-1:-1;1710:8520:12;;;-1:-1:-1;1710:8520:12;:::i;:::-;;;:::o;:::-;;;;;;;;;-1:-1:-1;1710:8520:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;14:308:22;;136:2;124:9;115:7;111:23;107:32;104:2;;;157:6;149;142:22;104:2;188:16;;-1:-1:-1;;;;;233:30:22;;223:41;;213:2;;283:6;275;268:22;213:2;311:5;94:228;-1:-1:-1;;;94:228:22:o;:::-;1710:8520:12;;;;;;;;;;;",
  "sourcePath": "contracts/ConfigContract.sol",
  "type": "contract"
}
