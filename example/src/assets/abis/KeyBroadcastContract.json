{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "configContractAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "keyper",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "startBatchIndex",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "key",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "numVotes",
          "type": "uint64"
        }
      ],
      "name": "Voted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "startBatchIndex",
          "type": "uint64"
        }
      ],
      "name": "getBestKey",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "startBatchIndex",
          "type": "uint64"
        }
      ],
      "name": "getBestKeyHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "startBatchIndex",
          "type": "uint64"
        }
      ],
      "name": "getBestKeyNumVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getConfigContract",
      "outputs": [
        {
          "internalType": "contract ConfigContract",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "startBatchIndex",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "key",
          "type": "bytes"
        }
      ],
      "name": "getNumVotes",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "keyper",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "startBatchIndex",
          "type": "uint64"
        }
      ],
      "name": "hasVoted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "keyperIndex",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "startBatchIndex",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "key",
          "type": "bytes"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/ConfigContract.sol",
    "11": "openzeppelin/contracts/GSN/Context.sol",
    "12": "openzeppelin/contracts/access/Ownable.sol",
    "5": "contracts/KeyBroadcastContract.sol"
  },
  "ast": {
    "absolutePath": "contracts/KeyBroadcastContract.sol",
    "exportedSymbols": {
      "BatchConfig": [281],
      "ConfigContract": [903],
      "KeyBroadcastContract": [2290]
    },
    "id": 2291,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2019,
        "literals": ["solidity", ">=", "0.7", ".0", "<", "0.8", ".0"],
        "nodeType": "PragmaDirective",
        "src": "33:31:5"
      },
      {
        "id": 2020,
        "literals": ["experimental", "ABIEncoderV2"],
        "nodeType": "PragmaDirective",
        "src": "65:33:5"
      },
      {
        "absolutePath": "contracts/ConfigContract.sol",
        "file": "./ConfigContract.sol",
        "id": 2023,
        "nodeType": "ImportDirective",
        "scope": 2291,
        "sourceUnit": 904,
        "src": "100:65:5",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2021,
              "name": "ConfigContract",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "108:14:5",
              "typeDescriptions": {}
            }
          },
          {
            "foreign": {
              "id": 2022,
              "name": "BatchConfig",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "124:11:5",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2024,
          "nodeType": "StructuredDocumentation",
          "src": "167:354:5",
          "text": "@title A contract that keypers can use to vote on eon public keys. For each eon public key\n     generated, the keypers are expected to submit one vote. The contract logs the number of\n     votes so that users can only pick keys once they have reached votes from enough keypers\n     and thus have confidence that the key is actually correct."
        },
        "fullyImplemented": true,
        "id": 2290,
        "linearizedBaseContracts": [2290],
        "name": "KeyBroadcastContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 2025,
              "nodeType": "StructuredDocumentation",
              "src": "557:405:5",
              "text": "@notice The event emitted when a keyper voted on an eon key.\n @param keyper The address of the keyper who sent the vote.\n @param startBatchIndex The index of the first batch for which the key should be used.\n @param key The eon public key for which the keyper voted.\n @param numVotes The number of keypers (including this one) who have voted for the key so\n     far."
            },
            "id": 2035,
            "name": "Voted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2027,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "keyper",
                  "nodeType": "VariableDeclaration",
                  "scope": 2035,
                  "src": "988:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2026,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "988:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2029,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "startBatchIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 2035,
                  "src": "1020:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 2028,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1020:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2031,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 2035,
                  "src": "1052:9:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2030,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1052:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2033,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "numVotes",
                  "nodeType": "VariableDeclaration",
                  "scope": 2035,
                  "src": "1071:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 2032,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1071:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "978:114:5"
            },
            "src": "967:126:5"
          },
          {
            "constant": false,
            "id": 2037,
            "mutability": "mutable",
            "name": "_configContract",
            "nodeType": "VariableDeclaration",
            "scope": 2290,
            "src": "1099:38:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ConfigContract_$903",
              "typeString": "contract ConfigContract"
            },
            "typeName": {
              "id": 2036,
              "name": "ConfigContract",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 903,
              "src": "1099:14:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ConfigContract_$903",
                "typeString": "contract ConfigContract"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2043,
            "mutability": "mutable",
            "name": "_voted",
            "nodeType": "VariableDeclaration",
            "scope": 2290,
            "src": "1143:58:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint64_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(uint64 => mapping(address => bool))"
            },
            "typeName": {
              "id": 2042,
              "keyType": {
                "id": 2038,
                "name": "uint64",
                "nodeType": "ElementaryTypeName",
                "src": "1151:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                }
              },
              "nodeType": "Mapping",
              "src": "1143:43:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint64_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(uint64 => mapping(address => bool))"
              },
              "valueType": {
                "id": 2041,
                "keyType": {
                  "id": 2039,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1169:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1161:24:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 2040,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1180:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2049,
            "mutability": "mutable",
            "name": "_numVotes",
            "nodeType": "VariableDeclaration",
            "scope": 2290,
            "src": "1254:63:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint64_$_t_mapping$_t_bytes32_$_t_uint64_$_$",
              "typeString": "mapping(uint64 => mapping(bytes32 => uint64))"
            },
            "typeName": {
              "id": 2048,
              "keyType": {
                "id": 2044,
                "name": "uint64",
                "nodeType": "ElementaryTypeName",
                "src": "1262:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                }
              },
              "nodeType": "Mapping",
              "src": "1254:45:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint64_$_t_mapping$_t_bytes32_$_t_uint64_$_$",
                "typeString": "mapping(uint64 => mapping(bytes32 => uint64))"
              },
              "valueType": {
                "id": 2047,
                "keyType": {
                  "id": 2045,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1280:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "nodeType": "Mapping",
                "src": "1272:26:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint64_$",
                  "typeString": "mapping(bytes32 => uint64)"
                },
                "valueType": {
                  "id": 2046,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "1291:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2053,
            "mutability": "mutable",
            "name": "_keys",
            "nodeType": "VariableDeclaration",
            "scope": 2290,
            "src": "1375:39:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes_storage_$",
              "typeString": "mapping(bytes32 => bytes)"
            },
            "typeName": {
              "id": 2052,
              "keyType": {
                "id": 2050,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1383:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1375:25:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes_storage_$",
                "typeString": "mapping(bytes32 => bytes)"
              },
              "valueType": {
                "id": 2051,
                "name": "bytes",
                "nodeType": "ElementaryTypeName",
                "src": "1394:5:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2057,
            "mutability": "mutable",
            "name": "_bestKeyHashes",
            "nodeType": "VariableDeclaration",
            "scope": 2290,
            "src": "1440:49:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint64_$_t_bytes32_$",
              "typeString": "mapping(uint64 => bytes32)"
            },
            "typeName": {
              "id": 2056,
              "keyType": {
                "id": 2054,
                "name": "uint64",
                "nodeType": "ElementaryTypeName",
                "src": "1448:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                }
              },
              "nodeType": "Mapping",
              "src": "1440:26:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint64_$_t_bytes32_$",
                "typeString": "mapping(uint64 => bytes32)"
              },
              "valueType": {
                "id": 2055,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1458:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2061,
            "mutability": "mutable",
            "name": "_bestKeyNumVotes",
            "nodeType": "VariableDeclaration",
            "scope": 2290,
            "src": "1495:50:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint64_$_t_uint64_$",
              "typeString": "mapping(uint64 => uint64)"
            },
            "typeName": {
              "id": 2060,
              "keyType": {
                "id": 2058,
                "name": "uint64",
                "nodeType": "ElementaryTypeName",
                "src": "1503:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                }
              },
              "nodeType": "Mapping",
              "src": "1495:25:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint64_$_t_uint64_$",
                "typeString": "mapping(uint64 => uint64)"
              },
              "valueType": {
                "id": 2059,
                "name": "uint64",
                "nodeType": "ElementaryTypeName",
                "src": "1513:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2072,
              "nodeType": "Block",
              "src": "1595:72:5",
              "statements": [
                {
                  "expression": {
                    "id": 2070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2066,
                      "name": "_configContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2037,
                      "src": "1605:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ConfigContract_$903",
                        "typeString": "contract ConfigContract"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2068,
                          "name": "configContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2063,
                          "src": "1638:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2067,
                        "name": "ConfigContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 903,
                        "src": "1623:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ConfigContract_$903_$",
                          "typeString": "type(contract ConfigContract)"
                        }
                      },
                      "id": 2069,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1623:37:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ConfigContract_$903",
                        "typeString": "contract ConfigContract"
                      }
                    },
                    "src": "1605:55:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ConfigContract_$903",
                      "typeString": "contract ConfigContract"
                    }
                  },
                  "id": 2071,
                  "nodeType": "ExpressionStatement",
                  "src": "1605:55:5"
                }
              ]
            },
            "id": 2073,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2063,
                  "mutability": "mutable",
                  "name": "configContractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2073,
                  "src": "1564:29:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2062,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1564:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1563:31:5"
            },
            "returnParameters": {
              "id": 2065,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1595:0:5"
            },
            "scope": 2290,
            "src": "1552:115:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2208,
              "nodeType": "Block",
              "src": "2194:1365:5",
              "statements": [
                {
                  "assignments": [2084],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2084,
                      "mutability": "mutable",
                      "name": "config",
                      "nodeType": "VariableDeclaration",
                      "scope": 2208,
                      "src": "2204:25:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BatchConfig_$281_memory_ptr",
                        "typeString": "struct BatchConfig"
                      },
                      "typeName": {
                        "id": 2083,
                        "name": "BatchConfig",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 281,
                        "src": "2204:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BatchConfig_$281_storage_ptr",
                          "typeString": "struct BatchConfig"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2089,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2087,
                        "name": "startBatchIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2078,
                        "src": "2258:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "expression": {
                        "id": 2085,
                        "name": "_configContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2037,
                        "src": "2232:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ConfigContract_$903",
                          "typeString": "contract ConfigContract"
                        }
                      },
                      "id": 2086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getConfig",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 406,
                      "src": "2232:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint64_$returns$_t_struct$_BatchConfig_$281_memory_ptr_$",
                        "typeString": "function (uint64) view external returns (struct BatchConfig memory)"
                      }
                    },
                    "id": 2088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2232:42:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BatchConfig_$281_memory_ptr",
                      "typeString": "struct BatchConfig memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2204:70:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 2094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2091,
                            "name": "config",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2084,
                            "src": "2305:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BatchConfig_$281_memory_ptr",
                              "typeString": "struct BatchConfig memory"
                            }
                          },
                          "id": 2092,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "batchSpan",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 266,
                          "src": "2305:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2093,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2324:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2305:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4b657942726f616463617374436f6e74726163743a20636f6e66696720697320696e616374697665",
                        "id": 2095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2339:42:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5bd37009dc848abc0a0f5eca7c98618ebd36a6f4b202ff47fb223acba204fdc2",
                          "typeString": "literal_string \"KeyBroadcastContract: config is inactive\""
                        },
                        "value": "KeyBroadcastContract: config is inactive"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5bd37009dc848abc0a0f5eca7c98618ebd36a6f4b202ff47fb223acba204fdc2",
                          "typeString": "literal_string \"KeyBroadcastContract: config is inactive\""
                        }
                      ],
                      "id": 2090,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "2284:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2284:107:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2097,
                  "nodeType": "ExpressionStatement",
                  "src": "2284:107:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2099,
                          "name": "keyperIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2076,
                          "src": "2423:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 2100,
                              "name": "config",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2084,
                              "src": "2437:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BatchConfig_$281_memory_ptr",
                                "typeString": "struct BatchConfig memory"
                              }
                            },
                            "id": 2101,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "keypers",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 262,
                            "src": "2437:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 2102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2437:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2423:35:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4b657942726f616463617374436f6e74726163743a206b657970657220696e646578206f7574206f662072616e6765",
                        "id": 2104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2472:49:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b10ee3318143f87f4c7bf90e8335232a742ac0a1eefa875e8b99bb7e05c7b9ff",
                          "typeString": "literal_string \"KeyBroadcastContract: keyper index out of range\""
                        },
                        "value": "KeyBroadcastContract: keyper index out of range"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b10ee3318143f87f4c7bf90e8335232a742ac0a1eefa875e8b99bb7e05c7b9ff",
                          "typeString": "literal_string \"KeyBroadcastContract: keyper index out of range\""
                        }
                      ],
                      "id": 2098,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "2402:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2402:129:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2106,
                  "nodeType": "ExpressionStatement",
                  "src": "2402:129:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2108,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2562:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2562:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 2110,
                              "name": "config",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2084,
                              "src": "2576:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BatchConfig_$281_memory_ptr",
                                "typeString": "struct BatchConfig memory"
                              }
                            },
                            "id": 2111,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "keypers",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 262,
                            "src": "2576:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 2113,
                          "indexExpression": {
                            "id": 2112,
                            "name": "keyperIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2076,
                            "src": "2591:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2576:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2562:41:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4b657942726f616463617374436f6e74726163743a2073656e646572206973206e6f74206b6579706572",
                        "id": 2115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2617:44:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_62655d914d7be6fc6ce28c1362285d278f4640b225d1b63f20c16508c9c58f6b",
                          "typeString": "literal_string \"KeyBroadcastContract: sender is not keyper\""
                        },
                        "value": "KeyBroadcastContract: sender is not keyper"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_62655d914d7be6fc6ce28c1362285d278f4640b225d1b63f20c16508c9c58f6b",
                          "typeString": "literal_string \"KeyBroadcastContract: sender is not keyper\""
                        }
                      ],
                      "id": 2107,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "2541:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2541:130:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2117,
                  "nodeType": "ExpressionStatement",
                  "src": "2541:130:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2703:36:5",
                        "subExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2119,
                              "name": "_voted",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2043,
                              "src": "2704:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint64_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(uint64 => mapping(address => bool))"
                              }
                            },
                            "id": 2121,
                            "indexExpression": {
                              "id": 2120,
                              "name": "startBatchIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2078,
                              "src": "2711:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2704:23:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 2124,
                          "indexExpression": {
                            "expression": {
                              "id": 2122,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2728:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2728:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2704:35:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4b657942726f616463617374436f6e74726163743a206b65797065722068617320616c726561647920766f746564",
                        "id": 2126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2753:48:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f055cc4f0e51e560f2954ddcce0e3630267ccbac82963be9388374c3be26bb25",
                          "typeString": "literal_string \"KeyBroadcastContract: keyper has already voted\""
                        },
                        "value": "KeyBroadcastContract: keyper has already voted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f055cc4f0e51e560f2954ddcce0e3630267ccbac82963be9388374c3be26bb25",
                          "typeString": "literal_string \"KeyBroadcastContract: keyper has already voted\""
                        }
                      ],
                      "id": 2118,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "2682:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2682:129:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2128,
                  "nodeType": "ExpressionStatement",
                  "src": "2682:129:5"
                },
                {
                  "assignments": [2130],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2130,
                      "mutability": "mutable",
                      "name": "keyHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 2208,
                      "src": "2822:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2129,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2822:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2134,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2132,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2080,
                        "src": "2850:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2131,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2840:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2840:14:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2822:32:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 2135,
                            "name": "_keys",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2053,
                            "src": "2914:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes_storage_$",
                              "typeString": "mapping(bytes32 => bytes storage ref)"
                            }
                          },
                          "id": 2137,
                          "indexExpression": {
                            "id": 2136,
                            "name": "keyHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2130,
                            "src": "2920:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2914:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage",
                            "typeString": "bytes storage ref"
                          }
                        },
                        "id": 2138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2914:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 2139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2939:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2914:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 2141,
                          "name": "key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2080,
                          "src": "2944:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 2142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2944:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 2143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2958:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2944:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2914:45:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2153,
                  "nodeType": "IfStatement",
                  "src": "2910:96:5",
                  "trueBody": {
                    "id": 2152,
                    "nodeType": "Block",
                    "src": "2961:45:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 2150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2146,
                              "name": "_keys",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2053,
                              "src": "2975:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes_storage_$",
                                "typeString": "mapping(bytes32 => bytes storage ref)"
                              }
                            },
                            "id": 2148,
                            "indexExpression": {
                              "id": 2147,
                              "name": "keyHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2130,
                              "src": "2981:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2975:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2149,
                            "name": "key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2080,
                            "src": "2992:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "src": "2975:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage",
                            "typeString": "bytes storage ref"
                          }
                        },
                        "id": 2151,
                        "nodeType": "ExpressionStatement",
                        "src": "2975:20:5"
                      }
                    ]
                  }
                },
                {
                  "assignments": [2155],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2155,
                      "mutability": "mutable",
                      "name": "numVotes",
                      "nodeType": "VariableDeclaration",
                      "scope": 2208,
                      "src": "3038:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 2154,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "3038:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2163,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "id": 2162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2156,
                          "name": "_numVotes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2049,
                          "src": "3056:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint64_$_t_mapping$_t_bytes32_$_t_uint64_$_$",
                            "typeString": "mapping(uint64 => mapping(bytes32 => uint64))"
                          }
                        },
                        "id": 2158,
                        "indexExpression": {
                          "id": 2157,
                          "name": "startBatchIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2078,
                          "src": "3066:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3056:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint64_$",
                          "typeString": "mapping(bytes32 => uint64)"
                        }
                      },
                      "id": 2160,
                      "indexExpression": {
                        "id": 2159,
                        "name": "keyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2130,
                        "src": "3083:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3056:35:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 2161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3094:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3056:39:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3038:57:5"
                },
                {
                  "expression": {
                    "id": 2171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2164,
                          "name": "_voted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2043,
                          "src": "3105:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint64_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(uint64 => mapping(address => bool))"
                          }
                        },
                        "id": 2168,
                        "indexExpression": {
                          "id": 2165,
                          "name": "startBatchIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2078,
                          "src": "3112:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3105:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2169,
                      "indexExpression": {
                        "expression": {
                          "id": 2166,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3129:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3129:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3105:35:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3143:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3105:42:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2172,
                  "nodeType": "ExpressionStatement",
                  "src": "3105:42:5"
                },
                {
                  "expression": {
                    "id": 2179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2173,
                          "name": "_numVotes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2049,
                          "src": "3157:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint64_$_t_mapping$_t_bytes32_$_t_uint64_$_$",
                            "typeString": "mapping(uint64 => mapping(bytes32 => uint64))"
                          }
                        },
                        "id": 2176,
                        "indexExpression": {
                          "id": 2174,
                          "name": "startBatchIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2078,
                          "src": "3167:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3157:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint64_$",
                          "typeString": "mapping(bytes32 => uint64)"
                        }
                      },
                      "id": 2177,
                      "indexExpression": {
                        "id": 2175,
                        "name": "keyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2130,
                        "src": "3184:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3157:35:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2178,
                      "name": "numVotes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2155,
                      "src": "3195:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "3157:46:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 2180,
                  "nodeType": "ExpressionStatement",
                  "src": "3157:46:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "id": 2185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2181,
                      "name": "numVotes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2155,
                      "src": "3218:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 2182,
                        "name": "_bestKeyNumVotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2061,
                        "src": "3229:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint64_$_t_uint64_$",
                          "typeString": "mapping(uint64 => uint64)"
                        }
                      },
                      "id": 2184,
                      "indexExpression": {
                        "id": 2183,
                        "name": "startBatchIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2078,
                        "src": "3246:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3229:33:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "3218:44:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2199,
                  "nodeType": "IfStatement",
                  "src": "3214:174:5",
                  "trueBody": {
                    "id": 2198,
                    "nodeType": "Block",
                    "src": "3264:124:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 2190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2186,
                              "name": "_bestKeyNumVotes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2061,
                              "src": "3278:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint64_$_t_uint64_$",
                                "typeString": "mapping(uint64 => uint64)"
                              }
                            },
                            "id": 2188,
                            "indexExpression": {
                              "id": 2187,
                              "name": "startBatchIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2078,
                              "src": "3295:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3278:33:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2189,
                            "name": "numVotes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2155,
                            "src": "3314:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "3278:44:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 2191,
                        "nodeType": "ExpressionStatement",
                        "src": "3278:44:5"
                      },
                      {
                        "expression": {
                          "id": 2196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2192,
                              "name": "_bestKeyHashes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2057,
                              "src": "3336:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint64_$_t_bytes32_$",
                                "typeString": "mapping(uint64 => bytes32)"
                              }
                            },
                            "id": 2194,
                            "indexExpression": {
                              "id": 2193,
                              "name": "startBatchIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2078,
                              "src": "3351:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3336:31:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2195,
                            "name": "keyHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2130,
                            "src": "3370:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "3336:41:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 2197,
                        "nodeType": "ExpressionStatement",
                        "src": "3336:41:5"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2201,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3431:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3431:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 2203,
                        "name": "startBatchIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2078,
                        "src": "3472:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 2204,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2080,
                        "src": "3506:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 2205,
                        "name": "numVotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2155,
                        "src": "3533:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 2200,
                      "name": "Voted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2035,
                      "src": "3403:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$_t_uint64_$returns$__$",
                        "typeString": "function (address,uint64,bytes memory,uint64)"
                      }
                    },
                    "id": 2206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": ["keyper", "startBatchIndex", "key", "numVotes"],
                    "nodeType": "FunctionCall",
                    "src": "3403:149:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2207,
                  "nodeType": "EmitStatement",
                  "src": "3398:154:5"
                }
              ]
            },
            "documentation": {
              "id": 2074,
              "nodeType": "StructuredDocumentation",
              "src": "1673:403:5",
              "text": "@notice Submit a vote.\n @notice Can only be called by keypers defined in the config responsible for\n     `startBatchIndex`, and only once per `startBatchIndex`.\n @param keyperIndex The index of the calling keyper in the batch config.\n @param startBatchIndex The index of the first batch for which the key should be used.\n @param key The eon public key to vote for."
            },
            "functionSelector": "6b32c795",
            "id": 2209,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2076,
                  "mutability": "mutable",
                  "name": "keyperIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 2209,
                  "src": "2104:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 2075,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2104:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2078,
                  "mutability": "mutable",
                  "name": "startBatchIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 2209,
                  "src": "2132:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 2077,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2132:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2080,
                  "mutability": "mutable",
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 2209,
                  "src": "2164:16:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2079,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2164:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2094:92:5"
            },
            "returnParameters": {
              "id": 2082,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2194:0:5"
            },
            "scope": 2290,
            "src": "2081:1478:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2216,
              "nodeType": "Block",
              "src": "3631:39:5",
              "statements": [
                {
                  "expression": {
                    "id": 2214,
                    "name": "_configContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2037,
                    "src": "3648:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ConfigContract_$903",
                      "typeString": "contract ConfigContract"
                    }
                  },
                  "functionReturnParameters": 2213,
                  "id": 2215,
                  "nodeType": "Return",
                  "src": "3641:22:5"
                }
              ]
            },
            "functionSelector": "0e1c3a4a",
            "id": 2217,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getConfigContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3591:2:5"
            },
            "returnParameters": {
              "id": 2213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2212,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2217,
                  "src": "3615:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ConfigContract_$903",
                    "typeString": "contract ConfigContract"
                  },
                  "typeName": {
                    "id": 2211,
                    "name": "ConfigContract",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 903,
                    "src": "3615:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ConfigContract_$903",
                      "typeString": "contract ConfigContract"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3614:16:5"
            },
            "scope": 2290,
            "src": "3565:105:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2232,
              "nodeType": "Block",
              "src": "3789:55:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 2226,
                        "name": "_voted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2043,
                        "src": "3806:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint64_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(uint64 => mapping(address => bool))"
                        }
                      },
                      "id": 2228,
                      "indexExpression": {
                        "id": 2227,
                        "name": "startBatchIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2221,
                        "src": "3813:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3806:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 2230,
                    "indexExpression": {
                      "id": 2229,
                      "name": "keyper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2219,
                      "src": "3830:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3806:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2225,
                  "id": 2231,
                  "nodeType": "Return",
                  "src": "3799:38:5"
                }
              ]
            },
            "functionSelector": "cf1d7a0a",
            "id": 2233,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hasVoted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2219,
                  "mutability": "mutable",
                  "name": "keyper",
                  "nodeType": "VariableDeclaration",
                  "scope": 2233,
                  "src": "3694:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2218,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3694:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2221,
                  "mutability": "mutable",
                  "name": "startBatchIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 2233,
                  "src": "3710:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 2220,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3710:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3693:40:5"
            },
            "returnParameters": {
              "id": 2225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2224,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2233,
                  "src": "3779:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2223,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3779:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3778:6:5"
            },
            "scope": 2290,
            "src": "3676:168:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2250,
              "nodeType": "Block",
              "src": "3970:66:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 2242,
                        "name": "_numVotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2049,
                        "src": "3987:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint64_$_t_mapping$_t_bytes32_$_t_uint64_$_$",
                          "typeString": "mapping(uint64 => mapping(bytes32 => uint64))"
                        }
                      },
                      "id": 2244,
                      "indexExpression": {
                        "id": 2243,
                        "name": "startBatchIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2235,
                        "src": "3997:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3987:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint64_$",
                        "typeString": "mapping(bytes32 => uint64)"
                      }
                    },
                    "id": 2248,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 2246,
                          "name": "key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2237,
                          "src": "4024:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 2245,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "4014:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 2247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4014:14:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3987:42:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "functionReturnParameters": 2241,
                  "id": 2249,
                  "nodeType": "Return",
                  "src": "3980:49:5"
                }
              ]
            },
            "functionSelector": "1845bf5c",
            "id": 2251,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNumVotes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2235,
                  "mutability": "mutable",
                  "name": "startBatchIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 2251,
                  "src": "3871:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 2234,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3871:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2237,
                  "mutability": "mutable",
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 2251,
                  "src": "3895:16:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2236,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3895:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3870:42:5"
            },
            "returnParameters": {
              "id": 2241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2240,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2251,
                  "src": "3958:6:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 2239,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3958:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3957:8:5"
            },
            "scope": 2290,
            "src": "3850:186:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2262,
              "nodeType": "Block",
              "src": "4148:55:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2258,
                      "name": "_bestKeyHashes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2057,
                      "src": "4165:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint64_$_t_bytes32_$",
                        "typeString": "mapping(uint64 => bytes32)"
                      }
                    },
                    "id": 2260,
                    "indexExpression": {
                      "id": 2259,
                      "name": "startBatchIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2253,
                      "src": "4180:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4165:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 2257,
                  "id": 2261,
                  "nodeType": "Return",
                  "src": "4158:38:5"
                }
              ]
            },
            "functionSelector": "ab0a3ffe",
            "id": 2263,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBestKeyHash",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2253,
                  "mutability": "mutable",
                  "name": "startBatchIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 2263,
                  "src": "4066:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 2252,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "4066:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4065:24:5"
            },
            "returnParameters": {
              "id": 2257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2256,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2263,
                  "src": "4135:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2255,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4135:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4134:9:5"
            },
            "scope": 2290,
            "src": "4042:161:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2276,
              "nodeType": "Block",
              "src": "4316:62:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2270,
                      "name": "_keys",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2053,
                      "src": "4333:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes_storage_$",
                        "typeString": "mapping(bytes32 => bytes storage ref)"
                      }
                    },
                    "id": 2274,
                    "indexExpression": {
                      "baseExpression": {
                        "id": 2271,
                        "name": "_bestKeyHashes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2057,
                        "src": "4339:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint64_$_t_bytes32_$",
                          "typeString": "mapping(uint64 => bytes32)"
                        }
                      },
                      "id": 2273,
                      "indexExpression": {
                        "id": 2272,
                        "name": "startBatchIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2265,
                        "src": "4354:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4339:31:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4333:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "functionReturnParameters": 2269,
                  "id": 2275,
                  "nodeType": "Return",
                  "src": "4326:45:5"
                }
              ]
            },
            "functionSelector": "2553600e",
            "id": 2277,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBestKey",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2265,
                  "mutability": "mutable",
                  "name": "startBatchIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 2277,
                  "src": "4229:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 2264,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "4229:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4228:24:5"
            },
            "returnParameters": {
              "id": 2269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2268,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2277,
                  "src": "4298:12:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2267,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4298:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4297:14:5"
            },
            "scope": 2290,
            "src": "4209:169:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2288,
              "nodeType": "Block",
              "src": "4494:57:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2284,
                      "name": "_bestKeyNumVotes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2061,
                      "src": "4511:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint64_$_t_uint64_$",
                        "typeString": "mapping(uint64 => uint64)"
                      }
                    },
                    "id": 2286,
                    "indexExpression": {
                      "id": 2285,
                      "name": "startBatchIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2279,
                      "src": "4528:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4511:33:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "functionReturnParameters": 2283,
                  "id": 2287,
                  "nodeType": "Return",
                  "src": "4504:40:5"
                }
              ]
            },
            "functionSelector": "41ecda09",
            "id": 2289,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBestKeyNumVotes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2279,
                  "mutability": "mutable",
                  "name": "startBatchIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 2289,
                  "src": "4412:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 2278,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "4412:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4411:24:5"
            },
            "returnParameters": {
              "id": 2283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2282,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2289,
                  "src": "4481:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2281,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4481:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4480:9:5"
            },
            "scope": 2290,
            "src": "4384:167:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2291,
        "src": "521:4032:5"
      }
    ],
    "src": "33:4521:5"
  },
  "bytecode": "608060405234801561001057600080fd5b50604051610c8e380380610c8e83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b610bfd806100916000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806341ecda091161005b57806341ecda09146100e05780636b32c79514610100578063ab0a3ffe14610115578063cf1d7a0a146101285761007d565b80630e1c3a4a146100825780631845bf5c146100a05780632553600e146100c0575b600080fd5b61008a610148565b60405161009791906109ea565b60405180910390f35b6100b36100ae3660046108cc565b610157565b6040516100979190610b2d565b6100d36100ce3660046108a9565b610187565b60405161009791906109d7565b6100f36100ee3660046108a9565b61023d565b60405161009791906109ce565b61011361010e366004610919565b61025b565b005b6100f36101233660046108a9565b610535565b61013b61013636600461073a565b610550565b60405161009791906109c3565b6000546001600160a01b031690565b6001600160401b039182166000908152600260209081526040808320845194830194909420835292905220541690565b6001600160401b0381166000908152600460209081526040808320548352600382529182902080548351601f60026000196101006001861615020190931692909204918201849004840281018401909452808452606093928301828280156102305780601f1061020557610100808354040283529160200191610230565b820191906000526020600020905b81548152906001019060200180831161021357829003601f168201915b505050505090505b919050565b6001600160401b039081166000908152600560205260409020541690565b6000805460405163700465b160e11b81526001600160a01b039091169063e008cb629061028c908690600401610b2d565b60006040518083038186803b1580156102a457600080fd5b505afa1580156102b8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102e09190810190610772565b9050600081608001516001600160401b0316116103185760405162461bcd60e51b815260040161030f906109fe565b60405180910390fd5b806040015151846001600160401b0316106103455760405162461bcd60e51b815260040161030f90610a90565b8060400151846001600160401b03168151811061035e57fe5b60200260200101516001600160a01b0316336001600160a01b0316146103965760405162461bcd60e51b815260040161030f90610a46565b6001600160401b038316600090815260016020908152604080832033845290915290205460ff16156103da5760405162461bcd60e51b815260040161030f90610adf565b8151602080840191909120600081815260039092526040909120546002600019610100600184161502019091160415801561041457508251155b1561043a576000818152600360209081526040909120845161043892860190610583565b505b6001600160401b0384811660008181526002602090815260408083208684528252808320805485855260018085528386203387528552838620805460ff191682179055825467ffffffffffffffff19169188160180881691821790925594845260059092529091205490921610156104e8576001600160401b038581166000908152600560209081526040808320805467ffffffffffffffff19169486169490941790935560049052208290555b336001600160a01b03167f305124b6ec831bb4150eb1ddbd4e8cc4b95687b9a6258b110fd0e9865914b0bf86868460405161052593929190610b41565b60405180910390a2505050505050565b6001600160401b031660009081526004602052604090205490565b6001600160401b031660009081526001602090815260408083206001600160a01b03949094168352929052205460ff1690565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826105b957600085556105ff565b82601f106105d257805160ff19168380011785556105ff565b828001600101855582156105ff579182015b828111156105ff5782518255916020019190600101906105e4565b5061060b92915061060f565b5090565b5b8082111561060b5760008155600101610610565b805161023881610b9a565b600082601f83011261063f578081fd5b815160206001600160401b0382111561065457fe5b808202610662828201610b77565b83815282810190868401838801850189101561067c578687fd5b8693505b858410156106a757805161069381610b9a565b835260019390930192918401918401610680565b50979650505050505050565b80516001600160e01b03198116811461023857600080fd5b600082601f8301126106db578081fd5b81356001600160401b038111156106ee57fe5b610701601f8201601f1916602001610b77565b818152846020838601011115610715578283fd5b816020850160208301379081016020019190915292915050565b805161023881610bb2565b6000806040838503121561074c578182fd5b823561075781610b9a565b9150602083013561076781610bb2565b809150509250929050565b600060208284031215610783578081fd5b81516001600160401b0380821115610799578283fd5b81840191506101808083870312156107af578384fd5b6107b881610b77565b90506107c38361072f565b81526107d16020840161072f565b60208201526040830151828111156107e7578485fd5b6107f38782860161062f565b6040830152506108056060840161072f565b60608201526108166080840161072f565b608082015261082760a0840161072f565b60a082015261083860c0840161072f565b60c082015261084960e0840161072f565b60e0820152610100915061085e828401610624565b828201526101209150610872828401610624565b8282015261014091506108868284016106b3565b82820152610160915061089a82840161072f565b91810191909152949350505050565b6000602082840312156108ba578081fd5b81356108c581610bb2565b9392505050565b600080604083850312156108de578182fd5b82356108e981610bb2565b915060208301356001600160401b03811115610903578182fd5b61090f858286016106cb565b9150509250929050565b60008060006060848603121561092d578081fd5b833561093881610bb2565b9250602084013561094881610bb2565b915060408401356001600160401b03811115610962578182fd5b61096e868287016106cb565b9150509250925092565b60008151808452815b8181101561099d57602081850181015186830182015201610981565b818111156109ae5782602083870101525b50601f01601f19169290920160200192915050565b901515815260200190565b90815260200190565b6000602082526108c56020830184610978565b6001600160a01b0391909116815260200190565b60208082526028908201527f4b657942726f616463617374436f6e74726163743a20636f6e66696720697320604082015267696e61637469766560c01b606082015260800190565b6020808252602a908201527f4b657942726f616463617374436f6e74726163743a2073656e646572206973206040820152693737ba1035b2bcb832b960b11b606082015260800190565b6020808252602f908201527f4b657942726f616463617374436f6e74726163743a206b657970657220696e6460408201526e6578206f7574206f662072616e676560881b606082015260800190565b6020808252602e908201527f4b657942726f616463617374436f6e74726163743a206b65797065722068617360408201526d08185b1c9958591e481d9bdd195960921b606082015260800190565b6001600160401b0391909116815260200190565b60006001600160401b03808616835260606020840152610b646060840186610978565b9150808416604084015250949350505050565b6040518181016001600160401b0381118282101715610b9257fe5b604052919050565b6001600160a01b0381168114610baf57600080fd5b50565b6001600160401b0381168114610baf57600080fdfea26469706673582212206ef96524495771d568c7cf360035b7c280627ceed21ad801983ec8b7027fd9f864736f6c63430007060033",
  "bytecodeSha1": "c09b8f69cb1ee18560621fe164c6f9322554c920",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.7.6+commit.7338295f"
  },
  "contractName": "KeyBroadcastContract",
  "coverageMap": {
    "branches": {
      "1": {},
      "11": {},
      "12": {},
      "5": {
        "KeyBroadcastContract.vote": {
          "16": [2305, 2325, true],
          "17": [2423, 2458, true],
          "18": [2562, 2603, true],
          "19": [2703, 2739, true],
          "20": [2914, 2940, false],
          "21": [2944, 2959, false]
        }
      }
    },
    "statements": {
      "1": {},
      "11": {},
      "12": {},
      "5": {
        "KeyBroadcastContract.getBestKey": {
          "2": [4326, 4371]
        },
        "KeyBroadcastContract.getBestKeyHash": {
          "14": [4158, 4196]
        },
        "KeyBroadcastContract.getBestKeyNumVotes": {
          "3": [4504, 4544]
        },
        "KeyBroadcastContract.getConfigContract": {
          "0": [3641, 3663]
        },
        "KeyBroadcastContract.getNumVotes": {
          "1": [3980, 4029]
        },
        "KeyBroadcastContract.hasVoted": {
          "15": [3799, 3837]
        },
        "KeyBroadcastContract.vote": {
          "4": [2284, 2391],
          "5": [2402, 2531],
          "6": [2541, 2671],
          "7": [2682, 2811],
          "8": [2975, 2995],
          "9": [3105, 3147],
          "10": [3157, 3203],
          "11": [3278, 3322],
          "12": [3336, 3377],
          "13": [3398, 3552]
        }
      }
    }
  },
  "dependencies": ["ConfigContract", "Context", "Ownable"],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061007d5760003560e01c806341ecda091161005b57806341ecda09146100e05780636b32c79514610100578063ab0a3ffe14610115578063cf1d7a0a146101285761007d565b80630e1c3a4a146100825780631845bf5c146100a05780632553600e146100c0575b600080fd5b61008a610148565b60405161009791906109ea565b60405180910390f35b6100b36100ae3660046108cc565b610157565b6040516100979190610b2d565b6100d36100ce3660046108a9565b610187565b60405161009791906109d7565b6100f36100ee3660046108a9565b61023d565b60405161009791906109ce565b61011361010e366004610919565b61025b565b005b6100f36101233660046108a9565b610535565b61013b61013636600461073a565b610550565b60405161009791906109c3565b6000546001600160a01b031690565b6001600160401b039182166000908152600260209081526040808320845194830194909420835292905220541690565b6001600160401b0381166000908152600460209081526040808320548352600382529182902080548351601f60026000196101006001861615020190931692909204918201849004840281018401909452808452606093928301828280156102305780601f1061020557610100808354040283529160200191610230565b820191906000526020600020905b81548152906001019060200180831161021357829003601f168201915b505050505090505b919050565b6001600160401b039081166000908152600560205260409020541690565b6000805460405163700465b160e11b81526001600160a01b039091169063e008cb629061028c908690600401610b2d565b60006040518083038186803b1580156102a457600080fd5b505afa1580156102b8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102e09190810190610772565b9050600081608001516001600160401b0316116103185760405162461bcd60e51b815260040161030f906109fe565b60405180910390fd5b806040015151846001600160401b0316106103455760405162461bcd60e51b815260040161030f90610a90565b8060400151846001600160401b03168151811061035e57fe5b60200260200101516001600160a01b0316336001600160a01b0316146103965760405162461bcd60e51b815260040161030f90610a46565b6001600160401b038316600090815260016020908152604080832033845290915290205460ff16156103da5760405162461bcd60e51b815260040161030f90610adf565b8151602080840191909120600081815260039092526040909120546002600019610100600184161502019091160415801561041457508251155b1561043a576000818152600360209081526040909120845161043892860190610583565b505b6001600160401b0384811660008181526002602090815260408083208684528252808320805485855260018085528386203387528552838620805460ff191682179055825467ffffffffffffffff19169188160180881691821790925594845260059092529091205490921610156104e8576001600160401b038581166000908152600560209081526040808320805467ffffffffffffffff19169486169490941790935560049052208290555b336001600160a01b03167f305124b6ec831bb4150eb1ddbd4e8cc4b95687b9a6258b110fd0e9865914b0bf86868460405161052593929190610b41565b60405180910390a2505050505050565b6001600160401b031660009081526004602052604090205490565b6001600160401b031660009081526001602090815260408083206001600160a01b03949094168352929052205460ff1690565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826105b957600085556105ff565b82601f106105d257805160ff19168380011785556105ff565b828001600101855582156105ff579182015b828111156105ff5782518255916020019190600101906105e4565b5061060b92915061060f565b5090565b5b8082111561060b5760008155600101610610565b805161023881610b9a565b600082601f83011261063f578081fd5b815160206001600160401b0382111561065457fe5b808202610662828201610b77565b83815282810190868401838801850189101561067c578687fd5b8693505b858410156106a757805161069381610b9a565b835260019390930192918401918401610680565b50979650505050505050565b80516001600160e01b03198116811461023857600080fd5b600082601f8301126106db578081fd5b81356001600160401b038111156106ee57fe5b610701601f8201601f1916602001610b77565b818152846020838601011115610715578283fd5b816020850160208301379081016020019190915292915050565b805161023881610bb2565b6000806040838503121561074c578182fd5b823561075781610b9a565b9150602083013561076781610bb2565b809150509250929050565b600060208284031215610783578081fd5b81516001600160401b0380821115610799578283fd5b81840191506101808083870312156107af578384fd5b6107b881610b77565b90506107c38361072f565b81526107d16020840161072f565b60208201526040830151828111156107e7578485fd5b6107f38782860161062f565b6040830152506108056060840161072f565b60608201526108166080840161072f565b608082015261082760a0840161072f565b60a082015261083860c0840161072f565b60c082015261084960e0840161072f565b60e0820152610100915061085e828401610624565b828201526101209150610872828401610624565b8282015261014091506108868284016106b3565b82820152610160915061089a82840161072f565b91810191909152949350505050565b6000602082840312156108ba578081fd5b81356108c581610bb2565b9392505050565b600080604083850312156108de578182fd5b82356108e981610bb2565b915060208301356001600160401b03811115610903578182fd5b61090f858286016106cb565b9150509250929050565b60008060006060848603121561092d578081fd5b833561093881610bb2565b9250602084013561094881610bb2565b915060408401356001600160401b03811115610962578182fd5b61096e868287016106cb565b9150509250925092565b60008151808452815b8181101561099d57602081850181015186830182015201610981565b818111156109ae5782602083870101525b50601f01601f19169290920160200192915050565b901515815260200190565b90815260200190565b6000602082526108c56020830184610978565b6001600160a01b0391909116815260200190565b60208082526028908201527f4b657942726f616463617374436f6e74726163743a20636f6e66696720697320604082015267696e61637469766560c01b606082015260800190565b6020808252602a908201527f4b657942726f616463617374436f6e74726163743a2073656e646572206973206040820152693737ba1035b2bcb832b960b11b606082015260800190565b6020808252602f908201527f4b657942726f616463617374436f6e74726163743a206b657970657220696e6460408201526e6578206f7574206f662072616e676560881b606082015260800190565b6020808252602e908201527f4b657942726f616463617374436f6e74726163743a206b65797065722068617360408201526d08185b1c9958591e481d9bdd195960921b606082015260800190565b6001600160401b0391909116815260200190565b60006001600160401b03808616835260606020840152610b646060840186610978565b9150808416604084015250949350505050565b6040518181016001600160401b0381118282101715610b9257fe5b604052919050565b6001600160a01b0381168114610baf57600080fd5b50565b6001600160401b0381168114610baf57600080fdfea26469706673582212206ef96524495771d568c7cf360035b7c280627ceed21ad801983ec8b7027fd9f864736f6c63430007060033",
  "deployedSourceMap": "521:4032:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3565:105;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3850:186;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4209:169::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4384:167::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2081:1478::-;;;;;;:::i;:::-;;:::i;:::-;;4042:161;;;;;;:::i;:::-;;:::i;3676:168::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3565:105::-;3615:14;3648:15;-1:-1:-1;;;;;3648:15:5;3565:105;:::o;3850:186::-;-1:-1:-1;;;;;3987:26:5;;;3958:6;3987:26;;;:9;:26;;;;;;;;4014:14;;;;;;;;;3987:42;;;;;;;;;3850:186::o;4209:169::-;-1:-1:-1;;;;;4339:31:5;;4333:38;4339:31;;;:14;:31;;;;;;;;;4333:38;;:5;:38;;;;;;4326:45;;;;;;-1:-1:-1;;4326:45:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4298:12;;4326:45;;;4333:38;4326:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4209:169;;;;:::o;4384:167::-;-1:-1:-1;;;;;4511:33:5;;;4481:7;4511:33;;;:16;:33;;;;;;;;4384:167::o;2081:1478::-;2204:25;2232:15;;:42;;-1:-1:-1;;;2232:42:5;;-1:-1:-1;;;;;2232:15:5;;;;:25;;:42;;2258:15;;2232:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2232:42:5;;;;;;;;;;;;:::i;:::-;2204:70;;2324:1;2305:6;:16;;;-1:-1:-1;;;;;2305:20:5;;2284:107;;;;-1:-1:-1;;;2284:107:5;;;;;;;:::i;:::-;;;;;;;;;2437:6;:14;;;:21;2423:11;-1:-1:-1;;;;;2423:35:5;;2402:129;;;;-1:-1:-1;;;2402:129:5;;;;;;;:::i;:::-;2576:6;:14;;;2591:11;-1:-1:-1;;;;;2576:27:5;;;;;;;;;;;;;;;-1:-1:-1;;;;;2562:41:5;:10;-1:-1:-1;;;;;2562:41:5;;2541:130;;;;-1:-1:-1;;;2541:130:5;;;;;;;:::i;:::-;-1:-1:-1;;;;;2704:23:5;;;;;;:6;:23;;;;;;;;2728:10;2704:35;;;;;;;;;;2703:36;2682:129;;;;-1:-1:-1;;;2682:129:5;;;;;;;:::i;:::-;2840:14;;;;;;;;;;2822:15;2914:14;;;:5;:14;;;;;;;:21;;-1:-1:-1;;2914:21:5;;;;;;;;;;;:26;:45;;;;-1:-1:-1;2944:10:5;;:15;2914:45;2910:96;;;2975:14;;;;:5;:14;;;;;;;;:20;;;;;;;;:::i;:::-;;2910:96;-1:-1:-1;;;;;3056:26:5;;;3038:15;3056:26;;;:9;:26;;;;;;;;:35;;;;;;;;;;3105:23;;;3056:35;3105:23;;;;;;3129:10;3105:35;;;;;;;:42;;-1:-1:-1;;3105:42:5;;;;;3157:46;;-1:-1:-1;;3157:46:5;3056:35;;;:39;3157:46;;;;;;;;;3229:33;;;:16;:33;;;;;;;3056:39;;3229:33;-1:-1:-1;3214:174:5;;;-1:-1:-1;;;;;3278:33:5;;;;;;;:16;:33;;;;;;;;:44;;-1:-1:-1;;3278:44:5;;;;;;;;;;;3336:14;:31;;;:41;;;3214:174;3431:10;-1:-1:-1;;;;;3403:149:5;;3472:15;3506:3;3533:8;3403:149;;;;;;;;:::i;:::-;;;;;;;;2081:1478;;;;;;:::o;4042:161::-;-1:-1:-1;;;;;4165:31:5;4135:7;4165:31;;;:14;:31;;;;;;;4042:161::o;3676:168::-;-1:-1:-1;;;;;3806:23:5;3779:4;3806:23;;;:6;:23;;;;;;;;-1:-1:-1;;;;;3806:31:5;;;;;;;;;;;;;;3676:168::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:142:22;95:13;;117:33;95:13;117:33;:::i;161:814::-;;285:3;278:4;270:6;266:17;262:27;252:2;;307:5;300;293:20;252:2;340:6;334:13;366:4;-1:-1:-1;;;;;385:2:22;382:26;379:2;;;411:9;379:2;449;445;441:11;472:27;495:2;491;487:11;472:27;:::i;:::-;533:15;;;564:12;;;;596:15;;;630;;;626:24;;623:33;-1:-1:-1;620:2:22;;;673:5;666;659:20;620:2;699:5;690:14;;713:233;727:2;724:1;721:9;713:233;;;791:3;785:10;808:33;835:5;808:33;:::i;:::-;854:18;;745:1;738:9;;;;;892:12;;;;924;;713:233;;;-1:-1:-1;964:5:22;242:733;-1:-1:-1;;;;;;;242:733:22:o;980:179::-;1060:13;;-1:-1:-1;;;;;;1102:32:22;;1092:43;;1082:2;;1149:1;1146;1139:12;1164:542;;1261:3;1254:4;1246:6;1242:17;1238:27;1228:2;;1283:5;1276;1269:20;1228:2;1323:6;1310:20;-1:-1:-1;;;;;1345:2:22;1342:26;1339:2;;;1371:9;1339:2;1406:54;1448:2;1429:13;;-1:-1:-1;;1425:27:22;1454:4;1421:38;1406:54;:::i;:::-;1485:2;1476:7;1469:19;1531:3;1524:4;1519:2;1511:6;1507:15;1503:26;1500:35;1497:2;;;1552:5;1545;1538:20;1497:2;1621;1614:4;1606:6;1602:17;1595:4;1586:7;1582:18;1569:55;1644:16;;;1662:4;1640:27;1633:42;;;;1648:7;1218:488;-1:-1:-1;;1218:488:22:o;1711:140::-;1791:13;;1813:32;1791:13;1813:32;:::i;1856:400::-;;;1984:2;1972:9;1963:7;1959:23;1955:32;1952:2;;;2005:6;1997;1990:22;1952:2;2049:9;2036:23;2068:33;2095:5;2068:33;:::i;:::-;2120:5;-1:-1:-1;2177:2:22;2162:18;;2149:32;2190:34;2149:32;2190:34;:::i;:::-;2243:7;2233:17;;;1942:314;;;;;:::o;2261:1630::-;;2412:2;2400:9;2391:7;2387:23;2383:32;2380:2;;;2433:6;2425;2418:22;2380:2;2471:9;2465:16;-1:-1:-1;;;;;2541:2:22;2533:6;2530:14;2527:2;;;2562:6;2554;2547:22;2527:2;2605:6;2594:9;2590:22;2580:32;;2631:6;2671:2;2666;2657:7;2653:16;2649:25;2646:2;;;2692:6;2684;2677:22;2646:2;2723:18;2738:2;2723:18;:::i;:::-;2710:31;;2764:34;2795:2;2764:34;:::i;:::-;2757:5;2750:49;2831:43;2870:2;2866;2862:11;2831:43;:::i;:::-;2826:2;2819:5;2815:14;2808:67;2914:2;2910;2906:11;2900:18;2943:2;2933:8;2930:16;2927:2;;;2964:6;2956;2949:22;2927:2;3005:73;3070:7;3059:8;3055:2;3051:17;3005:73;:::i;:::-;3000:2;2993:5;2989:14;2982:97;;3111:43;3150:2;3146;3142:11;3111:43;:::i;:::-;3106:2;3099:5;3095:14;3088:67;3188:44;3227:3;3223:2;3219:12;3188:44;:::i;:::-;3182:3;3175:5;3171:15;3164:69;3266:44;3305:3;3301:2;3297:12;3266:44;:::i;:::-;3260:3;3253:5;3249:15;3242:69;3344:44;3383:3;3379:2;3375:12;3344:44;:::i;:::-;3338:3;3331:5;3327:15;3320:69;3422:44;3461:3;3457:2;3453:12;3422:44;:::i;:::-;3416:3;3409:5;3405:15;3398:69;3486:3;3476:13;;3521:44;3561:2;3557;3553:11;3521:44;:::i;:::-;3516:2;3509:5;3505:14;3498:68;3585:3;3575:13;;3620:44;3660:2;3656;3652:11;3620:44;:::i;:::-;3615:2;3608:5;3604:14;3597:68;3684:3;3674:13;;3719:43;3758:2;3754;3750:11;3719:43;:::i;:::-;3714:2;3707:5;3703:14;3696:67;3782:3;3772:13;;3817:43;3856:2;3852;3848:11;3817:43;:::i;:::-;3801:14;;;3794:67;;;;3805:5;2370:1521;-1:-1:-1;;;;2370:1521:22:o;3896:257::-;;4007:2;3995:9;3986:7;3982:23;3978:32;3975:2;;;4028:6;4020;4013:22;3975:2;4072:9;4059:23;4091:32;4117:5;4091:32;:::i;:::-;4142:5;3965:188;-1:-1:-1;;;3965:188:22:o;4158:477::-;;;4295:2;4283:9;4274:7;4270:23;4266:32;4263:2;;;4316:6;4308;4301:22;4263:2;4360:9;4347:23;4379:32;4405:5;4379:32;:::i;:::-;4430:5;-1:-1:-1;4486:2:22;4471:18;;4458:32;-1:-1:-1;;;;;4502:30:22;;4499:2;;;4550:6;4542;4535:22;4499:2;4578:51;4621:7;4612:6;4601:9;4597:22;4578:51;:::i;:::-;4568:61;;;4253:382;;;;;:::o;4640:618::-;;;;4793:2;4781:9;4772:7;4768:23;4764:32;4761:2;;;4814:6;4806;4799:22;4761:2;4858:9;4845:23;4877:32;4903:5;4877:32;:::i;:::-;4928:5;-1:-1:-1;4985:2:22;4970:18;;4957:32;4998:34;4957:32;4998:34;:::i;:::-;5051:7;-1:-1:-1;5109:2:22;5094:18;;5081:32;-1:-1:-1;;;;;5125:30:22;;5122:2;;;5173:6;5165;5158:22;5122:2;5201:51;5244:7;5235:6;5224:9;5220:22;5201:51;:::i;:::-;5191:61;;;4751:507;;;;;:::o;5263:477::-;;5344:5;5338:12;5371:6;5366:3;5359:19;5396:3;5408:162;5422:6;5419:1;5416:13;5408:162;;;5484:4;5540:13;;;5536:22;;5530:29;5512:11;;;5508:20;;5501:59;5437:12;5408:162;;;5588:6;5585:1;5582:13;5579:2;;;5654:3;5647:4;5638:6;5633:3;5629:16;5625:27;5618:40;5579:2;-1:-1:-1;5722:2:22;5701:15;-1:-1:-1;;5697:29:22;5688:39;;;;5729:4;5684:50;;5314:426;-1:-1:-1;;5314:426:22:o;5745:187::-;5910:14;;5903:22;5885:41;;5873:2;5858:18;;5840:92::o;5937:177::-;6083:25;;;6071:2;6056:18;;6038:76::o;6119:219::-;;6266:2;6255:9;6248:21;6286:46;6328:2;6317:9;6313:18;6305:6;6286:46;:::i;6343:225::-;-1:-1:-1;;;;;6529:32:22;;;;6511:51;;6499:2;6484:18;;6466:102::o;6573:404::-;6775:2;6757:21;;;6814:2;6794:18;;;6787:30;6853:34;6848:2;6833:18;;6826:62;-1:-1:-1;;;6919:2:22;6904:18;;6897:38;6967:3;6952:19;;6747:230::o;6982:406::-;7184:2;7166:21;;;7223:2;7203:18;;;7196:30;7262:34;7257:2;7242:18;;7235:62;-1:-1:-1;;;7328:2:22;7313:18;;7306:40;7378:3;7363:19;;7156:232::o;7393:411::-;7595:2;7577:21;;;7634:2;7614:18;;;7607:30;7673:34;7668:2;7653:18;;7646:62;-1:-1:-1;;;7739:2:22;7724:18;;7717:45;7794:3;7779:19;;7567:237::o;7809:410::-;8011:2;7993:21;;;8050:2;8030:18;;;8023:30;8089:34;8084:2;8069:18;;8062:62;-1:-1:-1;;;8155:2:22;8140:18;;8133:44;8209:3;8194:19;;7983:236::o;8406:200::-;-1:-1:-1;;;;;8568:31:22;;;;8550:50;;8538:2;8523:18;;8505:101::o;8611:412::-;;-1:-1:-1;;;;;8859:2:22;8851:6;8847:15;8836:9;8829:34;8899:2;8894;8883:9;8879:18;8872:30;8919:46;8961:2;8950:9;8946:18;8938:6;8919:46;:::i;:::-;8911:54;;9013:2;9005:6;9001:15;8996:2;8985:9;8981:18;8974:43;;8782:241;;;;;;:::o;9028:242::-;9098:2;9092:9;9128:17;;;-1:-1:-1;;;;;9160:34:22;;9196:22;;;9157:62;9154:2;;;9222:9;9154:2;9249;9242:22;9072:198;;-1:-1:-1;9072:198:22:o;9275:133::-;-1:-1:-1;;;;;9352:31:22;;9342:42;;9332:2;;9398:1;9395;9388:12;9332:2;9322:86;:::o;9413:131::-;-1:-1:-1;;;;;9493:5:22;9489:30;9482:5;9479:41;9469:2;;9534:1;9531;9524:12",
  "language": "Solidity",
  "natspec": {
    "events": {
      "Voted(address,uint64,bytes,uint64)": {
        "params": {
          "key": "The eon public key for which the keyper voted.",
          "keyper": "The address of the keyper who sent the vote.",
          "numVotes": "The number of keypers (including this one) who have voted for the key so     far.",
          "startBatchIndex": "The index of the first batch for which the key should be used."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "vote(uint64,uint64,bytes)": {
        "notice": "Submit a vote.Can only be called by keypers defined in the config responsible for     `startBatchIndex`, and only once per `startBatchIndex`.",
        "params": {
          "key": "The eon public key to vote for.",
          "keyperIndex": "The index of the calling keyper in the batch config.",
          "startBatchIndex": "The index of the first batch for which the key should be used."
        }
      }
    },
    "title": "A contract that keypers can use to vote on eon public keys. For each eon public key     generated, the keypers are expected to submit one vote. The contract logs the number of     votes so that users can only pick keys once they have reached votes from enough keypers     and thus have confidence that the key is actually correct.",
    "version": 1
  },
  "offset": [521, 4553],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x41ECDA09 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x41ECDA09 EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x6B32C795 EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xAB0A3FFE EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0xCF1D7A0A EQ PUSH2 0x128 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0xE1C3A4A EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x1845BF5C EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x2553600E EQ PUSH2 0xC0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x148 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x9EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH2 0xAE CALLDATASIZE PUSH1 0x4 PUSH2 0x8CC JUMP JUMPDEST PUSH2 0x157 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0xB2D JUMP JUMPDEST PUSH2 0xD3 PUSH2 0xCE CALLDATASIZE PUSH1 0x4 PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0x187 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x9D7 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0xEE CALLDATASIZE PUSH1 0x4 PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0x23D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x9CE JUMP JUMPDEST PUSH2 0x113 PUSH2 0x10E CALLDATASIZE PUSH1 0x4 PUSH2 0x919 JUMP JUMPDEST PUSH2 0x25B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF3 PUSH2 0x123 CALLDATASIZE PUSH1 0x4 PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0x535 JUMP JUMPDEST PUSH2 0x13B PUSH2 0x136 CALLDATASIZE PUSH1 0x4 PUSH2 0x73A JUMP JUMPDEST PUSH2 0x550 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x9C3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 MLOAD SWAP5 DUP4 ADD SWAP5 SWAP1 SWAP5 KECCAK256 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP4 MSTORE PUSH1 0x3 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP7 AND ISZERO MUL ADD SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 DIV SWAP2 DUP3 ADD DUP5 SWAP1 DIV DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x230 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x205 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x230 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x213 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x700465B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xE008CB62 SWAP1 PUSH2 0x28C SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2E0 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x772 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x80 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT PUSH2 0x318 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30F SWAP1 PUSH2 0x9FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x40 ADD MLOAD MLOAD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND LT PUSH2 0x345 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30F SWAP1 PUSH2 0xA90 JUMP JUMPDEST DUP1 PUSH1 0x40 ADD MLOAD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MLOAD DUP2 LT PUSH2 0x35E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x396 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30F SWAP1 PUSH2 0xA46 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30F SWAP1 PUSH2 0xADF JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP5 AND ISZERO MUL ADD SWAP1 SWAP2 AND DIV ISZERO DUP1 ISZERO PUSH2 0x414 JUMPI POP DUP3 MLOAD ISZERO JUMPDEST ISZERO PUSH2 0x43A JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP5 MLOAD PUSH2 0x438 SWAP3 DUP7 ADD SWAP1 PUSH2 0x583 JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP6 DUP6 MSTORE PUSH1 0x1 DUP1 DUP6 MSTORE DUP4 DUP7 KECCAK256 CALLER DUP8 MSTORE DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 OR SWAP1 SSTORE DUP3 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND SWAP2 DUP9 AND ADD DUP1 DUP9 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP5 DUP5 MSTORE PUSH1 0x5 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP3 AND LT ISZERO PUSH2 0x4E8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND SWAP5 DUP7 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0x4 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x305124B6EC831BB4150EB1DDBD4E8CC4B95687B9A6258B110FD0E9865914B0BF DUP7 DUP7 DUP5 PUSH1 0x40 MLOAD PUSH2 0x525 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x5B9 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x5FF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x5D2 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x5FF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x5FF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x5FF JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x5E4 JUMP JUMPDEST POP PUSH2 0x60B SWAP3 SWAP2 POP PUSH2 0x60F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x60B JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x610 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x238 DUP2 PUSH2 0xB9A JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x63F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x654 JUMPI INVALID JUMPDEST DUP1 DUP3 MUL PUSH2 0x662 DUP3 DUP3 ADD PUSH2 0xB77 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP1 DUP7 DUP5 ADD DUP4 DUP9 ADD DUP6 ADD DUP10 LT ISZERO PUSH2 0x67C JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP4 POP JUMPDEST DUP6 DUP5 LT ISZERO PUSH2 0x6A7 JUMPI DUP1 MLOAD PUSH2 0x693 DUP2 PUSH2 0xB9A JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP4 SWAP1 SWAP4 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 DUP5 ADD PUSH2 0x680 JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6DB JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x6EE JUMPI INVALID JUMPDEST PUSH2 0x701 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0xB77 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x715 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0x238 DUP2 PUSH2 0xBB2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x74C JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x757 DUP2 PUSH2 0xB9A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x767 DUP2 PUSH2 0xBB2 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x783 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x799 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP PUSH2 0x180 DUP1 DUP4 DUP8 SUB SLT ISZERO PUSH2 0x7AF JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x7B8 DUP2 PUSH2 0xB77 JUMP JUMPDEST SWAP1 POP PUSH2 0x7C3 DUP4 PUSH2 0x72F JUMP JUMPDEST DUP2 MSTORE PUSH2 0x7D1 PUSH1 0x20 DUP5 ADD PUSH2 0x72F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH2 0x7E7 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x7F3 DUP8 DUP3 DUP7 ADD PUSH2 0x62F JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH2 0x805 PUSH1 0x60 DUP5 ADD PUSH2 0x72F JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x816 PUSH1 0x80 DUP5 ADD PUSH2 0x72F JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x827 PUSH1 0xA0 DUP5 ADD PUSH2 0x72F JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x838 PUSH1 0xC0 DUP5 ADD PUSH2 0x72F JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x849 PUSH1 0xE0 DUP5 ADD PUSH2 0x72F JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 SWAP2 POP PUSH2 0x85E DUP3 DUP5 ADD PUSH2 0x624 JUMP JUMPDEST DUP3 DUP3 ADD MSTORE PUSH2 0x120 SWAP2 POP PUSH2 0x872 DUP3 DUP5 ADD PUSH2 0x624 JUMP JUMPDEST DUP3 DUP3 ADD MSTORE PUSH2 0x140 SWAP2 POP PUSH2 0x886 DUP3 DUP5 ADD PUSH2 0x6B3 JUMP JUMPDEST DUP3 DUP3 ADD MSTORE PUSH2 0x160 SWAP2 POP PUSH2 0x89A DUP3 DUP5 ADD PUSH2 0x72F JUMP JUMPDEST SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8BA JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x8C5 DUP2 PUSH2 0xBB2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8DE JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x8E9 DUP2 PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x903 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x90F DUP6 DUP3 DUP7 ADD PUSH2 0x6CB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x92D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x938 DUP2 PUSH2 0xBB2 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x948 DUP2 PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x962 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x96E DUP7 DUP3 DUP8 ADD PUSH2 0x6CB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x99D JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x981 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x9AE JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x8C5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x978 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x4B657942726F616463617374436F6E74726163743A20636F6E66696720697320 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x696E616374697665 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x4B657942726F616463617374436F6E74726163743A2073656E64657220697320 PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x3737BA1035B2BCB832B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2F SWAP1 DUP3 ADD MSTORE PUSH32 0x4B657942726F616463617374436F6E74726163743A206B657970657220696E64 PUSH1 0x40 DUP3 ADD MSTORE PUSH15 0x6578206F7574206F662072616E6765 PUSH1 0x88 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x4B657942726F616463617374436F6E74726163743A206B657970657220686173 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x8185B1C9958591E481D9BDD1959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP7 AND DUP4 MSTORE PUSH1 0x60 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xB64 PUSH1 0x60 DUP5 ADD DUP7 PUSH2 0x978 JUMP JUMPDEST SWAP2 POP DUP1 DUP5 AND PUSH1 0x40 DUP5 ADD MSTORE POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xB92 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0xF96524495771D568C7CF360035B7C2 DUP1 PUSH3 0x7CEED2 BYTE 0xD8 ADD SWAP9 RETURNDATACOPY 0xC8 0xB7 MUL PUSH32 0xD9F864736F6C6343000706003300000000000000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [521, 4553],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [521, 4553],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [521, 4553],
      "op": "MSTORE",
      "path": "5"
    },
    "5": {
      "fn": null,
      "offset": [521, 4553],
      "op": "CALLVALUE",
      "path": "5"
    },
    "6": {
      "fn": null,
      "offset": [521, 4553],
      "op": "DUP1",
      "path": "5"
    },
    "7": {
      "fn": null,
      "offset": [521, 4553],
      "op": "ISZERO",
      "path": "5"
    },
    "8": {
      "fn": null,
      "offset": [521, 4553],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [521, 4553],
      "op": "JUMPI",
      "path": "5"
    },
    "12": {
      "fn": null,
      "offset": [521, 4553],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [521, 4553],
      "op": "DUP1",
      "path": "5"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [521, 4553],
      "op": "REVERT",
      "path": "5"
    },
    "16": {
      "fn": null,
      "offset": [521, 4553],
      "op": "JUMPDEST",
      "path": "5"
    },
    "17": {
      "fn": null,
      "offset": [521, 4553],
      "op": "POP",
      "path": "5"
    },
    "18": {
      "fn": null,
      "offset": [521, 4553],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [521, 4553],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "21": {
      "fn": null,
      "offset": [521, 4553],
      "op": "LT",
      "path": "5"
    },
    "22": {
      "fn": null,
      "offset": [521, 4553],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7D"
    },
    "25": {
      "fn": null,
      "offset": [521, 4553],
      "op": "JUMPI",
      "path": "5"
    },
    "26": {
      "fn": null,
      "offset": [521, 4553],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [521, 4553],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "29": {
      "fn": null,
      "offset": [521, 4553],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [521, 4553],
      "op": "SHR",
      "path": "5"
    },
    "32": {
      "fn": null,
      "offset": [521, 4553],
      "op": "DUP1",
      "path": "5"
    },
    "33": {
      "fn": null,
      "offset": [521, 4553],
      "op": "PUSH4",
      "path": "5",
      "value": "0x41ECDA09"
    },
    "38": {
      "fn": null,
      "offset": [521, 4553],
      "op": "GT",
      "path": "5"
    },
    "39": {
      "fn": null,
      "offset": [521, 4553],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5B"
    },
    "42": {
      "fn": null,
      "offset": [521, 4553],
      "op": "JUMPI",
      "path": "5"
    },
    "43": {
      "fn": null,
      "offset": [521, 4553],
      "op": "DUP1",
      "path": "5"
    },
    "44": {
      "fn": null,
      "offset": [521, 4553],
      "op": "PUSH4",
      "path": "5",
      "value": "0x41ECDA09"
    },
    "49": {
      "fn": null,
      "offset": [521, 4553],
      "op": "EQ",
      "path": "5"
    },
    "50": {
      "fn": null,
      "offset": [521, 4553],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE0"
    },
    "53": {
      "fn": null,
      "offset": [521, 4553],
      "op": "JUMPI",
      "path": "5"
    },
    "54": {
      "fn": null,
      "offset": [521, 4553],
      "op": "DUP1",
      "path": "5"
    },
    "55": {
      "fn": null,
      "offset": [521, 4553],
      "op": "PUSH4",
      "path": "5",
      "value": "0x6B32C795"
    },
    "60": {
      "fn": null,
      "offset": [521, 4553],
      "op": "EQ",
      "path": "5"
    },
    "61": {
      "fn": null,
      "offset": [521, 4553],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "64": {
      "fn": null,
      "offset": [521, 4553],
      "op": "JUMPI",
      "path": "5"
    },
    "65": {
      "fn": null,
      "offset": [521, 4553],
      "op": "DUP1",
      "path": "5"
    },
    "66": {
      "fn": null,
      "offset": [521, 4553],
      "op": "PUSH4",
      "path": "5",
      "value": "0xAB0A3FFE"
    },
    "71": {
      "fn": null,
      "offset": [521, 4553],
      "op": "EQ",
      "path": "5"
    },
    "72": {
      "fn": null,
      "offset": [521, 4553],
      "op": "PUSH2",
      "path": "5",
      "value": "0x115"
    },
    "75": {
      "fn": null,
      "offset": [521, 4553],
      "op": "JUMPI",
      "path": "5"
    },
    "76": {
      "fn": null,
      "offset": [521, 4553],
      "op": "DUP1",
      "path": "5"
    },
    "77": {
      "fn": null,
      "offset": [521, 4553],
      "op": "PUSH4",
      "path": "5",
      "value": "0xCF1D7A0A"
    },
    "82": {
      "fn": null,
      "offset": [521, 4553],
      "op": "EQ",
      "path": "5"
    },
    "83": {
      "fn": null,
      "offset": [521, 4553],
      "op": "PUSH2",
      "path": "5",
      "value": "0x128"
    },
    "86": {
      "fn": null,
      "offset": [521, 4553],
      "op": "JUMPI",
      "path": "5"
    },
    "87": {
      "fn": null,
      "offset": [521, 4553],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7D"
    },
    "90": {
      "fn": null,
      "offset": [521, 4553],
      "op": "JUMP",
      "path": "5"
    },
    "91": {
      "fn": null,
      "offset": [521, 4553],
      "op": "JUMPDEST",
      "path": "5"
    },
    "92": {
      "fn": null,
      "offset": [521, 4553],
      "op": "DUP1",
      "path": "5"
    },
    "93": {
      "fn": null,
      "offset": [521, 4553],
      "op": "PUSH4",
      "path": "5",
      "value": "0xE1C3A4A"
    },
    "98": {
      "fn": null,
      "offset": [521, 4553],
      "op": "EQ",
      "path": "5"
    },
    "99": {
      "fn": null,
      "offset": [521, 4553],
      "op": "PUSH2",
      "path": "5",
      "value": "0x82"
    },
    "102": {
      "fn": null,
      "offset": [521, 4553],
      "op": "JUMPI",
      "path": "5"
    },
    "103": {
      "fn": null,
      "offset": [521, 4553],
      "op": "DUP1",
      "path": "5"
    },
    "104": {
      "fn": null,
      "offset": [521, 4553],
      "op": "PUSH4",
      "path": "5",
      "value": "0x1845BF5C"
    },
    "109": {
      "fn": null,
      "offset": [521, 4553],
      "op": "EQ",
      "path": "5"
    },
    "110": {
      "fn": null,
      "offset": [521, 4553],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA0"
    },
    "113": {
      "fn": null,
      "offset": [521, 4553],
      "op": "JUMPI",
      "path": "5"
    },
    "114": {
      "fn": null,
      "offset": [521, 4553],
      "op": "DUP1",
      "path": "5"
    },
    "115": {
      "fn": null,
      "offset": [521, 4553],
      "op": "PUSH4",
      "path": "5",
      "value": "0x2553600E"
    },
    "120": {
      "fn": null,
      "offset": [521, 4553],
      "op": "EQ",
      "path": "5"
    },
    "121": {
      "fn": null,
      "offset": [521, 4553],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC0"
    },
    "124": {
      "fn": null,
      "offset": [521, 4553],
      "op": "JUMPI",
      "path": "5"
    },
    "125": {
      "fn": null,
      "offset": [521, 4553],
      "op": "JUMPDEST",
      "path": "5"
    },
    "126": {
      "fn": null,
      "offset": [521, 4553],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "128": {
      "fn": null,
      "offset": [521, 4553],
      "op": "DUP1",
      "path": "5"
    },
    "129": {
      "first_revert": true,
      "fn": null,
      "offset": [521, 4553],
      "op": "REVERT",
      "path": "5"
    },
    "130": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3565, 3670],
      "op": "JUMPDEST",
      "path": "5"
    },
    "131": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3565, 3670],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8A"
    },
    "134": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3565, 3670],
      "op": "PUSH2",
      "path": "5",
      "value": "0x148"
    },
    "137": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "jump": "i",
      "offset": [3565, 3670],
      "op": "JUMP",
      "path": "5"
    },
    "138": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3565, 3670],
      "op": "JUMPDEST",
      "path": "5"
    },
    "139": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3565, 3670],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "141": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3565, 3670],
      "op": "MLOAD",
      "path": "5"
    },
    "142": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3565, 3670],
      "op": "PUSH2",
      "path": "5",
      "value": "0x97"
    },
    "145": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3565, 3670],
      "op": "SWAP2",
      "path": "5"
    },
    "146": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3565, 3670],
      "op": "SWAP1",
      "path": "5"
    },
    "147": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3565, 3670],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9EA"
    },
    "150": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "jump": "i",
      "offset": [3565, 3670],
      "op": "JUMP",
      "path": "5"
    },
    "151": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3565, 3670],
      "op": "JUMPDEST",
      "path": "5"
    },
    "152": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3565, 3670],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "154": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3565, 3670],
      "op": "MLOAD",
      "path": "5"
    },
    "155": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3565, 3670],
      "op": "DUP1",
      "path": "5"
    },
    "156": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3565, 3670],
      "op": "SWAP2",
      "path": "5"
    },
    "157": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3565, 3670],
      "op": "SUB",
      "path": "5"
    },
    "158": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3565, 3670],
      "op": "SWAP1",
      "path": "5"
    },
    "159": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3565, 3670],
      "op": "RETURN",
      "path": "5"
    },
    "160": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3850, 4036],
      "op": "JUMPDEST",
      "path": "5"
    },
    "161": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3850, 4036],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB3"
    },
    "164": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3850, 4036],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAE"
    },
    "167": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3850, 4036],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "168": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3850, 4036],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "170": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3850, 4036],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8CC"
    },
    "173": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "jump": "i",
      "offset": [3850, 4036],
      "op": "JUMP",
      "path": "5"
    },
    "174": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3850, 4036],
      "op": "JUMPDEST",
      "path": "5"
    },
    "175": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3850, 4036],
      "op": "PUSH2",
      "path": "5",
      "value": "0x157"
    },
    "178": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "jump": "i",
      "offset": [3850, 4036],
      "op": "JUMP",
      "path": "5"
    },
    "179": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3850, 4036],
      "op": "JUMPDEST",
      "path": "5"
    },
    "180": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3850, 4036],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "182": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3850, 4036],
      "op": "MLOAD",
      "path": "5"
    },
    "183": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3850, 4036],
      "op": "PUSH2",
      "path": "5",
      "value": "0x97"
    },
    "186": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3850, 4036],
      "op": "SWAP2",
      "path": "5"
    },
    "187": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3850, 4036],
      "op": "SWAP1",
      "path": "5"
    },
    "188": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3850, 4036],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB2D"
    },
    "191": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "jump": "i",
      "offset": [3850, 4036],
      "op": "JUMP",
      "path": "5"
    },
    "192": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4209, 4378],
      "op": "JUMPDEST",
      "path": "5"
    },
    "193": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4209, 4378],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD3"
    },
    "196": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4209, 4378],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCE"
    },
    "199": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4209, 4378],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "200": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4209, 4378],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "202": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4209, 4378],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8A9"
    },
    "205": {
      "fn": "KeyBroadcastContract.getBestKey",
      "jump": "i",
      "offset": [4209, 4378],
      "op": "JUMP",
      "path": "5"
    },
    "206": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4209, 4378],
      "op": "JUMPDEST",
      "path": "5"
    },
    "207": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4209, 4378],
      "op": "PUSH2",
      "path": "5",
      "value": "0x187"
    },
    "210": {
      "fn": "KeyBroadcastContract.getBestKey",
      "jump": "i",
      "offset": [4209, 4378],
      "op": "JUMP",
      "path": "5"
    },
    "211": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4209, 4378],
      "op": "JUMPDEST",
      "path": "5"
    },
    "212": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4209, 4378],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "214": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4209, 4378],
      "op": "MLOAD",
      "path": "5"
    },
    "215": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4209, 4378],
      "op": "PUSH2",
      "path": "5",
      "value": "0x97"
    },
    "218": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4209, 4378],
      "op": "SWAP2",
      "path": "5"
    },
    "219": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4209, 4378],
      "op": "SWAP1",
      "path": "5"
    },
    "220": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4209, 4378],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9D7"
    },
    "223": {
      "fn": "KeyBroadcastContract.getBestKey",
      "jump": "i",
      "offset": [4209, 4378],
      "op": "JUMP",
      "path": "5"
    },
    "224": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4384, 4551],
      "op": "JUMPDEST",
      "path": "5"
    },
    "225": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4384, 4551],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF3"
    },
    "228": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4384, 4551],
      "op": "PUSH2",
      "path": "5",
      "value": "0xEE"
    },
    "231": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4384, 4551],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "232": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4384, 4551],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "234": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4384, 4551],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8A9"
    },
    "237": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "jump": "i",
      "offset": [4384, 4551],
      "op": "JUMP",
      "path": "5"
    },
    "238": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4384, 4551],
      "op": "JUMPDEST",
      "path": "5"
    },
    "239": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4384, 4551],
      "op": "PUSH2",
      "path": "5",
      "value": "0x23D"
    },
    "242": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "jump": "i",
      "offset": [4384, 4551],
      "op": "JUMP",
      "path": "5"
    },
    "243": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4384, 4551],
      "op": "JUMPDEST",
      "path": "5"
    },
    "244": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4384, 4551],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "246": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4384, 4551],
      "op": "MLOAD",
      "path": "5"
    },
    "247": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4384, 4551],
      "op": "PUSH2",
      "path": "5",
      "value": "0x97"
    },
    "250": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4384, 4551],
      "op": "SWAP2",
      "path": "5"
    },
    "251": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4384, 4551],
      "op": "SWAP1",
      "path": "5"
    },
    "252": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4384, 4551],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9CE"
    },
    "255": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "jump": "i",
      "offset": [4384, 4551],
      "op": "JUMP",
      "path": "5"
    },
    "256": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2081, 3559],
      "op": "JUMPDEST",
      "path": "5"
    },
    "257": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2081, 3559],
      "op": "PUSH2",
      "path": "5",
      "value": "0x113"
    },
    "260": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2081, 3559],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10E"
    },
    "263": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2081, 3559],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "264": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2081, 3559],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "266": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2081, 3559],
      "op": "PUSH2",
      "path": "5",
      "value": "0x919"
    },
    "269": {
      "fn": "KeyBroadcastContract.vote",
      "jump": "i",
      "offset": [2081, 3559],
      "op": "JUMP",
      "path": "5"
    },
    "270": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2081, 3559],
      "op": "JUMPDEST",
      "path": "5"
    },
    "271": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2081, 3559],
      "op": "PUSH2",
      "path": "5",
      "value": "0x25B"
    },
    "274": {
      "fn": "KeyBroadcastContract.vote",
      "jump": "i",
      "offset": [2081, 3559],
      "op": "JUMP",
      "path": "5"
    },
    "275": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2081, 3559],
      "op": "JUMPDEST",
      "path": "5"
    },
    "276": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2081, 3559],
      "op": "STOP",
      "path": "5"
    },
    "277": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4042, 4203],
      "op": "JUMPDEST",
      "path": "5"
    },
    "278": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4042, 4203],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF3"
    },
    "281": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4042, 4203],
      "op": "PUSH2",
      "path": "5",
      "value": "0x123"
    },
    "284": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4042, 4203],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "285": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4042, 4203],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "287": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4042, 4203],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8A9"
    },
    "290": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "jump": "i",
      "offset": [4042, 4203],
      "op": "JUMP",
      "path": "5"
    },
    "291": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4042, 4203],
      "op": "JUMPDEST",
      "path": "5"
    },
    "292": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4042, 4203],
      "op": "PUSH2",
      "path": "5",
      "value": "0x535"
    },
    "295": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "jump": "i",
      "offset": [4042, 4203],
      "op": "JUMP",
      "path": "5"
    },
    "296": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3676, 3844],
      "op": "JUMPDEST",
      "path": "5"
    },
    "297": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3676, 3844],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13B"
    },
    "300": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3676, 3844],
      "op": "PUSH2",
      "path": "5",
      "value": "0x136"
    },
    "303": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3676, 3844],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "304": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3676, 3844],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "306": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3676, 3844],
      "op": "PUSH2",
      "path": "5",
      "value": "0x73A"
    },
    "309": {
      "fn": "KeyBroadcastContract.hasVoted",
      "jump": "i",
      "offset": [3676, 3844],
      "op": "JUMP",
      "path": "5"
    },
    "310": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3676, 3844],
      "op": "JUMPDEST",
      "path": "5"
    },
    "311": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3676, 3844],
      "op": "PUSH2",
      "path": "5",
      "value": "0x550"
    },
    "314": {
      "fn": "KeyBroadcastContract.hasVoted",
      "jump": "i",
      "offset": [3676, 3844],
      "op": "JUMP",
      "path": "5"
    },
    "315": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3676, 3844],
      "op": "JUMPDEST",
      "path": "5"
    },
    "316": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3676, 3844],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "318": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3676, 3844],
      "op": "MLOAD",
      "path": "5"
    },
    "319": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3676, 3844],
      "op": "PUSH2",
      "path": "5",
      "value": "0x97"
    },
    "322": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3676, 3844],
      "op": "SWAP2",
      "path": "5"
    },
    "323": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3676, 3844],
      "op": "SWAP1",
      "path": "5"
    },
    "324": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3676, 3844],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9C3"
    },
    "327": {
      "fn": "KeyBroadcastContract.hasVoted",
      "jump": "i",
      "offset": [3676, 3844],
      "op": "JUMP",
      "path": "5"
    },
    "328": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3565, 3670],
      "op": "JUMPDEST",
      "path": "5"
    },
    "329": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3615, 3629],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "331": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3648, 3663],
      "op": "SLOAD",
      "path": "5",
      "statement": 0
    },
    "332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "336": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "338": {
      "op": "SHL"
    },
    "339": {
      "op": "SUB"
    },
    "340": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3648, 3663],
      "op": "AND",
      "path": "5"
    },
    "341": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3565, 3670],
      "op": "SWAP1",
      "path": "5"
    },
    "342": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "jump": "o",
      "offset": [3565, 3670],
      "op": "JUMP",
      "path": "5"
    },
    "343": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3850, 4036],
      "op": "JUMPDEST",
      "path": "5"
    },
    "344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "348": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "350": {
      "op": "SHL"
    },
    "351": {
      "op": "SUB"
    },
    "352": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4013],
      "op": "SWAP2",
      "path": "5",
      "statement": 1
    },
    "353": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4013],
      "op": "DUP3",
      "path": "5"
    },
    "354": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4013],
      "op": "AND",
      "path": "5"
    },
    "355": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3958, 3964],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "357": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4013],
      "op": "SWAP1",
      "path": "5"
    },
    "358": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4013],
      "op": "DUP2",
      "path": "5"
    },
    "359": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4013],
      "op": "MSTORE",
      "path": "5"
    },
    "360": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 3996],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "362": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4013],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "364": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4013],
      "op": "SWAP1",
      "path": "5"
    },
    "365": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4013],
      "op": "DUP2",
      "path": "5"
    },
    "366": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4013],
      "op": "MSTORE",
      "path": "5"
    },
    "367": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4013],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "369": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4013],
      "op": "DUP1",
      "path": "5"
    },
    "370": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4013],
      "op": "DUP4",
      "path": "5"
    },
    "371": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4013],
      "op": "KECCAK256",
      "path": "5"
    },
    "372": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [4014, 4028],
      "op": "DUP5",
      "path": "5"
    },
    "373": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [4014, 4028],
      "op": "MLOAD",
      "path": "5"
    },
    "374": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [4014, 4028],
      "op": "SWAP5",
      "path": "5"
    },
    "375": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [4014, 4028],
      "op": "DUP4",
      "path": "5"
    },
    "376": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [4014, 4028],
      "op": "ADD",
      "path": "5"
    },
    "377": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [4014, 4028],
      "op": "SWAP5",
      "path": "5"
    },
    "378": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [4014, 4028],
      "op": "SWAP1",
      "path": "5"
    },
    "379": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [4014, 4028],
      "op": "SWAP5",
      "path": "5"
    },
    "380": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [4014, 4028],
      "op": "KECCAK256",
      "path": "5"
    },
    "381": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4029],
      "op": "DUP4",
      "path": "5"
    },
    "382": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4029],
      "op": "MSTORE",
      "path": "5"
    },
    "383": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4029],
      "op": "SWAP3",
      "path": "5"
    },
    "384": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4029],
      "op": "SWAP1",
      "path": "5"
    },
    "385": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4029],
      "op": "MSTORE",
      "path": "5"
    },
    "386": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4029],
      "op": "KECCAK256",
      "path": "5"
    },
    "387": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4029],
      "op": "SLOAD",
      "path": "5"
    },
    "388": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4029],
      "op": "AND",
      "path": "5"
    },
    "389": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4029],
      "op": "SWAP1",
      "path": "5"
    },
    "390": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "jump": "o",
      "offset": [3850, 4036],
      "op": "JUMP",
      "path": "5"
    },
    "391": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4209, 4378],
      "op": "JUMPDEST",
      "path": "5"
    },
    "392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "396": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "398": {
      "op": "SHL"
    },
    "399": {
      "op": "SUB"
    },
    "400": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4339, 4370],
      "op": "DUP2",
      "path": "5",
      "statement": 2
    },
    "401": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4339, 4370],
      "op": "AND",
      "path": "5"
    },
    "402": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4333, 4371],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "404": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4339, 4370],
      "op": "SWAP1",
      "path": "5"
    },
    "405": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4339, 4370],
      "op": "DUP2",
      "path": "5"
    },
    "406": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4339, 4370],
      "op": "MSTORE",
      "path": "5"
    },
    "407": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4339, 4353],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "409": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4339, 4370],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "411": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4339, 4370],
      "op": "SWAP1",
      "path": "5"
    },
    "412": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4339, 4370],
      "op": "DUP2",
      "path": "5"
    },
    "413": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4339, 4370],
      "op": "MSTORE",
      "path": "5"
    },
    "414": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4339, 4370],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "416": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4339, 4370],
      "op": "DUP1",
      "path": "5"
    },
    "417": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4339, 4370],
      "op": "DUP4",
      "path": "5"
    },
    "418": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4339, 4370],
      "op": "KECCAK256",
      "path": "5"
    },
    "419": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4339, 4370],
      "op": "SLOAD",
      "path": "5"
    },
    "420": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4333, 4371],
      "op": "DUP4",
      "path": "5"
    },
    "421": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4333, 4371],
      "op": "MSTORE",
      "path": "5"
    },
    "422": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4333, 4338],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "424": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4333, 4371],
      "op": "DUP3",
      "path": "5"
    },
    "425": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4333, 4371],
      "op": "MSTORE",
      "path": "5"
    },
    "426": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4333, 4371],
      "op": "SWAP2",
      "path": "5"
    },
    "427": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4333, 4371],
      "op": "DUP3",
      "path": "5"
    },
    "428": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4333, 4371],
      "op": "SWAP1",
      "path": "5"
    },
    "429": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4333, 4371],
      "op": "KECCAK256",
      "path": "5"
    },
    "430": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "DUP1",
      "path": "5"
    },
    "431": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "SLOAD",
      "path": "5"
    },
    "432": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "DUP4",
      "path": "5"
    },
    "433": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "MLOAD",
      "path": "5"
    },
    "434": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "436": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "438": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "440": {
      "op": "NOT"
    },
    "441": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "444": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "446": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "DUP7",
      "path": "5"
    },
    "447": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "AND",
      "path": "5"
    },
    "448": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "ISZERO",
      "path": "5"
    },
    "449": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "MUL",
      "path": "5"
    },
    "450": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "ADD",
      "path": "5"
    },
    "451": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "SWAP1",
      "path": "5"
    },
    "452": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "SWAP4",
      "path": "5"
    },
    "453": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "AND",
      "path": "5"
    },
    "454": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "SWAP3",
      "path": "5"
    },
    "455": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "SWAP1",
      "path": "5"
    },
    "456": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "SWAP3",
      "path": "5"
    },
    "457": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "DIV",
      "path": "5"
    },
    "458": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "SWAP2",
      "path": "5"
    },
    "459": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "DUP3",
      "path": "5"
    },
    "460": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "ADD",
      "path": "5"
    },
    "461": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "DUP5",
      "path": "5"
    },
    "462": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "SWAP1",
      "path": "5"
    },
    "463": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "DIV",
      "path": "5"
    },
    "464": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "DUP5",
      "path": "5"
    },
    "465": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "MUL",
      "path": "5"
    },
    "466": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "DUP2",
      "path": "5"
    },
    "467": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "ADD",
      "path": "5"
    },
    "468": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "DUP5",
      "path": "5"
    },
    "469": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "ADD",
      "path": "5"
    },
    "470": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "SWAP1",
      "path": "5"
    },
    "471": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "SWAP5",
      "path": "5"
    },
    "472": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "MSTORE",
      "path": "5"
    },
    "473": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "DUP1",
      "path": "5"
    },
    "474": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "DUP5",
      "path": "5"
    },
    "475": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "MSTORE",
      "path": "5"
    },
    "476": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4298, 4310],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "478": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4298, 4310],
      "op": "SWAP4",
      "path": "5"
    },
    "479": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "SWAP3",
      "path": "5"
    },
    "480": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "DUP4",
      "path": "5"
    },
    "481": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "ADD",
      "path": "5"
    },
    "482": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4333, 4371],
      "op": "DUP3",
      "path": "5"
    },
    "483": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "DUP3",
      "path": "5"
    },
    "484": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "DUP1",
      "path": "5"
    },
    "485": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "ISZERO",
      "path": "5"
    },
    "486": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "PUSH2",
      "path": "5",
      "value": "0x230"
    },
    "489": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "JUMPI",
      "path": "5"
    },
    "490": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "DUP1",
      "path": "5"
    },
    "491": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "493": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "LT",
      "path": "5"
    },
    "494": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "PUSH2",
      "path": "5",
      "value": "0x205"
    },
    "497": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "JUMPI",
      "path": "5"
    },
    "498": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "501": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "DUP1",
      "path": "5"
    },
    "502": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "DUP4",
      "path": "5"
    },
    "503": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "SLOAD",
      "path": "5"
    },
    "504": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "DIV",
      "path": "5"
    },
    "505": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "MUL",
      "path": "5"
    },
    "506": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "DUP4",
      "path": "5"
    },
    "507": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "MSTORE",
      "path": "5"
    },
    "508": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "SWAP2",
      "path": "5"
    },
    "509": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "511": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "ADD",
      "path": "5"
    },
    "512": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "SWAP2",
      "path": "5"
    },
    "513": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "PUSH2",
      "path": "5",
      "value": "0x230"
    },
    "516": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "JUMP",
      "path": "5"
    },
    "517": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "JUMPDEST",
      "path": "5"
    },
    "518": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "DUP3",
      "path": "5"
    },
    "519": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "ADD",
      "path": "5"
    },
    "520": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "SWAP2",
      "path": "5"
    },
    "521": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "SWAP1",
      "path": "5"
    },
    "522": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "524": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "MSTORE",
      "path": "5"
    },
    "525": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "527": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "529": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "KECCAK256",
      "path": "5"
    },
    "530": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "SWAP1",
      "path": "5"
    },
    "531": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "JUMPDEST",
      "path": "5"
    },
    "532": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "DUP2",
      "path": "5"
    },
    "533": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "SLOAD",
      "path": "5"
    },
    "534": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "DUP2",
      "path": "5"
    },
    "535": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "MSTORE",
      "path": "5"
    },
    "536": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "SWAP1",
      "path": "5"
    },
    "537": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "539": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "ADD",
      "path": "5"
    },
    "540": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "SWAP1",
      "path": "5"
    },
    "541": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "543": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "ADD",
      "path": "5"
    },
    "544": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "DUP1",
      "path": "5"
    },
    "545": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "DUP4",
      "path": "5"
    },
    "546": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "GT",
      "path": "5"
    },
    "547": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "PUSH2",
      "path": "5",
      "value": "0x213"
    },
    "550": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "JUMPI",
      "path": "5"
    },
    "551": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "DUP3",
      "path": "5"
    },
    "552": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "SWAP1",
      "path": "5"
    },
    "553": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "SUB",
      "path": "5"
    },
    "554": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "556": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "AND",
      "path": "5"
    },
    "557": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "DUP3",
      "path": "5"
    },
    "558": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "ADD",
      "path": "5"
    },
    "559": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "SWAP2",
      "path": "5"
    },
    "560": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "JUMPDEST",
      "path": "5"
    },
    "561": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "POP",
      "path": "5"
    },
    "562": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "POP",
      "path": "5"
    },
    "563": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "POP",
      "path": "5"
    },
    "564": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "POP",
      "path": "5"
    },
    "565": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "POP",
      "path": "5"
    },
    "566": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "SWAP1",
      "path": "5"
    },
    "567": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4326, 4371],
      "op": "POP",
      "path": "5"
    },
    "568": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4209, 4378],
      "op": "JUMPDEST",
      "path": "5"
    },
    "569": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4209, 4378],
      "op": "SWAP2",
      "path": "5"
    },
    "570": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4209, 4378],
      "op": "SWAP1",
      "path": "5"
    },
    "571": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4209, 4378],
      "op": "POP",
      "path": "5"
    },
    "572": {
      "fn": "KeyBroadcastContract.getBestKey",
      "jump": "o",
      "offset": [4209, 4378],
      "op": "JUMP",
      "path": "5"
    },
    "573": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4384, 4551],
      "op": "JUMPDEST",
      "path": "5"
    },
    "574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "578": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "580": {
      "op": "SHL"
    },
    "581": {
      "op": "SUB"
    },
    "582": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4511, 4544],
      "op": "SWAP1",
      "path": "5",
      "statement": 3
    },
    "583": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4511, 4544],
      "op": "DUP2",
      "path": "5"
    },
    "584": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4511, 4544],
      "op": "AND",
      "path": "5"
    },
    "585": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4481, 4488],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "587": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4511, 4544],
      "op": "SWAP1",
      "path": "5"
    },
    "588": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4511, 4544],
      "op": "DUP2",
      "path": "5"
    },
    "589": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4511, 4544],
      "op": "MSTORE",
      "path": "5"
    },
    "590": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4511, 4527],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "592": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4511, 4544],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "594": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4511, 4544],
      "op": "MSTORE",
      "path": "5"
    },
    "595": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4511, 4544],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "597": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4511, 4544],
      "op": "SWAP1",
      "path": "5"
    },
    "598": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4511, 4544],
      "op": "KECCAK256",
      "path": "5"
    },
    "599": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4511, 4544],
      "op": "SLOAD",
      "path": "5"
    },
    "600": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4511, 4544],
      "op": "AND",
      "path": "5"
    },
    "601": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4511, 4544],
      "op": "SWAP1",
      "path": "5"
    },
    "602": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "jump": "o",
      "offset": [4384, 4551],
      "op": "JUMP",
      "path": "5"
    },
    "603": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2081, 3559],
      "op": "JUMPDEST",
      "path": "5"
    },
    "604": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2204, 2229],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "606": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2247],
      "op": "DUP1",
      "path": "5"
    },
    "607": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2247],
      "op": "SLOAD",
      "path": "5"
    },
    "608": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "610": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "MLOAD",
      "path": "5"
    },
    "611": {
      "op": "PUSH4",
      "value": "0x700465B1"
    },
    "616": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "618": {
      "op": "SHL"
    },
    "619": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "DUP2",
      "path": "5"
    },
    "620": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "MSTORE",
      "path": "5"
    },
    "621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "625": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "627": {
      "op": "SHL"
    },
    "628": {
      "op": "SUB"
    },
    "629": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2247],
      "op": "SWAP1",
      "path": "5"
    },
    "630": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2247],
      "op": "SWAP2",
      "path": "5"
    },
    "631": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2247],
      "op": "AND",
      "path": "5"
    },
    "632": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2247],
      "op": "SWAP1",
      "path": "5"
    },
    "633": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2257],
      "op": "PUSH4",
      "path": "5",
      "value": "0xE008CB62"
    },
    "638": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2257],
      "op": "SWAP1",
      "path": "5"
    },
    "639": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "PUSH2",
      "path": "5",
      "value": "0x28C"
    },
    "642": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "SWAP1",
      "path": "5"
    },
    "643": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2258, 2273],
      "op": "DUP7",
      "path": "5"
    },
    "644": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2258, 2273],
      "op": "SWAP1",
      "path": "5"
    },
    "645": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "647": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "ADD",
      "path": "5"
    },
    "648": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB2D"
    },
    "651": {
      "fn": "KeyBroadcastContract.vote",
      "jump": "i",
      "offset": [2232, 2274],
      "op": "JUMP",
      "path": "5"
    },
    "652": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "JUMPDEST",
      "path": "5"
    },
    "653": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "655": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "657": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "MLOAD",
      "path": "5"
    },
    "658": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "DUP1",
      "path": "5"
    },
    "659": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "DUP4",
      "path": "5"
    },
    "660": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "SUB",
      "path": "5"
    },
    "661": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "DUP2",
      "path": "5"
    },
    "662": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "DUP7",
      "path": "5"
    },
    "663": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "DUP1",
      "path": "5"
    },
    "664": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "665": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "ISZERO",
      "path": "5"
    },
    "666": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "DUP1",
      "path": "5"
    },
    "667": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "ISZERO",
      "path": "5"
    },
    "668": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2A4"
    },
    "671": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "JUMPI",
      "path": "5"
    },
    "672": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "674": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "DUP1",
      "path": "5"
    },
    "675": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "REVERT",
      "path": "5"
    },
    "676": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "JUMPDEST",
      "path": "5"
    },
    "677": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "POP",
      "path": "5"
    },
    "678": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "GAS",
      "path": "5"
    },
    "679": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "STATICCALL",
      "path": "5"
    },
    "680": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "ISZERO",
      "path": "5"
    },
    "681": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "DUP1",
      "path": "5"
    },
    "682": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "ISZERO",
      "path": "5"
    },
    "683": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B8"
    },
    "686": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "JUMPI",
      "path": "5"
    },
    "687": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "688": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "690": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "DUP1",
      "path": "5"
    },
    "691": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "692": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "693": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "695": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "REVERT",
      "path": "5"
    },
    "696": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "JUMPDEST",
      "path": "5"
    },
    "697": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "POP",
      "path": "5"
    },
    "698": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "POP",
      "path": "5"
    },
    "699": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "POP",
      "path": "5"
    },
    "700": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "POP",
      "path": "5"
    },
    "701": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "703": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "MLOAD",
      "path": "5"
    },
    "704": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "705": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "707": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "DUP3",
      "path": "5"
    },
    "708": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "709": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "711": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "712": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "SWAP1",
      "path": "5"
    },
    "713": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "DUP2",
      "path": "5"
    },
    "714": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "ADD",
      "path": "5"
    },
    "715": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "717": {
      "op": "NOT"
    },
    "718": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "AND",
      "path": "5"
    },
    "719": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "DUP3",
      "path": "5"
    },
    "720": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "ADD",
      "path": "5"
    },
    "721": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "723": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "MSTORE",
      "path": "5"
    },
    "724": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E0"
    },
    "727": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "SWAP2",
      "path": "5"
    },
    "728": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "SWAP1",
      "path": "5"
    },
    "729": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "DUP2",
      "path": "5"
    },
    "730": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "ADD",
      "path": "5"
    },
    "731": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "SWAP1",
      "path": "5"
    },
    "732": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "PUSH2",
      "path": "5",
      "value": "0x772"
    },
    "735": {
      "fn": "KeyBroadcastContract.vote",
      "jump": "i",
      "offset": [2232, 2274],
      "op": "JUMP",
      "path": "5"
    },
    "736": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "JUMPDEST",
      "path": "5"
    },
    "737": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2204, 2274],
      "op": "SWAP1",
      "path": "5"
    },
    "738": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2204, 2274],
      "op": "POP",
      "path": "5"
    },
    "739": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2324, 2325],
      "op": "PUSH1",
      "path": "5",
      "statement": 4,
      "value": "0x0"
    },
    "741": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2305, 2311],
      "op": "DUP2",
      "path": "5"
    },
    "742": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2305, 2321],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "744": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2305, 2321],
      "op": "ADD",
      "path": "5"
    },
    "745": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2305, 2321],
      "op": "MLOAD",
      "path": "5"
    },
    "746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "750": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "752": {
      "op": "SHL"
    },
    "753": {
      "op": "SUB"
    },
    "754": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2305, 2325],
      "op": "AND",
      "path": "5"
    },
    "755": {
      "branch": 16,
      "fn": "KeyBroadcastContract.vote",
      "offset": [2305, 2325],
      "op": "GT",
      "path": "5"
    },
    "756": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2284, 2391],
      "op": "PUSH2",
      "path": "5",
      "value": "0x318"
    },
    "759": {
      "branch": 16,
      "fn": "KeyBroadcastContract.vote",
      "offset": [2284, 2391],
      "op": "JUMPI",
      "path": "5"
    },
    "760": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2284, 2391],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "762": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2284, 2391],
      "op": "MLOAD",
      "path": "5"
    },
    "763": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "767": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "769": {
      "op": "SHL"
    },
    "770": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2284, 2391],
      "op": "DUP2",
      "path": "5"
    },
    "771": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2284, 2391],
      "op": "MSTORE",
      "path": "5"
    },
    "772": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2284, 2391],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "774": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2284, 2391],
      "op": "ADD",
      "path": "5"
    },
    "775": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2284, 2391],
      "op": "PUSH2",
      "path": "5",
      "value": "0x30F"
    },
    "778": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2284, 2391],
      "op": "SWAP1",
      "path": "5"
    },
    "779": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2284, 2391],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9FE"
    },
    "782": {
      "fn": "KeyBroadcastContract.vote",
      "jump": "i",
      "offset": [2284, 2391],
      "op": "JUMP",
      "path": "5"
    },
    "783": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2284, 2391],
      "op": "JUMPDEST",
      "path": "5"
    },
    "784": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2284, 2391],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "786": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2284, 2391],
      "op": "MLOAD",
      "path": "5"
    },
    "787": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2284, 2391],
      "op": "DUP1",
      "path": "5"
    },
    "788": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2284, 2391],
      "op": "SWAP2",
      "path": "5"
    },
    "789": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2284, 2391],
      "op": "SUB",
      "path": "5"
    },
    "790": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2284, 2391],
      "op": "SWAP1",
      "path": "5"
    },
    "791": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2284, 2391],
      "op": "REVERT",
      "path": "5"
    },
    "792": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2284, 2391],
      "op": "JUMPDEST",
      "path": "5"
    },
    "793": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2437, 2443],
      "op": "DUP1",
      "path": "5",
      "statement": 5
    },
    "794": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2437, 2451],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "796": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2437, 2451],
      "op": "ADD",
      "path": "5"
    },
    "797": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2437, 2451],
      "op": "MLOAD",
      "path": "5"
    },
    "798": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2437, 2458],
      "op": "MLOAD",
      "path": "5"
    },
    "799": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2423, 2434],
      "op": "DUP5",
      "path": "5"
    },
    "800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "804": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "806": {
      "op": "SHL"
    },
    "807": {
      "op": "SUB"
    },
    "808": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2423, 2458],
      "op": "AND",
      "path": "5"
    },
    "809": {
      "branch": 17,
      "fn": "KeyBroadcastContract.vote",
      "offset": [2423, 2458],
      "op": "LT",
      "path": "5"
    },
    "810": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2402, 2531],
      "op": "PUSH2",
      "path": "5",
      "value": "0x345"
    },
    "813": {
      "branch": 17,
      "fn": "KeyBroadcastContract.vote",
      "offset": [2402, 2531],
      "op": "JUMPI",
      "path": "5"
    },
    "814": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2402, 2531],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "816": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2402, 2531],
      "op": "MLOAD",
      "path": "5"
    },
    "817": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "821": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "823": {
      "op": "SHL"
    },
    "824": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2402, 2531],
      "op": "DUP2",
      "path": "5"
    },
    "825": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2402, 2531],
      "op": "MSTORE",
      "path": "5"
    },
    "826": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2402, 2531],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "828": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2402, 2531],
      "op": "ADD",
      "path": "5"
    },
    "829": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2402, 2531],
      "op": "PUSH2",
      "path": "5",
      "value": "0x30F"
    },
    "832": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2402, 2531],
      "op": "SWAP1",
      "path": "5"
    },
    "833": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2402, 2531],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA90"
    },
    "836": {
      "fn": "KeyBroadcastContract.vote",
      "jump": "i",
      "offset": [2402, 2531],
      "op": "JUMP",
      "path": "5"
    },
    "837": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2402, 2531],
      "op": "JUMPDEST",
      "path": "5"
    },
    "838": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2576, 2582],
      "op": "DUP1",
      "path": "5",
      "statement": 6
    },
    "839": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2576, 2590],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "841": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2576, 2590],
      "op": "ADD",
      "path": "5"
    },
    "842": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2576, 2590],
      "op": "MLOAD",
      "path": "5"
    },
    "843": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2591, 2602],
      "op": "DUP5",
      "path": "5"
    },
    "844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "848": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "850": {
      "op": "SHL"
    },
    "851": {
      "op": "SUB"
    },
    "852": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2576, 2603],
      "op": "AND",
      "path": "5"
    },
    "853": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2576, 2603],
      "op": "DUP2",
      "path": "5"
    },
    "854": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2576, 2603],
      "op": "MLOAD",
      "path": "5"
    },
    "855": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2576, 2603],
      "op": "DUP2",
      "path": "5"
    },
    "856": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2576, 2603],
      "op": "LT",
      "path": "5"
    },
    "857": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2576, 2603],
      "op": "PUSH2",
      "path": "5",
      "value": "0x35E"
    },
    "860": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2576, 2603],
      "op": "JUMPI",
      "path": "5"
    },
    "861": {
      "dev": "Index out of range",
      "fn": "KeyBroadcastContract.vote",
      "offset": [2576, 2603],
      "op": "INVALID",
      "path": "5"
    },
    "862": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2576, 2603],
      "op": "JUMPDEST",
      "path": "5"
    },
    "863": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2576, 2603],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "865": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2576, 2603],
      "op": "MUL",
      "path": "5"
    },
    "866": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2576, 2603],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "868": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2576, 2603],
      "op": "ADD",
      "path": "5"
    },
    "869": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2576, 2603],
      "op": "ADD",
      "path": "5"
    },
    "870": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2576, 2603],
      "op": "MLOAD",
      "path": "5"
    },
    "871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "875": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "877": {
      "op": "SHL"
    },
    "878": {
      "op": "SUB"
    },
    "879": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2562, 2603],
      "op": "AND",
      "path": "5"
    },
    "880": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2562, 2572],
      "op": "CALLER",
      "path": "5"
    },
    "881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "885": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "887": {
      "op": "SHL"
    },
    "888": {
      "op": "SUB"
    },
    "889": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2562, 2603],
      "op": "AND",
      "path": "5"
    },
    "890": {
      "branch": 18,
      "fn": "KeyBroadcastContract.vote",
      "offset": [2562, 2603],
      "op": "EQ",
      "path": "5"
    },
    "891": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2541, 2671],
      "op": "PUSH2",
      "path": "5",
      "value": "0x396"
    },
    "894": {
      "branch": 18,
      "fn": "KeyBroadcastContract.vote",
      "offset": [2541, 2671],
      "op": "JUMPI",
      "path": "5"
    },
    "895": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2541, 2671],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "897": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2541, 2671],
      "op": "MLOAD",
      "path": "5"
    },
    "898": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "902": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "904": {
      "op": "SHL"
    },
    "905": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2541, 2671],
      "op": "DUP2",
      "path": "5"
    },
    "906": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2541, 2671],
      "op": "MSTORE",
      "path": "5"
    },
    "907": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2541, 2671],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "909": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2541, 2671],
      "op": "ADD",
      "path": "5"
    },
    "910": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2541, 2671],
      "op": "PUSH2",
      "path": "5",
      "value": "0x30F"
    },
    "913": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2541, 2671],
      "op": "SWAP1",
      "path": "5"
    },
    "914": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2541, 2671],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA46"
    },
    "917": {
      "fn": "KeyBroadcastContract.vote",
      "jump": "i",
      "offset": [2541, 2671],
      "op": "JUMP",
      "path": "5"
    },
    "918": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2541, 2671],
      "op": "JUMPDEST",
      "path": "5"
    },
    "919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "923": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "925": {
      "op": "SHL"
    },
    "926": {
      "op": "SUB"
    },
    "927": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2727],
      "op": "DUP4",
      "path": "5",
      "statement": 7
    },
    "928": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2727],
      "op": "AND",
      "path": "5"
    },
    "929": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2727],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "931": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2727],
      "op": "SWAP1",
      "path": "5"
    },
    "932": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2727],
      "op": "DUP2",
      "path": "5"
    },
    "933": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2727],
      "op": "MSTORE",
      "path": "5"
    },
    "934": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2710],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "936": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2727],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "938": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2727],
      "op": "SWAP1",
      "path": "5"
    },
    "939": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2727],
      "op": "DUP2",
      "path": "5"
    },
    "940": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2727],
      "op": "MSTORE",
      "path": "5"
    },
    "941": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2727],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "943": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2727],
      "op": "DUP1",
      "path": "5"
    },
    "944": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2727],
      "op": "DUP4",
      "path": "5"
    },
    "945": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2727],
      "op": "KECCAK256",
      "path": "5"
    },
    "946": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2728, 2738],
      "op": "CALLER",
      "path": "5"
    },
    "947": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2739],
      "op": "DUP5",
      "path": "5"
    },
    "948": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2739],
      "op": "MSTORE",
      "path": "5"
    },
    "949": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2739],
      "op": "SWAP1",
      "path": "5"
    },
    "950": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2739],
      "op": "SWAP2",
      "path": "5"
    },
    "951": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2739],
      "op": "MSTORE",
      "path": "5"
    },
    "952": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2739],
      "op": "SWAP1",
      "path": "5"
    },
    "953": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2739],
      "op": "KECCAK256",
      "path": "5"
    },
    "954": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2739],
      "op": "SLOAD",
      "path": "5"
    },
    "955": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2739],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "957": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2739],
      "op": "AND",
      "path": "5"
    },
    "958": {
      "branch": 19,
      "fn": "KeyBroadcastContract.vote",
      "offset": [2703, 2739],
      "op": "ISZERO",
      "path": "5"
    },
    "959": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2682, 2811],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3DA"
    },
    "962": {
      "branch": 19,
      "fn": "KeyBroadcastContract.vote",
      "offset": [2682, 2811],
      "op": "JUMPI",
      "path": "5"
    },
    "963": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2682, 2811],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "965": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2682, 2811],
      "op": "MLOAD",
      "path": "5"
    },
    "966": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "970": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "972": {
      "op": "SHL"
    },
    "973": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2682, 2811],
      "op": "DUP2",
      "path": "5"
    },
    "974": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2682, 2811],
      "op": "MSTORE",
      "path": "5"
    },
    "975": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2682, 2811],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "977": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2682, 2811],
      "op": "ADD",
      "path": "5"
    },
    "978": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2682, 2811],
      "op": "PUSH2",
      "path": "5",
      "value": "0x30F"
    },
    "981": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2682, 2811],
      "op": "SWAP1",
      "path": "5"
    },
    "982": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2682, 2811],
      "op": "PUSH2",
      "path": "5",
      "value": "0xADF"
    },
    "985": {
      "fn": "KeyBroadcastContract.vote",
      "jump": "i",
      "offset": [2682, 2811],
      "op": "JUMP",
      "path": "5"
    },
    "986": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2682, 2811],
      "op": "JUMPDEST",
      "path": "5"
    },
    "987": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2840, 2854],
      "op": "DUP2",
      "path": "5"
    },
    "988": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2840, 2854],
      "op": "MLOAD",
      "path": "5"
    },
    "989": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2840, 2854],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "991": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2840, 2854],
      "op": "DUP1",
      "path": "5"
    },
    "992": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2840, 2854],
      "op": "DUP5",
      "path": "5"
    },
    "993": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2840, 2854],
      "op": "ADD",
      "path": "5"
    },
    "994": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2840, 2854],
      "op": "SWAP2",
      "path": "5"
    },
    "995": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2840, 2854],
      "op": "SWAP1",
      "path": "5"
    },
    "996": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2840, 2854],
      "op": "SWAP2",
      "path": "5"
    },
    "997": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2840, 2854],
      "op": "KECCAK256",
      "path": "5"
    },
    "998": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2822, 2837],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1000": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2928],
      "op": "DUP2",
      "path": "5"
    },
    "1001": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2928],
      "op": "DUP2",
      "path": "5"
    },
    "1002": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2928],
      "op": "MSTORE",
      "path": "5"
    },
    "1003": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2919],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "1005": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2928],
      "op": "SWAP1",
      "path": "5"
    },
    "1006": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2928],
      "op": "SWAP3",
      "path": "5"
    },
    "1007": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2928],
      "op": "MSTORE",
      "path": "5"
    },
    "1008": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2928],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1010": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2928],
      "op": "SWAP1",
      "path": "5"
    },
    "1011": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2928],
      "op": "SWAP2",
      "path": "5"
    },
    "1012": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2928],
      "op": "KECCAK256",
      "path": "5"
    },
    "1013": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2935],
      "op": "SLOAD",
      "path": "5"
    },
    "1014": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2935],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1016": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1018": {
      "op": "NOT"
    },
    "1019": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2935],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "1022": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2935],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1024": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2935],
      "op": "DUP5",
      "path": "5"
    },
    "1025": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2935],
      "op": "AND",
      "path": "5"
    },
    "1026": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2935],
      "op": "ISZERO",
      "path": "5"
    },
    "1027": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2935],
      "op": "MUL",
      "path": "5"
    },
    "1028": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2935],
      "op": "ADD",
      "path": "5"
    },
    "1029": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2935],
      "op": "SWAP1",
      "path": "5"
    },
    "1030": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2935],
      "op": "SWAP2",
      "path": "5"
    },
    "1031": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2935],
      "op": "AND",
      "path": "5"
    },
    "1032": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2935],
      "op": "DIV",
      "path": "5"
    },
    "1033": {
      "branch": 20,
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2940],
      "op": "ISZERO",
      "path": "5"
    },
    "1034": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2959],
      "op": "DUP1",
      "path": "5"
    },
    "1035": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2959],
      "op": "ISZERO",
      "path": "5"
    },
    "1036": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2959],
      "op": "PUSH2",
      "path": "5",
      "value": "0x414"
    },
    "1039": {
      "branch": 20,
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2959],
      "op": "JUMPI",
      "path": "5"
    },
    "1040": {
      "op": "POP"
    },
    "1041": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2944, 2954],
      "op": "DUP3",
      "path": "5"
    },
    "1042": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2944, 2954],
      "op": "MLOAD",
      "path": "5"
    },
    "1043": {
      "branch": 21,
      "fn": "KeyBroadcastContract.vote",
      "offset": [2944, 2959],
      "op": "ISZERO",
      "path": "5"
    },
    "1044": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2959],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1045": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2910, 3006],
      "op": "ISZERO",
      "path": "5"
    },
    "1046": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2910, 3006],
      "op": "PUSH2",
      "path": "5",
      "value": "0x43A"
    },
    "1049": {
      "branch": 21,
      "fn": "KeyBroadcastContract.vote",
      "offset": [2910, 3006],
      "op": "JUMPI",
      "path": "5"
    },
    "1050": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2989],
      "op": "PUSH1",
      "path": "5",
      "statement": 8,
      "value": "0x0"
    },
    "1052": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2989],
      "op": "DUP2",
      "path": "5"
    },
    "1053": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2989],
      "op": "DUP2",
      "path": "5"
    },
    "1054": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2989],
      "op": "MSTORE",
      "path": "5"
    },
    "1055": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2980],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "1057": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2989],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1059": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2989],
      "op": "SWAP1",
      "path": "5"
    },
    "1060": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2989],
      "op": "DUP2",
      "path": "5"
    },
    "1061": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2989],
      "op": "MSTORE",
      "path": "5"
    },
    "1062": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2989],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1064": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2989],
      "op": "SWAP1",
      "path": "5"
    },
    "1065": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2989],
      "op": "SWAP2",
      "path": "5"
    },
    "1066": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2989],
      "op": "KECCAK256",
      "path": "5"
    },
    "1067": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2995],
      "op": "DUP5",
      "path": "5"
    },
    "1068": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2995],
      "op": "MLOAD",
      "path": "5"
    },
    "1069": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2995],
      "op": "PUSH2",
      "path": "5",
      "value": "0x438"
    },
    "1072": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2995],
      "op": "SWAP3",
      "path": "5"
    },
    "1073": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2995],
      "op": "DUP7",
      "path": "5"
    },
    "1074": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2995],
      "op": "ADD",
      "path": "5"
    },
    "1075": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2995],
      "op": "SWAP1",
      "path": "5"
    },
    "1076": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2995],
      "op": "PUSH2",
      "path": "5",
      "value": "0x583"
    },
    "1079": {
      "fn": "KeyBroadcastContract.vote",
      "jump": "i",
      "offset": [2975, 2995],
      "op": "JUMP",
      "path": "5"
    },
    "1080": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2995],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1081": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2995],
      "op": "POP",
      "path": "5"
    },
    "1082": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2910, 3006],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1089": {
      "op": "SHL"
    },
    "1090": {
      "op": "SUB"
    },
    "1091": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3082],
      "op": "DUP5",
      "path": "5"
    },
    "1092": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3082],
      "op": "DUP2",
      "path": "5"
    },
    "1093": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3082],
      "op": "AND",
      "path": "5"
    },
    "1094": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3038, 3053],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1096": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3082],
      "op": "DUP2",
      "path": "5"
    },
    "1097": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3082],
      "op": "DUP2",
      "path": "5"
    },
    "1098": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3082],
      "op": "MSTORE",
      "path": "5"
    },
    "1099": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3065],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1101": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3082],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1103": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3082],
      "op": "SWAP1",
      "path": "5"
    },
    "1104": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3082],
      "op": "DUP2",
      "path": "5"
    },
    "1105": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3082],
      "op": "MSTORE",
      "path": "5"
    },
    "1106": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3082],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1108": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3082],
      "op": "DUP1",
      "path": "5"
    },
    "1109": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3082],
      "op": "DUP4",
      "path": "5"
    },
    "1110": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3082],
      "op": "KECCAK256",
      "path": "5"
    },
    "1111": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3091],
      "op": "DUP7",
      "path": "5"
    },
    "1112": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3091],
      "op": "DUP5",
      "path": "5"
    },
    "1113": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3091],
      "op": "MSTORE",
      "path": "5"
    },
    "1114": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3091],
      "op": "DUP3",
      "path": "5"
    },
    "1115": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3091],
      "op": "MSTORE",
      "path": "5"
    },
    "1116": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3091],
      "op": "DUP1",
      "path": "5"
    },
    "1117": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3091],
      "op": "DUP4",
      "path": "5"
    },
    "1118": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3091],
      "op": "KECCAK256",
      "path": "5"
    },
    "1119": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3091],
      "op": "DUP1",
      "path": "5"
    },
    "1120": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3091],
      "op": "SLOAD",
      "path": "5"
    },
    "1121": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3128],
      "op": "DUP6",
      "path": "5",
      "statement": 9
    },
    "1122": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3128],
      "op": "DUP6",
      "path": "5"
    },
    "1123": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3128],
      "op": "MSTORE",
      "path": "5"
    },
    "1124": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3091],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1126": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3128],
      "op": "DUP1",
      "path": "5"
    },
    "1127": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3128],
      "op": "DUP6",
      "path": "5"
    },
    "1128": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3128],
      "op": "MSTORE",
      "path": "5"
    },
    "1129": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3128],
      "op": "DUP4",
      "path": "5"
    },
    "1130": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3128],
      "op": "DUP7",
      "path": "5"
    },
    "1131": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3128],
      "op": "KECCAK256",
      "path": "5"
    },
    "1132": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3129, 3139],
      "op": "CALLER",
      "path": "5"
    },
    "1133": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3140],
      "op": "DUP8",
      "path": "5"
    },
    "1134": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3140],
      "op": "MSTORE",
      "path": "5"
    },
    "1135": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3140],
      "op": "DUP6",
      "path": "5"
    },
    "1136": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3140],
      "op": "MSTORE",
      "path": "5"
    },
    "1137": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3140],
      "op": "DUP4",
      "path": "5"
    },
    "1138": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3140],
      "op": "DUP7",
      "path": "5"
    },
    "1139": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3140],
      "op": "KECCAK256",
      "path": "5"
    },
    "1140": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3147],
      "op": "DUP1",
      "path": "5"
    },
    "1141": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3147],
      "op": "SLOAD",
      "path": "5"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1144": {
      "op": "NOT"
    },
    "1145": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3147],
      "op": "AND",
      "path": "5"
    },
    "1146": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3147],
      "op": "DUP3",
      "path": "5"
    },
    "1147": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3147],
      "op": "OR",
      "path": "5"
    },
    "1148": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3147],
      "op": "SWAP1",
      "path": "5"
    },
    "1149": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3147],
      "op": "SSTORE",
      "path": "5"
    },
    "1150": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3157, 3203],
      "op": "DUP3",
      "path": "5",
      "statement": 10
    },
    "1151": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3157, 3203],
      "op": "SLOAD",
      "path": "5"
    },
    "1152": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1161": {
      "op": "NOT"
    },
    "1162": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3157, 3203],
      "op": "AND",
      "path": "5"
    },
    "1163": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3091],
      "op": "SWAP2",
      "path": "5"
    },
    "1164": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3091],
      "op": "DUP9",
      "path": "5"
    },
    "1165": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3091],
      "op": "AND",
      "path": "5"
    },
    "1166": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3095],
      "op": "ADD",
      "path": "5"
    },
    "1167": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3157, 3203],
      "op": "DUP1",
      "path": "5"
    },
    "1168": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3157, 3203],
      "op": "DUP9",
      "path": "5"
    },
    "1169": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3157, 3203],
      "op": "AND",
      "path": "5"
    },
    "1170": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3157, 3203],
      "op": "SWAP2",
      "path": "5"
    },
    "1171": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3157, 3203],
      "op": "DUP3",
      "path": "5"
    },
    "1172": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3157, 3203],
      "op": "OR",
      "path": "5"
    },
    "1173": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3157, 3203],
      "op": "SWAP1",
      "path": "5"
    },
    "1174": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3157, 3203],
      "op": "SWAP3",
      "path": "5"
    },
    "1175": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3157, 3203],
      "op": "SSTORE",
      "path": "5"
    },
    "1176": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3262],
      "op": "SWAP5",
      "path": "5"
    },
    "1177": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3262],
      "op": "DUP5",
      "path": "5"
    },
    "1178": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3262],
      "op": "MSTORE",
      "path": "5"
    },
    "1179": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3245],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "1181": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3262],
      "op": "SWAP1",
      "path": "5"
    },
    "1182": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3262],
      "op": "SWAP3",
      "path": "5"
    },
    "1183": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3262],
      "op": "MSTORE",
      "path": "5"
    },
    "1184": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3262],
      "op": "SWAP1",
      "path": "5"
    },
    "1185": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3262],
      "op": "SWAP2",
      "path": "5"
    },
    "1186": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3262],
      "op": "KECCAK256",
      "path": "5"
    },
    "1187": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3262],
      "op": "SLOAD",
      "path": "5"
    },
    "1188": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3095],
      "op": "SWAP1",
      "path": "5"
    },
    "1189": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3095],
      "op": "SWAP3",
      "path": "5"
    },
    "1190": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3262],
      "op": "AND",
      "path": "5"
    },
    "1191": {
      "op": "LT"
    },
    "1192": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3214, 3388],
      "op": "ISZERO",
      "path": "5"
    },
    "1193": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3214, 3388],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4E8"
    },
    "1196": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3214, 3388],
      "op": "JUMPI",
      "path": "5"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1201": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1203": {
      "op": "SHL"
    },
    "1204": {
      "op": "SUB"
    },
    "1205": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3311],
      "op": "DUP6",
      "path": "5",
      "statement": 11
    },
    "1206": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3311],
      "op": "DUP2",
      "path": "5"
    },
    "1207": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3311],
      "op": "AND",
      "path": "5"
    },
    "1208": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3311],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1210": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3311],
      "op": "SWAP1",
      "path": "5"
    },
    "1211": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3311],
      "op": "DUP2",
      "path": "5"
    },
    "1212": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3311],
      "op": "MSTORE",
      "path": "5"
    },
    "1213": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3294],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "1215": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3311],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1217": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3311],
      "op": "SWAP1",
      "path": "5"
    },
    "1218": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3311],
      "op": "DUP2",
      "path": "5"
    },
    "1219": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3311],
      "op": "MSTORE",
      "path": "5"
    },
    "1220": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3311],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1222": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3311],
      "op": "DUP1",
      "path": "5"
    },
    "1223": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3311],
      "op": "DUP4",
      "path": "5"
    },
    "1224": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3311],
      "op": "KECCAK256",
      "path": "5"
    },
    "1225": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3322],
      "op": "DUP1",
      "path": "5"
    },
    "1226": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3322],
      "op": "SLOAD",
      "path": "5"
    },
    "1227": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1236": {
      "op": "NOT"
    },
    "1237": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3322],
      "op": "AND",
      "path": "5"
    },
    "1238": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3322],
      "op": "SWAP5",
      "path": "5"
    },
    "1239": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3322],
      "op": "DUP7",
      "path": "5"
    },
    "1240": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3322],
      "op": "AND",
      "path": "5"
    },
    "1241": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3322],
      "op": "SWAP5",
      "path": "5"
    },
    "1242": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3322],
      "op": "SWAP1",
      "path": "5"
    },
    "1243": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3322],
      "op": "SWAP5",
      "path": "5"
    },
    "1244": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3322],
      "op": "OR",
      "path": "5"
    },
    "1245": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3322],
      "op": "SWAP1",
      "path": "5"
    },
    "1246": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3322],
      "op": "SWAP4",
      "path": "5"
    },
    "1247": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3322],
      "op": "SSTORE",
      "path": "5"
    },
    "1248": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3336, 3350],
      "op": "PUSH1",
      "path": "5",
      "statement": 12,
      "value": "0x4"
    },
    "1250": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3336, 3367],
      "op": "SWAP1",
      "path": "5"
    },
    "1251": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3336, 3367],
      "op": "MSTORE",
      "path": "5"
    },
    "1252": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3336, 3367],
      "op": "KECCAK256",
      "path": "5"
    },
    "1253": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3336, 3377],
      "op": "DUP3",
      "path": "5"
    },
    "1254": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3336, 3377],
      "op": "SWAP1",
      "path": "5"
    },
    "1255": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3336, 3377],
      "op": "SSTORE",
      "path": "5"
    },
    "1256": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3214, 3388],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1257": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3431, 3441],
      "op": "CALLER",
      "path": "5",
      "statement": 13
    },
    "1258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1262": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1264": {
      "op": "SHL"
    },
    "1265": {
      "op": "SUB"
    },
    "1266": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3403, 3552],
      "op": "AND",
      "path": "5"
    },
    "1267": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3403, 3552],
      "op": "PUSH32",
      "path": "5",
      "value": "0x305124B6EC831BB4150EB1DDBD4E8CC4B95687B9A6258B110FD0E9865914B0BF"
    },
    "1300": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3472, 3487],
      "op": "DUP7",
      "path": "5"
    },
    "1301": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3506, 3509],
      "op": "DUP7",
      "path": "5"
    },
    "1302": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3533, 3541],
      "op": "DUP5",
      "path": "5"
    },
    "1303": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3403, 3552],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1305": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3403, 3552],
      "op": "MLOAD",
      "path": "5"
    },
    "1306": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3403, 3552],
      "op": "PUSH2",
      "path": "5",
      "value": "0x525"
    },
    "1309": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3403, 3552],
      "op": "SWAP4",
      "path": "5"
    },
    "1310": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3403, 3552],
      "op": "SWAP3",
      "path": "5"
    },
    "1311": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3403, 3552],
      "op": "SWAP2",
      "path": "5"
    },
    "1312": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3403, 3552],
      "op": "SWAP1",
      "path": "5"
    },
    "1313": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3403, 3552],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB41"
    },
    "1316": {
      "fn": "KeyBroadcastContract.vote",
      "jump": "i",
      "offset": [3403, 3552],
      "op": "JUMP",
      "path": "5"
    },
    "1317": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3403, 3552],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1318": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3403, 3552],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1320": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3403, 3552],
      "op": "MLOAD",
      "path": "5"
    },
    "1321": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3403, 3552],
      "op": "DUP1",
      "path": "5"
    },
    "1322": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3403, 3552],
      "op": "SWAP2",
      "path": "5"
    },
    "1323": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3403, 3552],
      "op": "SUB",
      "path": "5"
    },
    "1324": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3403, 3552],
      "op": "SWAP1",
      "path": "5"
    },
    "1325": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3403, 3552],
      "op": "LOG2",
      "path": "5"
    },
    "1326": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2081, 3559],
      "op": "POP",
      "path": "5"
    },
    "1327": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2081, 3559],
      "op": "POP",
      "path": "5"
    },
    "1328": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2081, 3559],
      "op": "POP",
      "path": "5"
    },
    "1329": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2081, 3559],
      "op": "POP",
      "path": "5"
    },
    "1330": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2081, 3559],
      "op": "POP",
      "path": "5"
    },
    "1331": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2081, 3559],
      "op": "POP",
      "path": "5"
    },
    "1332": {
      "fn": "KeyBroadcastContract.vote",
      "jump": "o",
      "offset": [2081, 3559],
      "op": "JUMP",
      "path": "5"
    },
    "1333": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4042, 4203],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1338": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1340": {
      "op": "SHL"
    },
    "1341": {
      "op": "SUB"
    },
    "1342": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4165, 4196],
      "op": "AND",
      "path": "5",
      "statement": 14
    },
    "1343": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4135, 4142],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1345": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4165, 4196],
      "op": "SWAP1",
      "path": "5"
    },
    "1346": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4165, 4196],
      "op": "DUP2",
      "path": "5"
    },
    "1347": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4165, 4196],
      "op": "MSTORE",
      "path": "5"
    },
    "1348": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4165, 4179],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1350": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4165, 4196],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1352": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4165, 4196],
      "op": "MSTORE",
      "path": "5"
    },
    "1353": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4165, 4196],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1355": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4165, 4196],
      "op": "SWAP1",
      "path": "5"
    },
    "1356": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4165, 4196],
      "op": "KECCAK256",
      "path": "5"
    },
    "1357": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4165, 4196],
      "op": "SLOAD",
      "path": "5"
    },
    "1358": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4165, 4196],
      "op": "SWAP1",
      "path": "5"
    },
    "1359": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "jump": "o",
      "offset": [4042, 4203],
      "op": "JUMP",
      "path": "5"
    },
    "1360": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3676, 3844],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1365": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1367": {
      "op": "SHL"
    },
    "1368": {
      "op": "SUB"
    },
    "1369": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3829],
      "op": "AND",
      "path": "5",
      "statement": 15
    },
    "1370": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3779, 3783],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1372": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3829],
      "op": "SWAP1",
      "path": "5"
    },
    "1373": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3829],
      "op": "DUP2",
      "path": "5"
    },
    "1374": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3829],
      "op": "MSTORE",
      "path": "5"
    },
    "1375": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3812],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1377": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3829],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1379": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3829],
      "op": "SWAP1",
      "path": "5"
    },
    "1380": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3829],
      "op": "DUP2",
      "path": "5"
    },
    "1381": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3829],
      "op": "MSTORE",
      "path": "5"
    },
    "1382": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3829],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1384": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3829],
      "op": "DUP1",
      "path": "5"
    },
    "1385": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3829],
      "op": "DUP4",
      "path": "5"
    },
    "1386": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3829],
      "op": "KECCAK256",
      "path": "5"
    },
    "1387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1391": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1393": {
      "op": "SHL"
    },
    "1394": {
      "op": "SUB"
    },
    "1395": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3837],
      "op": "SWAP5",
      "path": "5"
    },
    "1396": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3837],
      "op": "SWAP1",
      "path": "5"
    },
    "1397": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3837],
      "op": "SWAP5",
      "path": "5"
    },
    "1398": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3837],
      "op": "AND",
      "path": "5"
    },
    "1399": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3837],
      "op": "DUP4",
      "path": "5"
    },
    "1400": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3837],
      "op": "MSTORE",
      "path": "5"
    },
    "1401": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3837],
      "op": "SWAP3",
      "path": "5"
    },
    "1402": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3837],
      "op": "SWAP1",
      "path": "5"
    },
    "1403": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3837],
      "op": "MSTORE",
      "path": "5"
    },
    "1404": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3837],
      "op": "KECCAK256",
      "path": "5"
    },
    "1405": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3837],
      "op": "SLOAD",
      "path": "5"
    },
    "1406": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3837],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "1408": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3837],
      "op": "AND",
      "path": "5"
    },
    "1409": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3837],
      "op": "SWAP1",
      "path": "5"
    },
    "1410": {
      "fn": "KeyBroadcastContract.hasVoted",
      "jump": "o",
      "offset": [3676, 3844],
      "op": "JUMP",
      "path": "5"
    },
    "1411": {
      "op": "JUMPDEST"
    },
    "1412": {
      "op": "DUP3"
    },
    "1413": {
      "op": "DUP1"
    },
    "1414": {
      "op": "SLOAD"
    },
    "1415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1417": {
      "op": "DUP2"
    },
    "1418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1420": {
      "op": "AND"
    },
    "1421": {
      "op": "ISZERO"
    },
    "1422": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "1425": {
      "op": "MUL"
    },
    "1426": {
      "op": "SUB"
    },
    "1427": {
      "op": "AND"
    },
    "1428": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1430": {
      "op": "SWAP1"
    },
    "1431": {
      "op": "DIV"
    },
    "1432": {
      "op": "SWAP1"
    },
    "1433": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1435": {
      "op": "MSTORE"
    },
    "1436": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1438": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1440": {
      "op": "KECCAK256"
    },
    "1441": {
      "op": "SWAP1"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1444": {
      "op": "ADD"
    },
    "1445": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1447": {
      "op": "SWAP1"
    },
    "1448": {
      "op": "DIV"
    },
    "1449": {
      "op": "DUP2"
    },
    "1450": {
      "op": "ADD"
    },
    "1451": {
      "op": "SWAP3"
    },
    "1452": {
      "op": "DUP3"
    },
    "1453": {
      "op": "PUSH2",
      "value": "0x5B9"
    },
    "1456": {
      "op": "JUMPI"
    },
    "1457": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1459": {
      "op": "DUP6"
    },
    "1460": {
      "op": "SSTORE"
    },
    "1461": {
      "op": "PUSH2",
      "value": "0x5FF"
    },
    "1464": {
      "op": "JUMP"
    },
    "1465": {
      "op": "JUMPDEST"
    },
    "1466": {
      "op": "DUP3"
    },
    "1467": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1469": {
      "op": "LT"
    },
    "1470": {
      "op": "PUSH2",
      "value": "0x5D2"
    },
    "1473": {
      "op": "JUMPI"
    },
    "1474": {
      "op": "DUP1"
    },
    "1475": {
      "op": "MLOAD"
    },
    "1476": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1478": {
      "op": "NOT"
    },
    "1479": {
      "op": "AND"
    },
    "1480": {
      "op": "DUP4"
    },
    "1481": {
      "op": "DUP1"
    },
    "1482": {
      "op": "ADD"
    },
    "1483": {
      "op": "OR"
    },
    "1484": {
      "op": "DUP6"
    },
    "1485": {
      "op": "SSTORE"
    },
    "1486": {
      "op": "PUSH2",
      "value": "0x5FF"
    },
    "1489": {
      "op": "JUMP"
    },
    "1490": {
      "op": "JUMPDEST"
    },
    "1491": {
      "op": "DUP3"
    },
    "1492": {
      "op": "DUP1"
    },
    "1493": {
      "op": "ADD"
    },
    "1494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1496": {
      "op": "ADD"
    },
    "1497": {
      "op": "DUP6"
    },
    "1498": {
      "op": "SSTORE"
    },
    "1499": {
      "op": "DUP3"
    },
    "1500": {
      "op": "ISZERO"
    },
    "1501": {
      "op": "PUSH2",
      "value": "0x5FF"
    },
    "1504": {
      "op": "JUMPI"
    },
    "1505": {
      "op": "SWAP2"
    },
    "1506": {
      "op": "DUP3"
    },
    "1507": {
      "op": "ADD"
    },
    "1508": {
      "op": "JUMPDEST"
    },
    "1509": {
      "op": "DUP3"
    },
    "1510": {
      "op": "DUP2"
    },
    "1511": {
      "op": "GT"
    },
    "1512": {
      "op": "ISZERO"
    },
    "1513": {
      "op": "PUSH2",
      "value": "0x5FF"
    },
    "1516": {
      "op": "JUMPI"
    },
    "1517": {
      "op": "DUP3"
    },
    "1518": {
      "op": "MLOAD"
    },
    "1519": {
      "op": "DUP3"
    },
    "1520": {
      "op": "SSTORE"
    },
    "1521": {
      "op": "SWAP2"
    },
    "1522": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1524": {
      "op": "ADD"
    },
    "1525": {
      "op": "SWAP2"
    },
    "1526": {
      "op": "SWAP1"
    },
    "1527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1529": {
      "op": "ADD"
    },
    "1530": {
      "op": "SWAP1"
    },
    "1531": {
      "op": "PUSH2",
      "value": "0x5E4"
    },
    "1534": {
      "op": "JUMP"
    },
    "1535": {
      "op": "JUMPDEST"
    },
    "1536": {
      "op": "POP"
    },
    "1537": {
      "op": "PUSH2",
      "value": "0x60B"
    },
    "1540": {
      "op": "SWAP3"
    },
    "1541": {
      "op": "SWAP2"
    },
    "1542": {
      "op": "POP"
    },
    "1543": {
      "op": "PUSH2",
      "value": "0x60F"
    },
    "1546": {
      "jump": "i",
      "op": "JUMP"
    },
    "1547": {
      "op": "JUMPDEST"
    },
    "1548": {
      "op": "POP"
    },
    "1549": {
      "op": "SWAP1"
    },
    "1550": {
      "jump": "o",
      "op": "JUMP"
    },
    "1551": {
      "op": "JUMPDEST"
    },
    "1552": {
      "op": "JUMPDEST"
    },
    "1553": {
      "op": "DUP1"
    },
    "1554": {
      "op": "DUP3"
    },
    "1555": {
      "op": "GT"
    },
    "1556": {
      "op": "ISZERO"
    },
    "1557": {
      "op": "PUSH2",
      "value": "0x60B"
    },
    "1560": {
      "op": "JUMPI"
    },
    "1561": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1563": {
      "op": "DUP2"
    },
    "1564": {
      "op": "SSTORE"
    },
    "1565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1567": {
      "op": "ADD"
    },
    "1568": {
      "op": "PUSH2",
      "value": "0x610"
    },
    "1571": {
      "op": "JUMP"
    },
    "1572": {
      "op": "JUMPDEST"
    },
    "1573": {
      "op": "DUP1"
    },
    "1574": {
      "op": "MLOAD"
    },
    "1575": {
      "op": "PUSH2",
      "value": "0x238"
    },
    "1578": {
      "op": "DUP2"
    },
    "1579": {
      "op": "PUSH2",
      "value": "0xB9A"
    },
    "1582": {
      "jump": "i",
      "op": "JUMP"
    },
    "1583": {
      "op": "JUMPDEST"
    },
    "1584": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1586": {
      "op": "DUP3"
    },
    "1587": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1589": {
      "op": "DUP4"
    },
    "1590": {
      "op": "ADD"
    },
    "1591": {
      "op": "SLT"
    },
    "1592": {
      "op": "PUSH2",
      "value": "0x63F"
    },
    "1595": {
      "op": "JUMPI"
    },
    "1596": {
      "op": "DUP1"
    },
    "1597": {
      "op": "DUP2"
    },
    "1598": {
      "op": "REVERT"
    },
    "1599": {
      "op": "JUMPDEST"
    },
    "1600": {
      "op": "DUP2"
    },
    "1601": {
      "op": "MLOAD"
    },
    "1602": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1608": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1610": {
      "op": "SHL"
    },
    "1611": {
      "op": "SUB"
    },
    "1612": {
      "op": "DUP3"
    },
    "1613": {
      "op": "GT"
    },
    "1614": {
      "op": "ISZERO"
    },
    "1615": {
      "op": "PUSH2",
      "value": "0x654"
    },
    "1618": {
      "op": "JUMPI"
    },
    "1619": {
      "op": "INVALID"
    },
    "1620": {
      "op": "JUMPDEST"
    },
    "1621": {
      "op": "DUP1"
    },
    "1622": {
      "op": "DUP3"
    },
    "1623": {
      "op": "MUL"
    },
    "1624": {
      "op": "PUSH2",
      "value": "0x662"
    },
    "1627": {
      "op": "DUP3"
    },
    "1628": {
      "op": "DUP3"
    },
    "1629": {
      "op": "ADD"
    },
    "1630": {
      "op": "PUSH2",
      "value": "0xB77"
    },
    "1633": {
      "jump": "i",
      "op": "JUMP"
    },
    "1634": {
      "op": "JUMPDEST"
    },
    "1635": {
      "op": "DUP4"
    },
    "1636": {
      "op": "DUP2"
    },
    "1637": {
      "op": "MSTORE"
    },
    "1638": {
      "op": "DUP3"
    },
    "1639": {
      "op": "DUP2"
    },
    "1640": {
      "op": "ADD"
    },
    "1641": {
      "op": "SWAP1"
    },
    "1642": {
      "op": "DUP7"
    },
    "1643": {
      "op": "DUP5"
    },
    "1644": {
      "op": "ADD"
    },
    "1645": {
      "op": "DUP4"
    },
    "1646": {
      "op": "DUP9"
    },
    "1647": {
      "op": "ADD"
    },
    "1648": {
      "op": "DUP6"
    },
    "1649": {
      "op": "ADD"
    },
    "1650": {
      "op": "DUP10"
    },
    "1651": {
      "op": "LT"
    },
    "1652": {
      "op": "ISZERO"
    },
    "1653": {
      "op": "PUSH2",
      "value": "0x67C"
    },
    "1656": {
      "op": "JUMPI"
    },
    "1657": {
      "op": "DUP7"
    },
    "1658": {
      "op": "DUP8"
    },
    "1659": {
      "op": "REVERT"
    },
    "1660": {
      "op": "JUMPDEST"
    },
    "1661": {
      "op": "DUP7"
    },
    "1662": {
      "op": "SWAP4"
    },
    "1663": {
      "op": "POP"
    },
    "1664": {
      "op": "JUMPDEST"
    },
    "1665": {
      "op": "DUP6"
    },
    "1666": {
      "op": "DUP5"
    },
    "1667": {
      "op": "LT"
    },
    "1668": {
      "op": "ISZERO"
    },
    "1669": {
      "op": "PUSH2",
      "value": "0x6A7"
    },
    "1672": {
      "op": "JUMPI"
    },
    "1673": {
      "op": "DUP1"
    },
    "1674": {
      "op": "MLOAD"
    },
    "1675": {
      "op": "PUSH2",
      "value": "0x693"
    },
    "1678": {
      "op": "DUP2"
    },
    "1679": {
      "op": "PUSH2",
      "value": "0xB9A"
    },
    "1682": {
      "jump": "i",
      "op": "JUMP"
    },
    "1683": {
      "op": "JUMPDEST"
    },
    "1684": {
      "op": "DUP4"
    },
    "1685": {
      "op": "MSTORE"
    },
    "1686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1688": {
      "op": "SWAP4"
    },
    "1689": {
      "op": "SWAP1"
    },
    "1690": {
      "op": "SWAP4"
    },
    "1691": {
      "op": "ADD"
    },
    "1692": {
      "op": "SWAP3"
    },
    "1693": {
      "op": "SWAP2"
    },
    "1694": {
      "op": "DUP5"
    },
    "1695": {
      "op": "ADD"
    },
    "1696": {
      "op": "SWAP2"
    },
    "1697": {
      "op": "DUP5"
    },
    "1698": {
      "op": "ADD"
    },
    "1699": {
      "op": "PUSH2",
      "value": "0x680"
    },
    "1702": {
      "op": "JUMP"
    },
    "1703": {
      "op": "JUMPDEST"
    },
    "1704": {
      "op": "POP"
    },
    "1705": {
      "op": "SWAP8"
    },
    "1706": {
      "op": "SWAP7"
    },
    "1707": {
      "op": "POP"
    },
    "1708": {
      "op": "POP"
    },
    "1709": {
      "op": "POP"
    },
    "1710": {
      "op": "POP"
    },
    "1711": {
      "op": "POP"
    },
    "1712": {
      "op": "POP"
    },
    "1713": {
      "op": "POP"
    },
    "1714": {
      "jump": "o",
      "op": "JUMP"
    },
    "1715": {
      "op": "JUMPDEST"
    },
    "1716": {
      "op": "DUP1"
    },
    "1717": {
      "op": "MLOAD"
    },
    "1718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1722": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1724": {
      "op": "SHL"
    },
    "1725": {
      "op": "SUB"
    },
    "1726": {
      "op": "NOT"
    },
    "1727": {
      "op": "DUP2"
    },
    "1728": {
      "op": "AND"
    },
    "1729": {
      "op": "DUP2"
    },
    "1730": {
      "op": "EQ"
    },
    "1731": {
      "op": "PUSH2",
      "value": "0x238"
    },
    "1734": {
      "op": "JUMPI"
    },
    "1735": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1737": {
      "op": "DUP1"
    },
    "1738": {
      "op": "REVERT"
    },
    "1739": {
      "op": "JUMPDEST"
    },
    "1740": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1742": {
      "op": "DUP3"
    },
    "1743": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1745": {
      "op": "DUP4"
    },
    "1746": {
      "op": "ADD"
    },
    "1747": {
      "op": "SLT"
    },
    "1748": {
      "op": "PUSH2",
      "value": "0x6DB"
    },
    "1751": {
      "op": "JUMPI"
    },
    "1752": {
      "op": "DUP1"
    },
    "1753": {
      "op": "DUP2"
    },
    "1754": {
      "op": "REVERT"
    },
    "1755": {
      "op": "JUMPDEST"
    },
    "1756": {
      "op": "DUP2"
    },
    "1757": {
      "op": "CALLDATALOAD"
    },
    "1758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1762": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1764": {
      "op": "SHL"
    },
    "1765": {
      "op": "SUB"
    },
    "1766": {
      "op": "DUP2"
    },
    "1767": {
      "op": "GT"
    },
    "1768": {
      "op": "ISZERO"
    },
    "1769": {
      "op": "PUSH2",
      "value": "0x6EE"
    },
    "1772": {
      "op": "JUMPI"
    },
    "1773": {
      "op": "INVALID"
    },
    "1774": {
      "op": "JUMPDEST"
    },
    "1775": {
      "op": "PUSH2",
      "value": "0x701"
    },
    "1778": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1780": {
      "op": "DUP3"
    },
    "1781": {
      "op": "ADD"
    },
    "1782": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1784": {
      "op": "NOT"
    },
    "1785": {
      "op": "AND"
    },
    "1786": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1788": {
      "op": "ADD"
    },
    "1789": {
      "op": "PUSH2",
      "value": "0xB77"
    },
    "1792": {
      "jump": "i",
      "op": "JUMP"
    },
    "1793": {
      "op": "JUMPDEST"
    },
    "1794": {
      "op": "DUP2"
    },
    "1795": {
      "op": "DUP2"
    },
    "1796": {
      "op": "MSTORE"
    },
    "1797": {
      "op": "DUP5"
    },
    "1798": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1800": {
      "op": "DUP4"
    },
    "1801": {
      "op": "DUP7"
    },
    "1802": {
      "op": "ADD"
    },
    "1803": {
      "op": "ADD"
    },
    "1804": {
      "op": "GT"
    },
    "1805": {
      "op": "ISZERO"
    },
    "1806": {
      "op": "PUSH2",
      "value": "0x715"
    },
    "1809": {
      "op": "JUMPI"
    },
    "1810": {
      "op": "DUP3"
    },
    "1811": {
      "op": "DUP4"
    },
    "1812": {
      "op": "REVERT"
    },
    "1813": {
      "op": "JUMPDEST"
    },
    "1814": {
      "op": "DUP2"
    },
    "1815": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1817": {
      "op": "DUP6"
    },
    "1818": {
      "op": "ADD"
    },
    "1819": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1821": {
      "op": "DUP4"
    },
    "1822": {
      "op": "ADD"
    },
    "1823": {
      "op": "CALLDATACOPY"
    },
    "1824": {
      "op": "SWAP1"
    },
    "1825": {
      "op": "DUP2"
    },
    "1826": {
      "op": "ADD"
    },
    "1827": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1829": {
      "op": "ADD"
    },
    "1830": {
      "op": "SWAP2"
    },
    "1831": {
      "op": "SWAP1"
    },
    "1832": {
      "op": "SWAP2"
    },
    "1833": {
      "op": "MSTORE"
    },
    "1834": {
      "op": "SWAP3"
    },
    "1835": {
      "op": "SWAP2"
    },
    "1836": {
      "op": "POP"
    },
    "1837": {
      "op": "POP"
    },
    "1838": {
      "jump": "o",
      "op": "JUMP"
    },
    "1839": {
      "op": "JUMPDEST"
    },
    "1840": {
      "op": "DUP1"
    },
    "1841": {
      "op": "MLOAD"
    },
    "1842": {
      "op": "PUSH2",
      "value": "0x238"
    },
    "1845": {
      "op": "DUP2"
    },
    "1846": {
      "op": "PUSH2",
      "value": "0xBB2"
    },
    "1849": {
      "jump": "i",
      "op": "JUMP"
    },
    "1850": {
      "op": "JUMPDEST"
    },
    "1851": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1853": {
      "op": "DUP1"
    },
    "1854": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1856": {
      "op": "DUP4"
    },
    "1857": {
      "op": "DUP6"
    },
    "1858": {
      "op": "SUB"
    },
    "1859": {
      "op": "SLT"
    },
    "1860": {
      "op": "ISZERO"
    },
    "1861": {
      "op": "PUSH2",
      "value": "0x74C"
    },
    "1864": {
      "op": "JUMPI"
    },
    "1865": {
      "op": "DUP2"
    },
    "1866": {
      "op": "DUP3"
    },
    "1867": {
      "op": "REVERT"
    },
    "1868": {
      "op": "JUMPDEST"
    },
    "1869": {
      "op": "DUP3"
    },
    "1870": {
      "op": "CALLDATALOAD"
    },
    "1871": {
      "op": "PUSH2",
      "value": "0x757"
    },
    "1874": {
      "op": "DUP2"
    },
    "1875": {
      "op": "PUSH2",
      "value": "0xB9A"
    },
    "1878": {
      "jump": "i",
      "op": "JUMP"
    },
    "1879": {
      "op": "JUMPDEST"
    },
    "1880": {
      "op": "SWAP2"
    },
    "1881": {
      "op": "POP"
    },
    "1882": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1884": {
      "op": "DUP4"
    },
    "1885": {
      "op": "ADD"
    },
    "1886": {
      "op": "CALLDATALOAD"
    },
    "1887": {
      "op": "PUSH2",
      "value": "0x767"
    },
    "1890": {
      "op": "DUP2"
    },
    "1891": {
      "op": "PUSH2",
      "value": "0xBB2"
    },
    "1894": {
      "jump": "i",
      "op": "JUMP"
    },
    "1895": {
      "op": "JUMPDEST"
    },
    "1896": {
      "op": "DUP1"
    },
    "1897": {
      "op": "SWAP2"
    },
    "1898": {
      "op": "POP"
    },
    "1899": {
      "op": "POP"
    },
    "1900": {
      "op": "SWAP3"
    },
    "1901": {
      "op": "POP"
    },
    "1902": {
      "op": "SWAP3"
    },
    "1903": {
      "op": "SWAP1"
    },
    "1904": {
      "op": "POP"
    },
    "1905": {
      "jump": "o",
      "op": "JUMP"
    },
    "1906": {
      "op": "JUMPDEST"
    },
    "1907": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1909": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1911": {
      "op": "DUP3"
    },
    "1912": {
      "op": "DUP5"
    },
    "1913": {
      "op": "SUB"
    },
    "1914": {
      "op": "SLT"
    },
    "1915": {
      "op": "ISZERO"
    },
    "1916": {
      "op": "PUSH2",
      "value": "0x783"
    },
    "1919": {
      "op": "JUMPI"
    },
    "1920": {
      "op": "DUP1"
    },
    "1921": {
      "op": "DUP2"
    },
    "1922": {
      "op": "REVERT"
    },
    "1923": {
      "op": "JUMPDEST"
    },
    "1924": {
      "op": "DUP2"
    },
    "1925": {
      "op": "MLOAD"
    },
    "1926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1930": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1932": {
      "op": "SHL"
    },
    "1933": {
      "op": "SUB"
    },
    "1934": {
      "op": "DUP1"
    },
    "1935": {
      "op": "DUP3"
    },
    "1936": {
      "op": "GT"
    },
    "1937": {
      "op": "ISZERO"
    },
    "1938": {
      "op": "PUSH2",
      "value": "0x799"
    },
    "1941": {
      "op": "JUMPI"
    },
    "1942": {
      "op": "DUP3"
    },
    "1943": {
      "op": "DUP4"
    },
    "1944": {
      "op": "REVERT"
    },
    "1945": {
      "op": "JUMPDEST"
    },
    "1946": {
      "op": "DUP2"
    },
    "1947": {
      "op": "DUP5"
    },
    "1948": {
      "op": "ADD"
    },
    "1949": {
      "op": "SWAP2"
    },
    "1950": {
      "op": "POP"
    },
    "1951": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "1954": {
      "op": "DUP1"
    },
    "1955": {
      "op": "DUP4"
    },
    "1956": {
      "op": "DUP8"
    },
    "1957": {
      "op": "SUB"
    },
    "1958": {
      "op": "SLT"
    },
    "1959": {
      "op": "ISZERO"
    },
    "1960": {
      "op": "PUSH2",
      "value": "0x7AF"
    },
    "1963": {
      "op": "JUMPI"
    },
    "1964": {
      "op": "DUP4"
    },
    "1965": {
      "op": "DUP5"
    },
    "1966": {
      "op": "REVERT"
    },
    "1967": {
      "op": "JUMPDEST"
    },
    "1968": {
      "op": "PUSH2",
      "value": "0x7B8"
    },
    "1971": {
      "op": "DUP2"
    },
    "1972": {
      "op": "PUSH2",
      "value": "0xB77"
    },
    "1975": {
      "jump": "i",
      "op": "JUMP"
    },
    "1976": {
      "op": "JUMPDEST"
    },
    "1977": {
      "op": "SWAP1"
    },
    "1978": {
      "op": "POP"
    },
    "1979": {
      "op": "PUSH2",
      "value": "0x7C3"
    },
    "1982": {
      "op": "DUP4"
    },
    "1983": {
      "op": "PUSH2",
      "value": "0x72F"
    },
    "1986": {
      "jump": "i",
      "op": "JUMP"
    },
    "1987": {
      "op": "JUMPDEST"
    },
    "1988": {
      "op": "DUP2"
    },
    "1989": {
      "op": "MSTORE"
    },
    "1990": {
      "op": "PUSH2",
      "value": "0x7D1"
    },
    "1993": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1995": {
      "op": "DUP5"
    },
    "1996": {
      "op": "ADD"
    },
    "1997": {
      "op": "PUSH2",
      "value": "0x72F"
    },
    "2000": {
      "jump": "i",
      "op": "JUMP"
    },
    "2001": {
      "op": "JUMPDEST"
    },
    "2002": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2004": {
      "op": "DUP3"
    },
    "2005": {
      "op": "ADD"
    },
    "2006": {
      "op": "MSTORE"
    },
    "2007": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2009": {
      "op": "DUP4"
    },
    "2010": {
      "op": "ADD"
    },
    "2011": {
      "op": "MLOAD"
    },
    "2012": {
      "op": "DUP3"
    },
    "2013": {
      "op": "DUP2"
    },
    "2014": {
      "op": "GT"
    },
    "2015": {
      "op": "ISZERO"
    },
    "2016": {
      "op": "PUSH2",
      "value": "0x7E7"
    },
    "2019": {
      "op": "JUMPI"
    },
    "2020": {
      "op": "DUP5"
    },
    "2021": {
      "op": "DUP6"
    },
    "2022": {
      "op": "REVERT"
    },
    "2023": {
      "op": "JUMPDEST"
    },
    "2024": {
      "op": "PUSH2",
      "value": "0x7F3"
    },
    "2027": {
      "op": "DUP8"
    },
    "2028": {
      "op": "DUP3"
    },
    "2029": {
      "op": "DUP7"
    },
    "2030": {
      "op": "ADD"
    },
    "2031": {
      "op": "PUSH2",
      "value": "0x62F"
    },
    "2034": {
      "jump": "i",
      "op": "JUMP"
    },
    "2035": {
      "op": "JUMPDEST"
    },
    "2036": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2038": {
      "op": "DUP4"
    },
    "2039": {
      "op": "ADD"
    },
    "2040": {
      "op": "MSTORE"
    },
    "2041": {
      "op": "POP"
    },
    "2042": {
      "op": "PUSH2",
      "value": "0x805"
    },
    "2045": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2047": {
      "op": "DUP5"
    },
    "2048": {
      "op": "ADD"
    },
    "2049": {
      "op": "PUSH2",
      "value": "0x72F"
    },
    "2052": {
      "jump": "i",
      "op": "JUMP"
    },
    "2053": {
      "op": "JUMPDEST"
    },
    "2054": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2056": {
      "op": "DUP3"
    },
    "2057": {
      "op": "ADD"
    },
    "2058": {
      "op": "MSTORE"
    },
    "2059": {
      "op": "PUSH2",
      "value": "0x816"
    },
    "2062": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2064": {
      "op": "DUP5"
    },
    "2065": {
      "op": "ADD"
    },
    "2066": {
      "op": "PUSH2",
      "value": "0x72F"
    },
    "2069": {
      "jump": "i",
      "op": "JUMP"
    },
    "2070": {
      "op": "JUMPDEST"
    },
    "2071": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2073": {
      "op": "DUP3"
    },
    "2074": {
      "op": "ADD"
    },
    "2075": {
      "op": "MSTORE"
    },
    "2076": {
      "op": "PUSH2",
      "value": "0x827"
    },
    "2079": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2081": {
      "op": "DUP5"
    },
    "2082": {
      "op": "ADD"
    },
    "2083": {
      "op": "PUSH2",
      "value": "0x72F"
    },
    "2086": {
      "jump": "i",
      "op": "JUMP"
    },
    "2087": {
      "op": "JUMPDEST"
    },
    "2088": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2090": {
      "op": "DUP3"
    },
    "2091": {
      "op": "ADD"
    },
    "2092": {
      "op": "MSTORE"
    },
    "2093": {
      "op": "PUSH2",
      "value": "0x838"
    },
    "2096": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2098": {
      "op": "DUP5"
    },
    "2099": {
      "op": "ADD"
    },
    "2100": {
      "op": "PUSH2",
      "value": "0x72F"
    },
    "2103": {
      "jump": "i",
      "op": "JUMP"
    },
    "2104": {
      "op": "JUMPDEST"
    },
    "2105": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2107": {
      "op": "DUP3"
    },
    "2108": {
      "op": "ADD"
    },
    "2109": {
      "op": "MSTORE"
    },
    "2110": {
      "op": "PUSH2",
      "value": "0x849"
    },
    "2113": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2115": {
      "op": "DUP5"
    },
    "2116": {
      "op": "ADD"
    },
    "2117": {
      "op": "PUSH2",
      "value": "0x72F"
    },
    "2120": {
      "jump": "i",
      "op": "JUMP"
    },
    "2121": {
      "op": "JUMPDEST"
    },
    "2122": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2124": {
      "op": "DUP3"
    },
    "2125": {
      "op": "ADD"
    },
    "2126": {
      "op": "MSTORE"
    },
    "2127": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "2130": {
      "op": "SWAP2"
    },
    "2131": {
      "op": "POP"
    },
    "2132": {
      "op": "PUSH2",
      "value": "0x85E"
    },
    "2135": {
      "op": "DUP3"
    },
    "2136": {
      "op": "DUP5"
    },
    "2137": {
      "op": "ADD"
    },
    "2138": {
      "op": "PUSH2",
      "value": "0x624"
    },
    "2141": {
      "jump": "i",
      "op": "JUMP"
    },
    "2142": {
      "op": "JUMPDEST"
    },
    "2143": {
      "op": "DUP3"
    },
    "2144": {
      "op": "DUP3"
    },
    "2145": {
      "op": "ADD"
    },
    "2146": {
      "op": "MSTORE"
    },
    "2147": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "2150": {
      "op": "SWAP2"
    },
    "2151": {
      "op": "POP"
    },
    "2152": {
      "op": "PUSH2",
      "value": "0x872"
    },
    "2155": {
      "op": "DUP3"
    },
    "2156": {
      "op": "DUP5"
    },
    "2157": {
      "op": "ADD"
    },
    "2158": {
      "op": "PUSH2",
      "value": "0x624"
    },
    "2161": {
      "jump": "i",
      "op": "JUMP"
    },
    "2162": {
      "op": "JUMPDEST"
    },
    "2163": {
      "op": "DUP3"
    },
    "2164": {
      "op": "DUP3"
    },
    "2165": {
      "op": "ADD"
    },
    "2166": {
      "op": "MSTORE"
    },
    "2167": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "2170": {
      "op": "SWAP2"
    },
    "2171": {
      "op": "POP"
    },
    "2172": {
      "op": "PUSH2",
      "value": "0x886"
    },
    "2175": {
      "op": "DUP3"
    },
    "2176": {
      "op": "DUP5"
    },
    "2177": {
      "op": "ADD"
    },
    "2178": {
      "op": "PUSH2",
      "value": "0x6B3"
    },
    "2181": {
      "jump": "i",
      "op": "JUMP"
    },
    "2182": {
      "op": "JUMPDEST"
    },
    "2183": {
      "op": "DUP3"
    },
    "2184": {
      "op": "DUP3"
    },
    "2185": {
      "op": "ADD"
    },
    "2186": {
      "op": "MSTORE"
    },
    "2187": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "2190": {
      "op": "SWAP2"
    },
    "2191": {
      "op": "POP"
    },
    "2192": {
      "op": "PUSH2",
      "value": "0x89A"
    },
    "2195": {
      "op": "DUP3"
    },
    "2196": {
      "op": "DUP5"
    },
    "2197": {
      "op": "ADD"
    },
    "2198": {
      "op": "PUSH2",
      "value": "0x72F"
    },
    "2201": {
      "jump": "i",
      "op": "JUMP"
    },
    "2202": {
      "op": "JUMPDEST"
    },
    "2203": {
      "op": "SWAP2"
    },
    "2204": {
      "op": "DUP2"
    },
    "2205": {
      "op": "ADD"
    },
    "2206": {
      "op": "SWAP2"
    },
    "2207": {
      "op": "SWAP1"
    },
    "2208": {
      "op": "SWAP2"
    },
    "2209": {
      "op": "MSTORE"
    },
    "2210": {
      "op": "SWAP5"
    },
    "2211": {
      "op": "SWAP4"
    },
    "2212": {
      "op": "POP"
    },
    "2213": {
      "op": "POP"
    },
    "2214": {
      "op": "POP"
    },
    "2215": {
      "op": "POP"
    },
    "2216": {
      "jump": "o",
      "op": "JUMP"
    },
    "2217": {
      "op": "JUMPDEST"
    },
    "2218": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2220": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2222": {
      "op": "DUP3"
    },
    "2223": {
      "op": "DUP5"
    },
    "2224": {
      "op": "SUB"
    },
    "2225": {
      "op": "SLT"
    },
    "2226": {
      "op": "ISZERO"
    },
    "2227": {
      "op": "PUSH2",
      "value": "0x8BA"
    },
    "2230": {
      "op": "JUMPI"
    },
    "2231": {
      "op": "DUP1"
    },
    "2232": {
      "op": "DUP2"
    },
    "2233": {
      "op": "REVERT"
    },
    "2234": {
      "op": "JUMPDEST"
    },
    "2235": {
      "op": "DUP2"
    },
    "2236": {
      "op": "CALLDATALOAD"
    },
    "2237": {
      "op": "PUSH2",
      "value": "0x8C5"
    },
    "2240": {
      "op": "DUP2"
    },
    "2241": {
      "op": "PUSH2",
      "value": "0xBB2"
    },
    "2244": {
      "jump": "i",
      "op": "JUMP"
    },
    "2245": {
      "op": "JUMPDEST"
    },
    "2246": {
      "op": "SWAP4"
    },
    "2247": {
      "op": "SWAP3"
    },
    "2248": {
      "op": "POP"
    },
    "2249": {
      "op": "POP"
    },
    "2250": {
      "op": "POP"
    },
    "2251": {
      "jump": "o",
      "op": "JUMP"
    },
    "2252": {
      "op": "JUMPDEST"
    },
    "2253": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2255": {
      "op": "DUP1"
    },
    "2256": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2258": {
      "op": "DUP4"
    },
    "2259": {
      "op": "DUP6"
    },
    "2260": {
      "op": "SUB"
    },
    "2261": {
      "op": "SLT"
    },
    "2262": {
      "op": "ISZERO"
    },
    "2263": {
      "op": "PUSH2",
      "value": "0x8DE"
    },
    "2266": {
      "op": "JUMPI"
    },
    "2267": {
      "op": "DUP2"
    },
    "2268": {
      "op": "DUP3"
    },
    "2269": {
      "op": "REVERT"
    },
    "2270": {
      "op": "JUMPDEST"
    },
    "2271": {
      "op": "DUP3"
    },
    "2272": {
      "op": "CALLDATALOAD"
    },
    "2273": {
      "op": "PUSH2",
      "value": "0x8E9"
    },
    "2276": {
      "op": "DUP2"
    },
    "2277": {
      "op": "PUSH2",
      "value": "0xBB2"
    },
    "2280": {
      "jump": "i",
      "op": "JUMP"
    },
    "2281": {
      "op": "JUMPDEST"
    },
    "2282": {
      "op": "SWAP2"
    },
    "2283": {
      "op": "POP"
    },
    "2284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2286": {
      "op": "DUP4"
    },
    "2287": {
      "op": "ADD"
    },
    "2288": {
      "op": "CALLDATALOAD"
    },
    "2289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2295": {
      "op": "SHL"
    },
    "2296": {
      "op": "SUB"
    },
    "2297": {
      "op": "DUP2"
    },
    "2298": {
      "op": "GT"
    },
    "2299": {
      "op": "ISZERO"
    },
    "2300": {
      "op": "PUSH2",
      "value": "0x903"
    },
    "2303": {
      "op": "JUMPI"
    },
    "2304": {
      "op": "DUP2"
    },
    "2305": {
      "op": "DUP3"
    },
    "2306": {
      "op": "REVERT"
    },
    "2307": {
      "op": "JUMPDEST"
    },
    "2308": {
      "op": "PUSH2",
      "value": "0x90F"
    },
    "2311": {
      "op": "DUP6"
    },
    "2312": {
      "op": "DUP3"
    },
    "2313": {
      "op": "DUP7"
    },
    "2314": {
      "op": "ADD"
    },
    "2315": {
      "op": "PUSH2",
      "value": "0x6CB"
    },
    "2318": {
      "jump": "i",
      "op": "JUMP"
    },
    "2319": {
      "op": "JUMPDEST"
    },
    "2320": {
      "op": "SWAP2"
    },
    "2321": {
      "op": "POP"
    },
    "2322": {
      "op": "POP"
    },
    "2323": {
      "op": "SWAP3"
    },
    "2324": {
      "op": "POP"
    },
    "2325": {
      "op": "SWAP3"
    },
    "2326": {
      "op": "SWAP1"
    },
    "2327": {
      "op": "POP"
    },
    "2328": {
      "jump": "o",
      "op": "JUMP"
    },
    "2329": {
      "op": "JUMPDEST"
    },
    "2330": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2332": {
      "op": "DUP1"
    },
    "2333": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2335": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2337": {
      "op": "DUP5"
    },
    "2338": {
      "op": "DUP7"
    },
    "2339": {
      "op": "SUB"
    },
    "2340": {
      "op": "SLT"
    },
    "2341": {
      "op": "ISZERO"
    },
    "2342": {
      "op": "PUSH2",
      "value": "0x92D"
    },
    "2345": {
      "op": "JUMPI"
    },
    "2346": {
      "op": "DUP1"
    },
    "2347": {
      "op": "DUP2"
    },
    "2348": {
      "op": "REVERT"
    },
    "2349": {
      "op": "JUMPDEST"
    },
    "2350": {
      "op": "DUP4"
    },
    "2351": {
      "op": "CALLDATALOAD"
    },
    "2352": {
      "op": "PUSH2",
      "value": "0x938"
    },
    "2355": {
      "op": "DUP2"
    },
    "2356": {
      "op": "PUSH2",
      "value": "0xBB2"
    },
    "2359": {
      "jump": "i",
      "op": "JUMP"
    },
    "2360": {
      "op": "JUMPDEST"
    },
    "2361": {
      "op": "SWAP3"
    },
    "2362": {
      "op": "POP"
    },
    "2363": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2365": {
      "op": "DUP5"
    },
    "2366": {
      "op": "ADD"
    },
    "2367": {
      "op": "CALLDATALOAD"
    },
    "2368": {
      "op": "PUSH2",
      "value": "0x948"
    },
    "2371": {
      "op": "DUP2"
    },
    "2372": {
      "op": "PUSH2",
      "value": "0xBB2"
    },
    "2375": {
      "jump": "i",
      "op": "JUMP"
    },
    "2376": {
      "op": "JUMPDEST"
    },
    "2377": {
      "op": "SWAP2"
    },
    "2378": {
      "op": "POP"
    },
    "2379": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2381": {
      "op": "DUP5"
    },
    "2382": {
      "op": "ADD"
    },
    "2383": {
      "op": "CALLDATALOAD"
    },
    "2384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2388": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2390": {
      "op": "SHL"
    },
    "2391": {
      "op": "SUB"
    },
    "2392": {
      "op": "DUP2"
    },
    "2393": {
      "op": "GT"
    },
    "2394": {
      "op": "ISZERO"
    },
    "2395": {
      "op": "PUSH2",
      "value": "0x962"
    },
    "2398": {
      "op": "JUMPI"
    },
    "2399": {
      "op": "DUP2"
    },
    "2400": {
      "op": "DUP3"
    },
    "2401": {
      "op": "REVERT"
    },
    "2402": {
      "op": "JUMPDEST"
    },
    "2403": {
      "op": "PUSH2",
      "value": "0x96E"
    },
    "2406": {
      "op": "DUP7"
    },
    "2407": {
      "op": "DUP3"
    },
    "2408": {
      "op": "DUP8"
    },
    "2409": {
      "op": "ADD"
    },
    "2410": {
      "op": "PUSH2",
      "value": "0x6CB"
    },
    "2413": {
      "jump": "i",
      "op": "JUMP"
    },
    "2414": {
      "op": "JUMPDEST"
    },
    "2415": {
      "op": "SWAP2"
    },
    "2416": {
      "op": "POP"
    },
    "2417": {
      "op": "POP"
    },
    "2418": {
      "op": "SWAP3"
    },
    "2419": {
      "op": "POP"
    },
    "2420": {
      "op": "SWAP3"
    },
    "2421": {
      "op": "POP"
    },
    "2422": {
      "op": "SWAP3"
    },
    "2423": {
      "jump": "o",
      "op": "JUMP"
    },
    "2424": {
      "op": "JUMPDEST"
    },
    "2425": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2427": {
      "op": "DUP2"
    },
    "2428": {
      "op": "MLOAD"
    },
    "2429": {
      "op": "DUP1"
    },
    "2430": {
      "op": "DUP5"
    },
    "2431": {
      "op": "MSTORE"
    },
    "2432": {
      "op": "DUP2"
    },
    "2433": {
      "op": "JUMPDEST"
    },
    "2434": {
      "op": "DUP2"
    },
    "2435": {
      "op": "DUP2"
    },
    "2436": {
      "op": "LT"
    },
    "2437": {
      "op": "ISZERO"
    },
    "2438": {
      "op": "PUSH2",
      "value": "0x99D"
    },
    "2441": {
      "op": "JUMPI"
    },
    "2442": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2444": {
      "op": "DUP2"
    },
    "2445": {
      "op": "DUP6"
    },
    "2446": {
      "op": "ADD"
    },
    "2447": {
      "op": "DUP2"
    },
    "2448": {
      "op": "ADD"
    },
    "2449": {
      "op": "MLOAD"
    },
    "2450": {
      "op": "DUP7"
    },
    "2451": {
      "op": "DUP4"
    },
    "2452": {
      "op": "ADD"
    },
    "2453": {
      "op": "DUP3"
    },
    "2454": {
      "op": "ADD"
    },
    "2455": {
      "op": "MSTORE"
    },
    "2456": {
      "op": "ADD"
    },
    "2457": {
      "op": "PUSH2",
      "value": "0x981"
    },
    "2460": {
      "op": "JUMP"
    },
    "2461": {
      "op": "JUMPDEST"
    },
    "2462": {
      "op": "DUP2"
    },
    "2463": {
      "op": "DUP2"
    },
    "2464": {
      "op": "GT"
    },
    "2465": {
      "op": "ISZERO"
    },
    "2466": {
      "op": "PUSH2",
      "value": "0x9AE"
    },
    "2469": {
      "op": "JUMPI"
    },
    "2470": {
      "op": "DUP3"
    },
    "2471": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2473": {
      "op": "DUP4"
    },
    "2474": {
      "op": "DUP8"
    },
    "2475": {
      "op": "ADD"
    },
    "2476": {
      "op": "ADD"
    },
    "2477": {
      "op": "MSTORE"
    },
    "2478": {
      "op": "JUMPDEST"
    },
    "2479": {
      "op": "POP"
    },
    "2480": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2482": {
      "op": "ADD"
    },
    "2483": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2485": {
      "op": "NOT"
    },
    "2486": {
      "op": "AND"
    },
    "2487": {
      "op": "SWAP3"
    },
    "2488": {
      "op": "SWAP1"
    },
    "2489": {
      "op": "SWAP3"
    },
    "2490": {
      "op": "ADD"
    },
    "2491": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2493": {
      "op": "ADD"
    },
    "2494": {
      "op": "SWAP3"
    },
    "2495": {
      "op": "SWAP2"
    },
    "2496": {
      "op": "POP"
    },
    "2497": {
      "op": "POP"
    },
    "2498": {
      "jump": "o",
      "op": "JUMP"
    },
    "2499": {
      "op": "JUMPDEST"
    },
    "2500": {
      "op": "SWAP1"
    },
    "2501": {
      "op": "ISZERO"
    },
    "2502": {
      "op": "ISZERO"
    },
    "2503": {
      "op": "DUP2"
    },
    "2504": {
      "op": "MSTORE"
    },
    "2505": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2507": {
      "op": "ADD"
    },
    "2508": {
      "op": "SWAP1"
    },
    "2509": {
      "jump": "o",
      "op": "JUMP"
    },
    "2510": {
      "op": "JUMPDEST"
    },
    "2511": {
      "op": "SWAP1"
    },
    "2512": {
      "op": "DUP2"
    },
    "2513": {
      "op": "MSTORE"
    },
    "2514": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2516": {
      "op": "ADD"
    },
    "2517": {
      "op": "SWAP1"
    },
    "2518": {
      "jump": "o",
      "op": "JUMP"
    },
    "2519": {
      "op": "JUMPDEST"
    },
    "2520": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2522": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2524": {
      "op": "DUP3"
    },
    "2525": {
      "op": "MSTORE"
    },
    "2526": {
      "op": "PUSH2",
      "value": "0x8C5"
    },
    "2529": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2531": {
      "op": "DUP4"
    },
    "2532": {
      "op": "ADD"
    },
    "2533": {
      "op": "DUP5"
    },
    "2534": {
      "op": "PUSH2",
      "value": "0x978"
    },
    "2537": {
      "jump": "i",
      "op": "JUMP"
    },
    "2538": {
      "op": "JUMPDEST"
    },
    "2539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2543": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2545": {
      "op": "SHL"
    },
    "2546": {
      "op": "SUB"
    },
    "2547": {
      "op": "SWAP2"
    },
    "2548": {
      "op": "SWAP1"
    },
    "2549": {
      "op": "SWAP2"
    },
    "2550": {
      "op": "AND"
    },
    "2551": {
      "op": "DUP2"
    },
    "2552": {
      "op": "MSTORE"
    },
    "2553": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2555": {
      "op": "ADD"
    },
    "2556": {
      "op": "SWAP1"
    },
    "2557": {
      "jump": "o",
      "op": "JUMP"
    },
    "2558": {
      "op": "JUMPDEST"
    },
    "2559": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2561": {
      "op": "DUP1"
    },
    "2562": {
      "op": "DUP3"
    },
    "2563": {
      "op": "MSTORE"
    },
    "2564": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "2566": {
      "op": "SWAP1"
    },
    "2567": {
      "op": "DUP3"
    },
    "2568": {
      "op": "ADD"
    },
    "2569": {
      "op": "MSTORE"
    },
    "2570": {
      "op": "PUSH32",
      "value": "0x4B657942726F616463617374436F6E74726163743A20636F6E66696720697320"
    },
    "2603": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2605": {
      "op": "DUP3"
    },
    "2606": {
      "op": "ADD"
    },
    "2607": {
      "op": "MSTORE"
    },
    "2608": {
      "op": "PUSH8",
      "value": "0x696E616374697665"
    },
    "2617": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2619": {
      "op": "SHL"
    },
    "2620": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2622": {
      "op": "DUP3"
    },
    "2623": {
      "op": "ADD"
    },
    "2624": {
      "op": "MSTORE"
    },
    "2625": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2627": {
      "op": "ADD"
    },
    "2628": {
      "op": "SWAP1"
    },
    "2629": {
      "jump": "o",
      "op": "JUMP"
    },
    "2630": {
      "op": "JUMPDEST"
    },
    "2631": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2633": {
      "op": "DUP1"
    },
    "2634": {
      "op": "DUP3"
    },
    "2635": {
      "op": "MSTORE"
    },
    "2636": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "2638": {
      "op": "SWAP1"
    },
    "2639": {
      "op": "DUP3"
    },
    "2640": {
      "op": "ADD"
    },
    "2641": {
      "op": "MSTORE"
    },
    "2642": {
      "op": "PUSH32",
      "value": "0x4B657942726F616463617374436F6E74726163743A2073656E64657220697320"
    },
    "2675": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2677": {
      "op": "DUP3"
    },
    "2678": {
      "op": "ADD"
    },
    "2679": {
      "op": "MSTORE"
    },
    "2680": {
      "op": "PUSH10",
      "value": "0x3737BA1035B2BCB832B9"
    },
    "2691": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "2693": {
      "op": "SHL"
    },
    "2694": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2696": {
      "op": "DUP3"
    },
    "2697": {
      "op": "ADD"
    },
    "2698": {
      "op": "MSTORE"
    },
    "2699": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2701": {
      "op": "ADD"
    },
    "2702": {
      "op": "SWAP1"
    },
    "2703": {
      "jump": "o",
      "op": "JUMP"
    },
    "2704": {
      "op": "JUMPDEST"
    },
    "2705": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2707": {
      "op": "DUP1"
    },
    "2708": {
      "op": "DUP3"
    },
    "2709": {
      "op": "MSTORE"
    },
    "2710": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "2712": {
      "op": "SWAP1"
    },
    "2713": {
      "op": "DUP3"
    },
    "2714": {
      "op": "ADD"
    },
    "2715": {
      "op": "MSTORE"
    },
    "2716": {
      "op": "PUSH32",
      "value": "0x4B657942726F616463617374436F6E74726163743A206B657970657220696E64"
    },
    "2749": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2751": {
      "op": "DUP3"
    },
    "2752": {
      "op": "ADD"
    },
    "2753": {
      "op": "MSTORE"
    },
    "2754": {
      "op": "PUSH15",
      "value": "0x6578206F7574206F662072616E6765"
    },
    "2770": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "2772": {
      "op": "SHL"
    },
    "2773": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2775": {
      "op": "DUP3"
    },
    "2776": {
      "op": "ADD"
    },
    "2777": {
      "op": "MSTORE"
    },
    "2778": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2780": {
      "op": "ADD"
    },
    "2781": {
      "op": "SWAP1"
    },
    "2782": {
      "jump": "o",
      "op": "JUMP"
    },
    "2783": {
      "op": "JUMPDEST"
    },
    "2784": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2786": {
      "op": "DUP1"
    },
    "2787": {
      "op": "DUP3"
    },
    "2788": {
      "op": "MSTORE"
    },
    "2789": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "2791": {
      "op": "SWAP1"
    },
    "2792": {
      "op": "DUP3"
    },
    "2793": {
      "op": "ADD"
    },
    "2794": {
      "op": "MSTORE"
    },
    "2795": {
      "op": "PUSH32",
      "value": "0x4B657942726F616463617374436F6E74726163743A206B657970657220686173"
    },
    "2828": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2830": {
      "op": "DUP3"
    },
    "2831": {
      "op": "ADD"
    },
    "2832": {
      "op": "MSTORE"
    },
    "2833": {
      "op": "PUSH14",
      "value": "0x8185B1C9958591E481D9BDD1959"
    },
    "2848": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "2850": {
      "op": "SHL"
    },
    "2851": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2853": {
      "op": "DUP3"
    },
    "2854": {
      "op": "ADD"
    },
    "2855": {
      "op": "MSTORE"
    },
    "2856": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2858": {
      "op": "ADD"
    },
    "2859": {
      "op": "SWAP1"
    },
    "2860": {
      "jump": "o",
      "op": "JUMP"
    },
    "2861": {
      "op": "JUMPDEST"
    },
    "2862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2866": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2868": {
      "op": "SHL"
    },
    "2869": {
      "op": "SUB"
    },
    "2870": {
      "op": "SWAP2"
    },
    "2871": {
      "op": "SWAP1"
    },
    "2872": {
      "op": "SWAP2"
    },
    "2873": {
      "op": "AND"
    },
    "2874": {
      "op": "DUP2"
    },
    "2875": {
      "op": "MSTORE"
    },
    "2876": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2878": {
      "op": "ADD"
    },
    "2879": {
      "op": "SWAP1"
    },
    "2880": {
      "jump": "o",
      "op": "JUMP"
    },
    "2881": {
      "op": "JUMPDEST"
    },
    "2882": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2888": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2890": {
      "op": "SHL"
    },
    "2891": {
      "op": "SUB"
    },
    "2892": {
      "op": "DUP1"
    },
    "2893": {
      "op": "DUP7"
    },
    "2894": {
      "op": "AND"
    },
    "2895": {
      "op": "DUP4"
    },
    "2896": {
      "op": "MSTORE"
    },
    "2897": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2899": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2901": {
      "op": "DUP5"
    },
    "2902": {
      "op": "ADD"
    },
    "2903": {
      "op": "MSTORE"
    },
    "2904": {
      "op": "PUSH2",
      "value": "0xB64"
    },
    "2907": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2909": {
      "op": "DUP5"
    },
    "2910": {
      "op": "ADD"
    },
    "2911": {
      "op": "DUP7"
    },
    "2912": {
      "op": "PUSH2",
      "value": "0x978"
    },
    "2915": {
      "jump": "i",
      "op": "JUMP"
    },
    "2916": {
      "op": "JUMPDEST"
    },
    "2917": {
      "op": "SWAP2"
    },
    "2918": {
      "op": "POP"
    },
    "2919": {
      "op": "DUP1"
    },
    "2920": {
      "op": "DUP5"
    },
    "2921": {
      "op": "AND"
    },
    "2922": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2924": {
      "op": "DUP5"
    },
    "2925": {
      "op": "ADD"
    },
    "2926": {
      "op": "MSTORE"
    },
    "2927": {
      "op": "POP"
    },
    "2928": {
      "op": "SWAP5"
    },
    "2929": {
      "op": "SWAP4"
    },
    "2930": {
      "op": "POP"
    },
    "2931": {
      "op": "POP"
    },
    "2932": {
      "op": "POP"
    },
    "2933": {
      "op": "POP"
    },
    "2934": {
      "jump": "o",
      "op": "JUMP"
    },
    "2935": {
      "op": "JUMPDEST"
    },
    "2936": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2938": {
      "op": "MLOAD"
    },
    "2939": {
      "op": "DUP2"
    },
    "2940": {
      "op": "DUP2"
    },
    "2941": {
      "op": "ADD"
    },
    "2942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2946": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2948": {
      "op": "SHL"
    },
    "2949": {
      "op": "SUB"
    },
    "2950": {
      "op": "DUP2"
    },
    "2951": {
      "op": "GT"
    },
    "2952": {
      "op": "DUP3"
    },
    "2953": {
      "op": "DUP3"
    },
    "2954": {
      "op": "LT"
    },
    "2955": {
      "op": "OR"
    },
    "2956": {
      "op": "ISZERO"
    },
    "2957": {
      "op": "PUSH2",
      "value": "0xB92"
    },
    "2960": {
      "op": "JUMPI"
    },
    "2961": {
      "op": "INVALID"
    },
    "2962": {
      "op": "JUMPDEST"
    },
    "2963": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2965": {
      "op": "MSTORE"
    },
    "2966": {
      "op": "SWAP2"
    },
    "2967": {
      "op": "SWAP1"
    },
    "2968": {
      "op": "POP"
    },
    "2969": {
      "jump": "o",
      "op": "JUMP"
    },
    "2970": {
      "op": "JUMPDEST"
    },
    "2971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2975": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2977": {
      "op": "SHL"
    },
    "2978": {
      "op": "SUB"
    },
    "2979": {
      "op": "DUP2"
    },
    "2980": {
      "op": "AND"
    },
    "2981": {
      "op": "DUP2"
    },
    "2982": {
      "op": "EQ"
    },
    "2983": {
      "op": "PUSH2",
      "value": "0xBAF"
    },
    "2986": {
      "op": "JUMPI"
    },
    "2987": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2989": {
      "op": "DUP1"
    },
    "2990": {
      "op": "REVERT"
    },
    "2991": {
      "op": "JUMPDEST"
    },
    "2992": {
      "op": "POP"
    },
    "2993": {
      "jump": "o",
      "op": "JUMP"
    },
    "2994": {
      "op": "JUMPDEST"
    },
    "2995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2999": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3001": {
      "op": "SHL"
    },
    "3002": {
      "op": "SUB"
    },
    "3003": {
      "op": "DUP2"
    },
    "3004": {
      "op": "AND"
    },
    "3005": {
      "op": "DUP2"
    },
    "3006": {
      "op": "EQ"
    },
    "3007": {
      "op": "PUSH2",
      "value": "0xBAF"
    },
    "3010": {
      "op": "JUMPI"
    },
    "3011": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3013": {
      "op": "DUP1"
    },
    "3014": {
      "op": "REVERT"
    }
  },
  "sha1": "098591f6087cc75198468acfec76889b990fc006",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.7.0 <0.8.0;\npragma experimental ABIEncoderV2;\n\nimport {ConfigContract, BatchConfig} from \"./ConfigContract.sol\";\n\n/// @title A contract that keypers can use to vote on eon public keys. For each eon public key\n///     generated, the keypers are expected to submit one vote. The contract logs the number of\n///     votes so that users can only pick keys once they have reached votes from enough keypers\n///     and thus have confidence that the key is actually correct.\ncontract KeyBroadcastContract {\n    /// @notice The event emitted when a keyper voted on an eon key.\n    /// @param keyper The address of the keyper who sent the vote.\n    /// @param startBatchIndex The index of the first batch for which the key should be used.\n    /// @param key The eon public key for which the keyper voted.\n    /// @param numVotes The number of keypers (including this one) who have voted for the key so\n    ///     far.\n    event Voted(\n        address indexed keyper,\n        uint64 startBatchIndex,\n        bytes key,\n        uint64 numVotes\n    );\n\n    ConfigContract private _configContract;\n    mapping(uint64 => mapping(address => bool)) private _voted; // start batch index => keyper => voted or not\n    mapping(uint64 => mapping(bytes32 => uint64)) private _numVotes; // start batch index => key hash => number of votes\n    mapping(bytes32 => bytes) private _keys; // key hash => key\n\n    mapping(uint64 => bytes32) private _bestKeyHashes;\n    mapping(uint64 => uint64) private _bestKeyNumVotes;\n\n    constructor(address configContractAddress) {\n        _configContract = ConfigContract(configContractAddress);\n    }\n\n    /// @notice Submit a vote.\n    /// @notice Can only be called by keypers defined in the config responsible for\n    ///     `startBatchIndex`, and only once per `startBatchIndex`.\n    /// @param keyperIndex The index of the calling keyper in the batch config.\n    /// @param startBatchIndex The index of the first batch for which the key should be used.\n    /// @param key The eon public key to vote for.\n    function vote(\n        uint64 keyperIndex,\n        uint64 startBatchIndex,\n        bytes memory key\n    ) public {\n        BatchConfig memory config = _configContract.getConfig(startBatchIndex);\n        require(\n            config.batchSpan > 0,\n            \"KeyBroadcastContract: config is inactive\"\n        );\n\n        require(\n            keyperIndex < config.keypers.length,\n            \"KeyBroadcastContract: keyper index out of range\"\n        );\n        require(\n            msg.sender == config.keypers[keyperIndex],\n            \"KeyBroadcastContract: sender is not keyper\"\n        );\n\n        require(\n            !_voted[startBatchIndex][msg.sender],\n            \"KeyBroadcastContract: keyper has already voted\"\n        );\n\n        bytes32 keyHash = keccak256(key);\n        // store the key if it hasn't already\n        if (_keys[keyHash].length == 0 && key.length == 0) {\n            _keys[keyHash] = key;\n        }\n\n        // count vote\n        uint64 numVotes = _numVotes[startBatchIndex][keyHash] + 1;\n        _voted[startBatchIndex][msg.sender] = true;\n        _numVotes[startBatchIndex][keyHash] = numVotes;\n\n        if (numVotes > _bestKeyNumVotes[startBatchIndex]) {\n            _bestKeyNumVotes[startBatchIndex] = numVotes;\n            _bestKeyHashes[startBatchIndex] = keyHash;\n        }\n\n        emit Voted({\n            keyper: msg.sender,\n            startBatchIndex: startBatchIndex,\n            key: key,\n            numVotes: numVotes\n        });\n    }\n\n    function getConfigContract() public view returns (ConfigContract) {\n        return _configContract;\n    }\n\n    function hasVoted(address keyper, uint64 startBatchIndex)\n        public\n        view\n        returns (bool)\n    {\n        return _voted[startBatchIndex][keyper];\n    }\n\n    function getNumVotes(uint64 startBatchIndex, bytes memory key)\n        public\n        view\n        returns (uint64)\n    {\n        return _numVotes[startBatchIndex][keccak256(key)];\n    }\n\n    function getBestKeyHash(uint64 startBatchIndex)\n        public\n        view\n        returns (bytes32)\n    {\n        return _bestKeyHashes[startBatchIndex];\n    }\n\n    function getBestKey(uint64 startBatchIndex)\n        public\n        view\n        returns (bytes memory)\n    {\n        return _keys[_bestKeyHashes[startBatchIndex]];\n    }\n\n    function getBestKeyNumVotes(uint64 startBatchIndex)\n        public\n        view\n        returns (uint256)\n    {\n        return _bestKeyNumVotes[startBatchIndex];\n    }\n}\n",
  "sourceMap": "521:4032:5:-:0;;;1552:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1605:15;:55;;-1:-1:-1;;;;;;1605:55:5;-1:-1:-1;;;;;1605:55:5;;;;;;;;;;521:4032;;14:310:22;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:22;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:22:o;:::-;521:4032:5;;;;;;",
  "sourcePath": "contracts/KeyBroadcastContract.sol",
  "type": "contract"
}
