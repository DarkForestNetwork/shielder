{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "configContractAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "keyper",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "startBatchIndex",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "key",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "numVotes",
          "type": "uint64"
        }
      ],
      "name": "Voted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "startBatchIndex",
          "type": "uint64"
        }
      ],
      "name": "getBestKey",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "startBatchIndex",
          "type": "uint64"
        }
      ],
      "name": "getBestKeyNumVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getConfigContract",
      "outputs": [
        {
          "internalType": "contract ConfigContract",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "startBatchIndex",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "key",
          "type": "bytes"
        }
      ],
      "name": "getNumVotes",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "keyper",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "startBatchIndex",
          "type": "uint64"
        }
      ],
      "name": "hasVoted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "keyperIndex",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "startBatchIndex",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "key",
          "type": "bytes"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/ConfigContract.sol",
    "11": "openzeppelin/contracts/GSN/Context.sol",
    "12": "openzeppelin/contracts/access/Ownable.sol",
    "5": "contracts/KeyBroadcastContract.sol"
  },
  "ast": {
    "absolutePath": "contracts/KeyBroadcastContract.sol",
    "exportedSymbols": {
      "BatchConfig": [281],
      "ConfigContract": [903],
      "KeyBroadcastContract": [2254]
    },
    "id": 2255,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1995,
        "literals": ["solidity", ">=", "0.7", ".0", "<", "0.8", ".0"],
        "nodeType": "PragmaDirective",
        "src": "33:31:5"
      },
      {
        "id": 1996,
        "literals": ["experimental", "ABIEncoderV2"],
        "nodeType": "PragmaDirective",
        "src": "65:33:5"
      },
      {
        "absolutePath": "contracts/ConfigContract.sol",
        "file": "./ConfigContract.sol",
        "id": 1999,
        "nodeType": "ImportDirective",
        "scope": 2255,
        "sourceUnit": 904,
        "src": "100:65:5",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1997,
              "name": "ConfigContract",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "108:14:5",
              "typeDescriptions": {}
            }
          },
          {
            "foreign": {
              "id": 1998,
              "name": "BatchConfig",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "124:11:5",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2000,
          "nodeType": "StructuredDocumentation",
          "src": "167:354:5",
          "text": "@title A contract that keypers can use to vote on eon public keys. For each eon public key\n     generated, the keypers are expected to submit one vote. The contract logs the number of\n     votes so that users can only pick keys once they have reached votes from enough keypers\n     and thus have confidence that the key is actually correct."
        },
        "fullyImplemented": true,
        "id": 2254,
        "linearizedBaseContracts": [2254],
        "name": "KeyBroadcastContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 2001,
              "nodeType": "StructuredDocumentation",
              "src": "557:405:5",
              "text": "@notice The event emitted when a keyper voted on an eon key.\n @param keyper The address of the keyper who sent the vote.\n @param startBatchIndex The index of the first batch for which the key should be used.\n @param key The eon public key for which the keyper voted.\n @param numVotes The number of keypers (including this one) who have voted for the key so\n     far."
            },
            "id": 2011,
            "name": "Voted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2010,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2003,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "keyper",
                  "nodeType": "VariableDeclaration",
                  "scope": 2011,
                  "src": "988:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2002,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "988:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2005,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "startBatchIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 2011,
                  "src": "1020:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 2004,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1020:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2007,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 2011,
                  "src": "1052:9:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2006,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1052:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2009,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "numVotes",
                  "nodeType": "VariableDeclaration",
                  "scope": 2011,
                  "src": "1071:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 2008,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1071:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "978:114:5"
            },
            "src": "967:126:5"
          },
          {
            "constant": false,
            "id": 2013,
            "mutability": "mutable",
            "name": "_configContract",
            "nodeType": "VariableDeclaration",
            "scope": 2254,
            "src": "1099:38:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ConfigContract_$903",
              "typeString": "contract ConfigContract"
            },
            "typeName": {
              "id": 2012,
              "name": "ConfigContract",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 903,
              "src": "1099:14:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ConfigContract_$903",
                "typeString": "contract ConfigContract"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2019,
            "mutability": "mutable",
            "name": "_voted",
            "nodeType": "VariableDeclaration",
            "scope": 2254,
            "src": "1143:58:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint64_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(uint64 => mapping(address => bool))"
            },
            "typeName": {
              "id": 2018,
              "keyType": {
                "id": 2014,
                "name": "uint64",
                "nodeType": "ElementaryTypeName",
                "src": "1151:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                }
              },
              "nodeType": "Mapping",
              "src": "1143:43:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint64_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(uint64 => mapping(address => bool))"
              },
              "valueType": {
                "id": 2017,
                "keyType": {
                  "id": 2015,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1169:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1161:24:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 2016,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1180:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2025,
            "mutability": "mutable",
            "name": "_numVotes",
            "nodeType": "VariableDeclaration",
            "scope": 2254,
            "src": "1254:63:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint64_$_t_mapping$_t_bytes32_$_t_uint64_$_$",
              "typeString": "mapping(uint64 => mapping(bytes32 => uint64))"
            },
            "typeName": {
              "id": 2024,
              "keyType": {
                "id": 2020,
                "name": "uint64",
                "nodeType": "ElementaryTypeName",
                "src": "1262:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                }
              },
              "nodeType": "Mapping",
              "src": "1254:45:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint64_$_t_mapping$_t_bytes32_$_t_uint64_$_$",
                "typeString": "mapping(uint64 => mapping(bytes32 => uint64))"
              },
              "valueType": {
                "id": 2023,
                "keyType": {
                  "id": 2021,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1280:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "nodeType": "Mapping",
                "src": "1272:26:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint64_$",
                  "typeString": "mapping(bytes32 => uint64)"
                },
                "valueType": {
                  "id": 2022,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "1291:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2029,
            "mutability": "mutable",
            "name": "_keys",
            "nodeType": "VariableDeclaration",
            "scope": 2254,
            "src": "1375:39:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes_storage_$",
              "typeString": "mapping(bytes32 => bytes)"
            },
            "typeName": {
              "id": 2028,
              "keyType": {
                "id": 2026,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1383:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1375:25:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes_storage_$",
                "typeString": "mapping(bytes32 => bytes)"
              },
              "valueType": {
                "id": 2027,
                "name": "bytes",
                "nodeType": "ElementaryTypeName",
                "src": "1394:5:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2033,
            "mutability": "mutable",
            "name": "_bestKeyHashes",
            "nodeType": "VariableDeclaration",
            "scope": 2254,
            "src": "1440:49:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint64_$_t_bytes32_$",
              "typeString": "mapping(uint64 => bytes32)"
            },
            "typeName": {
              "id": 2032,
              "keyType": {
                "id": 2030,
                "name": "uint64",
                "nodeType": "ElementaryTypeName",
                "src": "1448:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                }
              },
              "nodeType": "Mapping",
              "src": "1440:26:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint64_$_t_bytes32_$",
                "typeString": "mapping(uint64 => bytes32)"
              },
              "valueType": {
                "id": 2031,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1458:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2037,
            "mutability": "mutable",
            "name": "_bestKeyNumVotes",
            "nodeType": "VariableDeclaration",
            "scope": 2254,
            "src": "1495:50:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint64_$_t_uint64_$",
              "typeString": "mapping(uint64 => uint64)"
            },
            "typeName": {
              "id": 2036,
              "keyType": {
                "id": 2034,
                "name": "uint64",
                "nodeType": "ElementaryTypeName",
                "src": "1503:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                }
              },
              "nodeType": "Mapping",
              "src": "1495:25:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint64_$_t_uint64_$",
                "typeString": "mapping(uint64 => uint64)"
              },
              "valueType": {
                "id": 2035,
                "name": "uint64",
                "nodeType": "ElementaryTypeName",
                "src": "1513:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2048,
              "nodeType": "Block",
              "src": "1595:72:5",
              "statements": [
                {
                  "expression": {
                    "id": 2046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2042,
                      "name": "_configContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2013,
                      "src": "1605:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ConfigContract_$903",
                        "typeString": "contract ConfigContract"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2044,
                          "name": "configContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2039,
                          "src": "1638:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2043,
                        "name": "ConfigContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 903,
                        "src": "1623:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ConfigContract_$903_$",
                          "typeString": "type(contract ConfigContract)"
                        }
                      },
                      "id": 2045,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1623:37:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ConfigContract_$903",
                        "typeString": "contract ConfigContract"
                      }
                    },
                    "src": "1605:55:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ConfigContract_$903",
                      "typeString": "contract ConfigContract"
                    }
                  },
                  "id": 2047,
                  "nodeType": "ExpressionStatement",
                  "src": "1605:55:5"
                }
              ]
            },
            "id": 2049,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2039,
                  "mutability": "mutable",
                  "name": "configContractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2049,
                  "src": "1564:29:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2038,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1564:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1563:31:5"
            },
            "returnParameters": {
              "id": 2041,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1595:0:5"
            },
            "scope": 2254,
            "src": "1552:115:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2184,
              "nodeType": "Block",
              "src": "2194:1365:5",
              "statements": [
                {
                  "assignments": [2060],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2060,
                      "mutability": "mutable",
                      "name": "config",
                      "nodeType": "VariableDeclaration",
                      "scope": 2184,
                      "src": "2204:25:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BatchConfig_$281_memory_ptr",
                        "typeString": "struct BatchConfig"
                      },
                      "typeName": {
                        "id": 2059,
                        "name": "BatchConfig",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 281,
                        "src": "2204:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BatchConfig_$281_storage_ptr",
                          "typeString": "struct BatchConfig"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2065,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2063,
                        "name": "startBatchIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2054,
                        "src": "2258:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "expression": {
                        "id": 2061,
                        "name": "_configContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2013,
                        "src": "2232:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ConfigContract_$903",
                          "typeString": "contract ConfigContract"
                        }
                      },
                      "id": 2062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getConfig",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 406,
                      "src": "2232:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint64_$returns$_t_struct$_BatchConfig_$281_memory_ptr_$",
                        "typeString": "function (uint64) view external returns (struct BatchConfig memory)"
                      }
                    },
                    "id": 2064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2232:42:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BatchConfig_$281_memory_ptr",
                      "typeString": "struct BatchConfig memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2204:70:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 2070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2067,
                            "name": "config",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2060,
                            "src": "2305:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BatchConfig_$281_memory_ptr",
                              "typeString": "struct BatchConfig memory"
                            }
                          },
                          "id": 2068,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "batchSpan",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 266,
                          "src": "2305:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2324:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2305:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4b657942726f616463617374436f6e74726163743a20636f6e66696720697320696e616374697665",
                        "id": 2071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2339:42:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5bd37009dc848abc0a0f5eca7c98618ebd36a6f4b202ff47fb223acba204fdc2",
                          "typeString": "literal_string \"KeyBroadcastContract: config is inactive\""
                        },
                        "value": "KeyBroadcastContract: config is inactive"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5bd37009dc848abc0a0f5eca7c98618ebd36a6f4b202ff47fb223acba204fdc2",
                          "typeString": "literal_string \"KeyBroadcastContract: config is inactive\""
                        }
                      ],
                      "id": 2066,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "2284:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2284:107:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2073,
                  "nodeType": "ExpressionStatement",
                  "src": "2284:107:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2075,
                          "name": "keyperIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2052,
                          "src": "2423:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 2076,
                              "name": "config",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2060,
                              "src": "2437:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BatchConfig_$281_memory_ptr",
                                "typeString": "struct BatchConfig memory"
                              }
                            },
                            "id": 2077,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "keypers",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 262,
                            "src": "2437:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 2078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2437:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2423:35:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4b657942726f616463617374436f6e74726163743a206b657970657220696e646578206f7574206f662072616e6765",
                        "id": 2080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2472:49:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b10ee3318143f87f4c7bf90e8335232a742ac0a1eefa875e8b99bb7e05c7b9ff",
                          "typeString": "literal_string \"KeyBroadcastContract: keyper index out of range\""
                        },
                        "value": "KeyBroadcastContract: keyper index out of range"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b10ee3318143f87f4c7bf90e8335232a742ac0a1eefa875e8b99bb7e05c7b9ff",
                          "typeString": "literal_string \"KeyBroadcastContract: keyper index out of range\""
                        }
                      ],
                      "id": 2074,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "2402:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2402:129:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2082,
                  "nodeType": "ExpressionStatement",
                  "src": "2402:129:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2084,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2562:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2562:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 2086,
                              "name": "config",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2060,
                              "src": "2576:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BatchConfig_$281_memory_ptr",
                                "typeString": "struct BatchConfig memory"
                              }
                            },
                            "id": 2087,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "keypers",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 262,
                            "src": "2576:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 2089,
                          "indexExpression": {
                            "id": 2088,
                            "name": "keyperIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2052,
                            "src": "2591:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2576:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2562:41:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4b657942726f616463617374436f6e74726163743a2073656e646572206973206e6f74206b6579706572",
                        "id": 2091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2617:44:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_62655d914d7be6fc6ce28c1362285d278f4640b225d1b63f20c16508c9c58f6b",
                          "typeString": "literal_string \"KeyBroadcastContract: sender is not keyper\""
                        },
                        "value": "KeyBroadcastContract: sender is not keyper"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_62655d914d7be6fc6ce28c1362285d278f4640b225d1b63f20c16508c9c58f6b",
                          "typeString": "literal_string \"KeyBroadcastContract: sender is not keyper\""
                        }
                      ],
                      "id": 2083,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "2541:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2541:130:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2093,
                  "nodeType": "ExpressionStatement",
                  "src": "2541:130:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2703:36:5",
                        "subExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2095,
                              "name": "_voted",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2019,
                              "src": "2704:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint64_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(uint64 => mapping(address => bool))"
                              }
                            },
                            "id": 2097,
                            "indexExpression": {
                              "id": 2096,
                              "name": "startBatchIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2054,
                              "src": "2711:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2704:23:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 2100,
                          "indexExpression": {
                            "expression": {
                              "id": 2098,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2728:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2099,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2728:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2704:35:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4b657942726f616463617374436f6e74726163743a206b65797065722068617320616c726561647920766f746564",
                        "id": 2102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2753:48:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f055cc4f0e51e560f2954ddcce0e3630267ccbac82963be9388374c3be26bb25",
                          "typeString": "literal_string \"KeyBroadcastContract: keyper has already voted\""
                        },
                        "value": "KeyBroadcastContract: keyper has already voted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f055cc4f0e51e560f2954ddcce0e3630267ccbac82963be9388374c3be26bb25",
                          "typeString": "literal_string \"KeyBroadcastContract: keyper has already voted\""
                        }
                      ],
                      "id": 2094,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "2682:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2682:129:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2104,
                  "nodeType": "ExpressionStatement",
                  "src": "2682:129:5"
                },
                {
                  "assignments": [2106],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2106,
                      "mutability": "mutable",
                      "name": "keyHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 2184,
                      "src": "2822:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2105,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2822:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2110,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2108,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2056,
                        "src": "2850:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2107,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2840:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2840:14:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2822:32:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 2111,
                            "name": "_keys",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2029,
                            "src": "2914:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes_storage_$",
                              "typeString": "mapping(bytes32 => bytes storage ref)"
                            }
                          },
                          "id": 2113,
                          "indexExpression": {
                            "id": 2112,
                            "name": "keyHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2106,
                            "src": "2920:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2914:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage",
                            "typeString": "bytes storage ref"
                          }
                        },
                        "id": 2114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2914:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 2115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2939:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2914:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 2117,
                          "name": "key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2056,
                          "src": "2944:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 2118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2944:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 2119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2958:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2944:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2914:45:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2129,
                  "nodeType": "IfStatement",
                  "src": "2910:96:5",
                  "trueBody": {
                    "id": 2128,
                    "nodeType": "Block",
                    "src": "2961:45:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 2126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2122,
                              "name": "_keys",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2029,
                              "src": "2975:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes_storage_$",
                                "typeString": "mapping(bytes32 => bytes storage ref)"
                              }
                            },
                            "id": 2124,
                            "indexExpression": {
                              "id": 2123,
                              "name": "keyHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2106,
                              "src": "2981:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2975:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2125,
                            "name": "key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2056,
                            "src": "2992:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "src": "2975:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage",
                            "typeString": "bytes storage ref"
                          }
                        },
                        "id": 2127,
                        "nodeType": "ExpressionStatement",
                        "src": "2975:20:5"
                      }
                    ]
                  }
                },
                {
                  "assignments": [2131],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2131,
                      "mutability": "mutable",
                      "name": "numVotes",
                      "nodeType": "VariableDeclaration",
                      "scope": 2184,
                      "src": "3038:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 2130,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "3038:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2139,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "id": 2138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2132,
                          "name": "_numVotes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2025,
                          "src": "3056:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint64_$_t_mapping$_t_bytes32_$_t_uint64_$_$",
                            "typeString": "mapping(uint64 => mapping(bytes32 => uint64))"
                          }
                        },
                        "id": 2134,
                        "indexExpression": {
                          "id": 2133,
                          "name": "startBatchIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2054,
                          "src": "3066:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3056:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint64_$",
                          "typeString": "mapping(bytes32 => uint64)"
                        }
                      },
                      "id": 2136,
                      "indexExpression": {
                        "id": 2135,
                        "name": "keyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2106,
                        "src": "3083:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3056:35:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 2137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3094:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3056:39:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3038:57:5"
                },
                {
                  "expression": {
                    "id": 2147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2140,
                          "name": "_voted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2019,
                          "src": "3105:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint64_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(uint64 => mapping(address => bool))"
                          }
                        },
                        "id": 2144,
                        "indexExpression": {
                          "id": 2141,
                          "name": "startBatchIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2054,
                          "src": "3112:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3105:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2145,
                      "indexExpression": {
                        "expression": {
                          "id": 2142,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3129:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3129:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3105:35:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3143:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3105:42:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2148,
                  "nodeType": "ExpressionStatement",
                  "src": "3105:42:5"
                },
                {
                  "expression": {
                    "id": 2155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2149,
                          "name": "_numVotes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2025,
                          "src": "3157:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint64_$_t_mapping$_t_bytes32_$_t_uint64_$_$",
                            "typeString": "mapping(uint64 => mapping(bytes32 => uint64))"
                          }
                        },
                        "id": 2152,
                        "indexExpression": {
                          "id": 2150,
                          "name": "startBatchIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2054,
                          "src": "3167:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3157:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint64_$",
                          "typeString": "mapping(bytes32 => uint64)"
                        }
                      },
                      "id": 2153,
                      "indexExpression": {
                        "id": 2151,
                        "name": "keyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2106,
                        "src": "3184:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3157:35:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2154,
                      "name": "numVotes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2131,
                      "src": "3195:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "3157:46:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 2156,
                  "nodeType": "ExpressionStatement",
                  "src": "3157:46:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "id": 2161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2157,
                      "name": "numVotes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2131,
                      "src": "3218:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 2158,
                        "name": "_bestKeyNumVotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2037,
                        "src": "3229:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint64_$_t_uint64_$",
                          "typeString": "mapping(uint64 => uint64)"
                        }
                      },
                      "id": 2160,
                      "indexExpression": {
                        "id": 2159,
                        "name": "startBatchIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2054,
                        "src": "3246:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3229:33:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "3218:44:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2175,
                  "nodeType": "IfStatement",
                  "src": "3214:174:5",
                  "trueBody": {
                    "id": 2174,
                    "nodeType": "Block",
                    "src": "3264:124:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 2166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2162,
                              "name": "_bestKeyNumVotes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2037,
                              "src": "3278:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint64_$_t_uint64_$",
                                "typeString": "mapping(uint64 => uint64)"
                              }
                            },
                            "id": 2164,
                            "indexExpression": {
                              "id": 2163,
                              "name": "startBatchIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2054,
                              "src": "3295:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3278:33:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2165,
                            "name": "numVotes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2131,
                            "src": "3314:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "3278:44:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 2167,
                        "nodeType": "ExpressionStatement",
                        "src": "3278:44:5"
                      },
                      {
                        "expression": {
                          "id": 2172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2168,
                              "name": "_bestKeyHashes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2033,
                              "src": "3336:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint64_$_t_bytes32_$",
                                "typeString": "mapping(uint64 => bytes32)"
                              }
                            },
                            "id": 2170,
                            "indexExpression": {
                              "id": 2169,
                              "name": "startBatchIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2054,
                              "src": "3351:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3336:31:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2171,
                            "name": "keyHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2106,
                            "src": "3370:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "3336:41:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 2173,
                        "nodeType": "ExpressionStatement",
                        "src": "3336:41:5"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2177,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3431:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3431:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 2179,
                        "name": "startBatchIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2054,
                        "src": "3472:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 2180,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2056,
                        "src": "3506:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 2181,
                        "name": "numVotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2131,
                        "src": "3533:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 2176,
                      "name": "Voted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2011,
                      "src": "3403:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$_t_uint64_$returns$__$",
                        "typeString": "function (address,uint64,bytes memory,uint64)"
                      }
                    },
                    "id": 2182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": ["keyper", "startBatchIndex", "key", "numVotes"],
                    "nodeType": "FunctionCall",
                    "src": "3403:149:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2183,
                  "nodeType": "EmitStatement",
                  "src": "3398:154:5"
                }
              ]
            },
            "documentation": {
              "id": 2050,
              "nodeType": "StructuredDocumentation",
              "src": "1673:403:5",
              "text": "@notice Submit a vote.\n @notice Can only be called by keypers defined in the config responsible for\n     `startBatchIndex`, and only once per `startBatchIndex`.\n @param keyperIndex The index of the calling keyper in the batch config.\n @param startBatchIndex The index of the first batch for which the key should be used.\n @param key The eon public key to vote for."
            },
            "functionSelector": "6b32c795",
            "id": 2185,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2052,
                  "mutability": "mutable",
                  "name": "keyperIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 2185,
                  "src": "2104:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 2051,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2104:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2054,
                  "mutability": "mutable",
                  "name": "startBatchIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 2185,
                  "src": "2132:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 2053,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2132:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2056,
                  "mutability": "mutable",
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 2185,
                  "src": "2164:16:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2055,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2164:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2094:92:5"
            },
            "returnParameters": {
              "id": 2058,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2194:0:5"
            },
            "scope": 2254,
            "src": "2081:1478:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2192,
              "nodeType": "Block",
              "src": "3631:39:5",
              "statements": [
                {
                  "expression": {
                    "id": 2190,
                    "name": "_configContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2013,
                    "src": "3648:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ConfigContract_$903",
                      "typeString": "contract ConfigContract"
                    }
                  },
                  "functionReturnParameters": 2189,
                  "id": 2191,
                  "nodeType": "Return",
                  "src": "3641:22:5"
                }
              ]
            },
            "functionSelector": "0e1c3a4a",
            "id": 2193,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getConfigContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3591:2:5"
            },
            "returnParameters": {
              "id": 2189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2188,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2193,
                  "src": "3615:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ConfigContract_$903",
                    "typeString": "contract ConfigContract"
                  },
                  "typeName": {
                    "id": 2187,
                    "name": "ConfigContract",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 903,
                    "src": "3615:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ConfigContract_$903",
                      "typeString": "contract ConfigContract"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3614:16:5"
            },
            "scope": 2254,
            "src": "3565:105:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2208,
              "nodeType": "Block",
              "src": "3789:55:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 2202,
                        "name": "_voted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2019,
                        "src": "3806:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint64_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(uint64 => mapping(address => bool))"
                        }
                      },
                      "id": 2204,
                      "indexExpression": {
                        "id": 2203,
                        "name": "startBatchIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2197,
                        "src": "3813:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3806:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 2206,
                    "indexExpression": {
                      "id": 2205,
                      "name": "keyper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2195,
                      "src": "3830:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3806:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2201,
                  "id": 2207,
                  "nodeType": "Return",
                  "src": "3799:38:5"
                }
              ]
            },
            "functionSelector": "cf1d7a0a",
            "id": 2209,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hasVoted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2195,
                  "mutability": "mutable",
                  "name": "keyper",
                  "nodeType": "VariableDeclaration",
                  "scope": 2209,
                  "src": "3694:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2194,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3694:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2197,
                  "mutability": "mutable",
                  "name": "startBatchIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 2209,
                  "src": "3710:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 2196,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3710:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3693:40:5"
            },
            "returnParameters": {
              "id": 2201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2200,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2209,
                  "src": "3779:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2199,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3779:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3778:6:5"
            },
            "scope": 2254,
            "src": "3676:168:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2226,
              "nodeType": "Block",
              "src": "3970:66:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 2218,
                        "name": "_numVotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2025,
                        "src": "3987:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint64_$_t_mapping$_t_bytes32_$_t_uint64_$_$",
                          "typeString": "mapping(uint64 => mapping(bytes32 => uint64))"
                        }
                      },
                      "id": 2220,
                      "indexExpression": {
                        "id": 2219,
                        "name": "startBatchIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2211,
                        "src": "3997:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3987:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint64_$",
                        "typeString": "mapping(bytes32 => uint64)"
                      }
                    },
                    "id": 2224,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 2222,
                          "name": "key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2213,
                          "src": "4024:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 2221,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "4014:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 2223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4014:14:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3987:42:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "functionReturnParameters": 2217,
                  "id": 2225,
                  "nodeType": "Return",
                  "src": "3980:49:5"
                }
              ]
            },
            "functionSelector": "1845bf5c",
            "id": 2227,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNumVotes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2211,
                  "mutability": "mutable",
                  "name": "startBatchIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 2227,
                  "src": "3871:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 2210,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3871:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2213,
                  "mutability": "mutable",
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 2227,
                  "src": "3895:16:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2212,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3895:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3870:42:5"
            },
            "returnParameters": {
              "id": 2217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2216,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2227,
                  "src": "3958:6:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 2215,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3958:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3957:8:5"
            },
            "scope": 2254,
            "src": "3850:186:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2240,
              "nodeType": "Block",
              "src": "4121:62:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2234,
                      "name": "_keys",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2029,
                      "src": "4138:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes_storage_$",
                        "typeString": "mapping(bytes32 => bytes storage ref)"
                      }
                    },
                    "id": 2238,
                    "indexExpression": {
                      "baseExpression": {
                        "id": 2235,
                        "name": "_bestKeyHashes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2033,
                        "src": "4144:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint64_$_t_bytes32_$",
                          "typeString": "mapping(uint64 => bytes32)"
                        }
                      },
                      "id": 2237,
                      "indexExpression": {
                        "id": 2236,
                        "name": "startBatchIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2229,
                        "src": "4159:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4144:31:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4138:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "functionReturnParameters": 2233,
                  "id": 2239,
                  "nodeType": "Return",
                  "src": "4131:45:5"
                }
              ]
            },
            "functionSelector": "2553600e",
            "id": 2241,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBestKey",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2229,
                  "mutability": "mutable",
                  "name": "startBatchIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 2241,
                  "src": "4062:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 2228,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "4062:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4061:24:5"
            },
            "returnParameters": {
              "id": 2233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2232,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2241,
                  "src": "4107:12:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2231,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4107:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4106:14:5"
            },
            "scope": 2254,
            "src": "4042:141:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2252,
              "nodeType": "Block",
              "src": "4271:57:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2248,
                      "name": "_bestKeyNumVotes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2037,
                      "src": "4288:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint64_$_t_uint64_$",
                        "typeString": "mapping(uint64 => uint64)"
                      }
                    },
                    "id": 2250,
                    "indexExpression": {
                      "id": 2249,
                      "name": "startBatchIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2243,
                      "src": "4305:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4288:33:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "functionReturnParameters": 2247,
                  "id": 2251,
                  "nodeType": "Return",
                  "src": "4281:40:5"
                }
              ]
            },
            "functionSelector": "41ecda09",
            "id": 2253,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBestKeyNumVotes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2243,
                  "mutability": "mutable",
                  "name": "startBatchIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 2253,
                  "src": "4217:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 2242,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "4217:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4216:24:5"
            },
            "returnParameters": {
              "id": 2247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2246,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2253,
                  "src": "4262:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2245,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4262:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4261:9:5"
            },
            "scope": 2254,
            "src": "4189:139:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2255,
        "src": "521:3809:5"
      }
    ],
    "src": "33:4298:5"
  },
  "bytecode": "608060405234801561001057600080fd5b50604051610c45380380610c4583398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b610bb4806100916000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630e1c3a4a146100675780631845bf5c146100855780632553600e146100a557806341ecda09146100c55780636b32c795146100e5578063cf1d7a0a146100fa575b600080fd5b61006f61011a565b60405161007c9190610998565b60405180910390f35b610098610093366004610883565b610129565b60405161007c9190610ae4565b6100b86100b3366004610860565b610159565b60405161007c9190610985565b6100d86100d3366004610860565b61020f565b60405161007c9190610adb565b6100f86100f33660046108d0565b61022d565b005b61010d6101083660046106f1565b610507565b60405161007c919061097a565b6000546001600160a01b031690565b6001600160401b039182166000908152600260209081526040808320845194830194909420835292905220541690565b6001600160401b0381166000908152600460209081526040808320548352600382529182902080548351601f60026000196101006001861615020190931692909204918201849004840281018401909452808452606093928301828280156102025780601f106101d757610100808354040283529160200191610202565b820191906000526020600020905b8154815290600101906020018083116101e557829003601f168201915b505050505090505b919050565b6001600160401b039081166000908152600560205260409020541690565b6000805460405163700465b160e11b81526001600160a01b039091169063e008cb629061025e908690600401610ae4565b60006040518083038186803b15801561027657600080fd5b505afa15801561028a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102b29190810190610729565b9050600081608001516001600160401b0316116102ea5760405162461bcd60e51b81526004016102e1906109ac565b60405180910390fd5b806040015151846001600160401b0316106103175760405162461bcd60e51b81526004016102e190610a3e565b8060400151846001600160401b03168151811061033057fe5b60200260200101516001600160a01b0316336001600160a01b0316146103685760405162461bcd60e51b81526004016102e1906109f4565b6001600160401b038316600090815260016020908152604080832033845290915290205460ff16156103ac5760405162461bcd60e51b81526004016102e190610a8d565b815160208084019190912060008181526003909252604090912054600260001961010060018416150201909116041580156103e657508251155b1561040c576000818152600360209081526040909120845161040a9286019061053a565b505b6001600160401b0384811660008181526002602090815260408083208684528252808320805485855260018085528386203387528552838620805460ff191682179055825467ffffffffffffffff19169188160180881691821790925594845260059092529091205490921610156104ba576001600160401b038581166000908152600560209081526040808320805467ffffffffffffffff19169486169490941790935560049052208290555b336001600160a01b03167f305124b6ec831bb4150eb1ddbd4e8cc4b95687b9a6258b110fd0e9865914b0bf8686846040516104f793929190610af8565b60405180910390a2505050505050565b6001600160401b031660009081526001602090815260408083206001600160a01b03949094168352929052205460ff1690565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928261057057600085556105b6565b82601f1061058957805160ff19168380011785556105b6565b828001600101855582156105b6579182015b828111156105b657825182559160200191906001019061059b565b506105c29291506105c6565b5090565b5b808211156105c257600081556001016105c7565b805161020a81610b51565b600082601f8301126105f6578081fd5b815160206001600160401b0382111561060b57fe5b808202610619828201610b2e565b838152828101908684018388018501891015610633578687fd5b8693505b8584101561065e57805161064a81610b51565b835260019390930192918401918401610637565b50979650505050505050565b80516001600160e01b03198116811461020a57600080fd5b600082601f830112610692578081fd5b81356001600160401b038111156106a557fe5b6106b8601f8201601f1916602001610b2e565b8181528460208386010111156106cc578283fd5b816020850160208301379081016020019190915292915050565b805161020a81610b69565b60008060408385031215610703578182fd5b823561070e81610b51565b9150602083013561071e81610b69565b809150509250929050565b60006020828403121561073a578081fd5b81516001600160401b0380821115610750578283fd5b8184019150610180808387031215610766578384fd5b61076f81610b2e565b905061077a836106e6565b8152610788602084016106e6565b602082015260408301518281111561079e578485fd5b6107aa878286016105e6565b6040830152506107bc606084016106e6565b60608201526107cd608084016106e6565b60808201526107de60a084016106e6565b60a08201526107ef60c084016106e6565b60c082015261080060e084016106e6565b60e082015261010091506108158284016105db565b8282015261012091506108298284016105db565b82820152610140915061083d82840161066a565b8282015261016091506108518284016106e6565b91810191909152949350505050565b600060208284031215610871578081fd5b813561087c81610b69565b9392505050565b60008060408385031215610895578182fd5b82356108a081610b69565b915060208301356001600160401b038111156108ba578182fd5b6108c685828601610682565b9150509250929050565b6000806000606084860312156108e4578081fd5b83356108ef81610b69565b925060208401356108ff81610b69565b915060408401356001600160401b03811115610919578182fd5b61092586828701610682565b9150509250925092565b60008151808452815b8181101561095457602081850181015186830182015201610938565b818111156109655782602083870101525b50601f01601f19169290920160200192915050565b901515815260200190565b60006020825261087c602083018461092f565b6001600160a01b0391909116815260200190565b60208082526028908201527f4b657942726f616463617374436f6e74726163743a20636f6e66696720697320604082015267696e61637469766560c01b606082015260800190565b6020808252602a908201527f4b657942726f616463617374436f6e74726163743a2073656e646572206973206040820152693737ba1035b2bcb832b960b11b606082015260800190565b6020808252602f908201527f4b657942726f616463617374436f6e74726163743a206b657970657220696e6460408201526e6578206f7574206f662072616e676560881b606082015260800190565b6020808252602e908201527f4b657942726f616463617374436f6e74726163743a206b65797065722068617360408201526d08185b1c9958591e481d9bdd195960921b606082015260800190565b90815260200190565b6001600160401b0391909116815260200190565b60006001600160401b03808616835260606020840152610b1b606084018661092f565b9150808416604084015250949350505050565b6040518181016001600160401b0381118282101715610b4957fe5b604052919050565b6001600160a01b0381168114610b6657600080fd5b50565b6001600160401b0381168114610b6657600080fdfea264697066735822122091bcfcf1bbbeefc02e35083aee87b77f89114eb432675de00c85821ab05d5fb264736f6c63430007060033",
  "bytecodeSha1": "bb31dad50dd125001d4aa7cfa69e6de18349a176",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.7.6+commit.7338295f"
  },
  "contractName": "KeyBroadcastContract",
  "coverageMap": {
    "branches": {
      "1": {},
      "11": {},
      "12": {},
      "5": {
        "KeyBroadcastContract.vote": {
          "15": [2305, 2325, true],
          "16": [2423, 2458, true],
          "17": [2562, 2603, true],
          "18": [2703, 2739, true],
          "19": [2914, 2940, false],
          "20": [2944, 2959, false]
        }
      }
    },
    "statements": {
      "1": {},
      "11": {},
      "12": {},
      "5": {
        "KeyBroadcastContract.getBestKey": {
          "2": [4131, 4176]
        },
        "KeyBroadcastContract.getBestKeyNumVotes": {
          "3": [4281, 4321]
        },
        "KeyBroadcastContract.getConfigContract": {
          "0": [3641, 3663]
        },
        "KeyBroadcastContract.getNumVotes": {
          "1": [3980, 4029]
        },
        "KeyBroadcastContract.hasVoted": {
          "14": [3799, 3837]
        },
        "KeyBroadcastContract.vote": {
          "4": [2284, 2391],
          "5": [2402, 2531],
          "6": [2541, 2671],
          "7": [2682, 2811],
          "8": [2975, 2995],
          "9": [3105, 3147],
          "10": [3157, 3203],
          "11": [3278, 3322],
          "12": [3336, 3377],
          "13": [3398, 3552]
        }
      }
    }
  },
  "dependencies": ["ConfigContract", "Context", "Ownable"],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100625760003560e01c80630e1c3a4a146100675780631845bf5c146100855780632553600e146100a557806341ecda09146100c55780636b32c795146100e5578063cf1d7a0a146100fa575b600080fd5b61006f61011a565b60405161007c9190610998565b60405180910390f35b610098610093366004610883565b610129565b60405161007c9190610ae4565b6100b86100b3366004610860565b610159565b60405161007c9190610985565b6100d86100d3366004610860565b61020f565b60405161007c9190610adb565b6100f86100f33660046108d0565b61022d565b005b61010d6101083660046106f1565b610507565b60405161007c919061097a565b6000546001600160a01b031690565b6001600160401b039182166000908152600260209081526040808320845194830194909420835292905220541690565b6001600160401b0381166000908152600460209081526040808320548352600382529182902080548351601f60026000196101006001861615020190931692909204918201849004840281018401909452808452606093928301828280156102025780601f106101d757610100808354040283529160200191610202565b820191906000526020600020905b8154815290600101906020018083116101e557829003601f168201915b505050505090505b919050565b6001600160401b039081166000908152600560205260409020541690565b6000805460405163700465b160e11b81526001600160a01b039091169063e008cb629061025e908690600401610ae4565b60006040518083038186803b15801561027657600080fd5b505afa15801561028a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102b29190810190610729565b9050600081608001516001600160401b0316116102ea5760405162461bcd60e51b81526004016102e1906109ac565b60405180910390fd5b806040015151846001600160401b0316106103175760405162461bcd60e51b81526004016102e190610a3e565b8060400151846001600160401b03168151811061033057fe5b60200260200101516001600160a01b0316336001600160a01b0316146103685760405162461bcd60e51b81526004016102e1906109f4565b6001600160401b038316600090815260016020908152604080832033845290915290205460ff16156103ac5760405162461bcd60e51b81526004016102e190610a8d565b815160208084019190912060008181526003909252604090912054600260001961010060018416150201909116041580156103e657508251155b1561040c576000818152600360209081526040909120845161040a9286019061053a565b505b6001600160401b0384811660008181526002602090815260408083208684528252808320805485855260018085528386203387528552838620805460ff191682179055825467ffffffffffffffff19169188160180881691821790925594845260059092529091205490921610156104ba576001600160401b038581166000908152600560209081526040808320805467ffffffffffffffff19169486169490941790935560049052208290555b336001600160a01b03167f305124b6ec831bb4150eb1ddbd4e8cc4b95687b9a6258b110fd0e9865914b0bf8686846040516104f793929190610af8565b60405180910390a2505050505050565b6001600160401b031660009081526001602090815260408083206001600160a01b03949094168352929052205460ff1690565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928261057057600085556105b6565b82601f1061058957805160ff19168380011785556105b6565b828001600101855582156105b6579182015b828111156105b657825182559160200191906001019061059b565b506105c29291506105c6565b5090565b5b808211156105c257600081556001016105c7565b805161020a81610b51565b600082601f8301126105f6578081fd5b815160206001600160401b0382111561060b57fe5b808202610619828201610b2e565b838152828101908684018388018501891015610633578687fd5b8693505b8584101561065e57805161064a81610b51565b835260019390930192918401918401610637565b50979650505050505050565b80516001600160e01b03198116811461020a57600080fd5b600082601f830112610692578081fd5b81356001600160401b038111156106a557fe5b6106b8601f8201601f1916602001610b2e565b8181528460208386010111156106cc578283fd5b816020850160208301379081016020019190915292915050565b805161020a81610b69565b60008060408385031215610703578182fd5b823561070e81610b51565b9150602083013561071e81610b69565b809150509250929050565b60006020828403121561073a578081fd5b81516001600160401b0380821115610750578283fd5b8184019150610180808387031215610766578384fd5b61076f81610b2e565b905061077a836106e6565b8152610788602084016106e6565b602082015260408301518281111561079e578485fd5b6107aa878286016105e6565b6040830152506107bc606084016106e6565b60608201526107cd608084016106e6565b60808201526107de60a084016106e6565b60a08201526107ef60c084016106e6565b60c082015261080060e084016106e6565b60e082015261010091506108158284016105db565b8282015261012091506108298284016105db565b82820152610140915061083d82840161066a565b8282015261016091506108518284016106e6565b91810191909152949350505050565b600060208284031215610871578081fd5b813561087c81610b69565b9392505050565b60008060408385031215610895578182fd5b82356108a081610b69565b915060208301356001600160401b038111156108ba578182fd5b6108c685828601610682565b9150509250929050565b6000806000606084860312156108e4578081fd5b83356108ef81610b69565b925060208401356108ff81610b69565b915060408401356001600160401b03811115610919578182fd5b61092586828701610682565b9150509250925092565b60008151808452815b8181101561095457602081850181015186830182015201610938565b818111156109655782602083870101525b50601f01601f19169290920160200192915050565b901515815260200190565b60006020825261087c602083018461092f565b6001600160a01b0391909116815260200190565b60208082526028908201527f4b657942726f616463617374436f6e74726163743a20636f6e66696720697320604082015267696e61637469766560c01b606082015260800190565b6020808252602a908201527f4b657942726f616463617374436f6e74726163743a2073656e646572206973206040820152693737ba1035b2bcb832b960b11b606082015260800190565b6020808252602f908201527f4b657942726f616463617374436f6e74726163743a206b657970657220696e6460408201526e6578206f7574206f662072616e676560881b606082015260800190565b6020808252602e908201527f4b657942726f616463617374436f6e74726163743a206b65797065722068617360408201526d08185b1c9958591e481d9bdd195960921b606082015260800190565b90815260200190565b6001600160401b0391909116815260200190565b60006001600160401b03808616835260606020840152610b1b606084018661092f565b9150808416604084015250949350505050565b6040518181016001600160401b0381118282101715610b4957fe5b604052919050565b6001600160a01b0381168114610b6657600080fd5b50565b6001600160401b0381168114610b6657600080fdfea264697066735822122091bcfcf1bbbeefc02e35083aee87b77f89114eb432675de00c85821ab05d5fb264736f6c63430007060033",
  "deployedSourceMap": "521:3809:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3565:105;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3850:186;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4042:141::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4189:139::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2081:1478::-;;;;;;:::i;:::-;;:::i;:::-;;3676:168;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3565:105::-;3615:14;3648:15;-1:-1:-1;;;;;3648:15:5;3565:105;:::o;3850:186::-;-1:-1:-1;;;;;3987:26:5;;;3958:6;3987:26;;;:9;:26;;;;;;;;4014:14;;;;;;;;;3987:42;;;;;;;;;3850:186::o;4042:141::-;-1:-1:-1;;;;;4144:31:5;;4138:38;4144:31;;;:14;:31;;;;;;;;;4138:38;;:5;:38;;;;;;4131:45;;;;;;-1:-1:-1;;4131:45:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4107:12;;4131:45;;;4138:38;4131:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4042:141;;;;:::o;4189:139::-;-1:-1:-1;;;;;4288:33:5;;;4262:7;4288:33;;;:16;:33;;;;;;;;4189:139::o;2081:1478::-;2204:25;2232:15;;:42;;-1:-1:-1;;;2232:42:5;;-1:-1:-1;;;;;2232:15:5;;;;:25;;:42;;2258:15;;2232:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2232:42:5;;;;;;;;;;;;:::i;:::-;2204:70;;2324:1;2305:6;:16;;;-1:-1:-1;;;;;2305:20:5;;2284:107;;;;-1:-1:-1;;;2284:107:5;;;;;;;:::i;:::-;;;;;;;;;2437:6;:14;;;:21;2423:11;-1:-1:-1;;;;;2423:35:5;;2402:129;;;;-1:-1:-1;;;2402:129:5;;;;;;;:::i;:::-;2576:6;:14;;;2591:11;-1:-1:-1;;;;;2576:27:5;;;;;;;;;;;;;;;-1:-1:-1;;;;;2562:41:5;:10;-1:-1:-1;;;;;2562:41:5;;2541:130;;;;-1:-1:-1;;;2541:130:5;;;;;;;:::i;:::-;-1:-1:-1;;;;;2704:23:5;;;;;;:6;:23;;;;;;;;2728:10;2704:35;;;;;;;;;;2703:36;2682:129;;;;-1:-1:-1;;;2682:129:5;;;;;;;:::i;:::-;2840:14;;;;;;;;;;2822:15;2914:14;;;:5;:14;;;;;;;:21;;-1:-1:-1;;2914:21:5;;;;;;;;;;;:26;:45;;;;-1:-1:-1;2944:10:5;;:15;2914:45;2910:96;;;2975:14;;;;:5;:14;;;;;;;;:20;;;;;;;;:::i;:::-;;2910:96;-1:-1:-1;;;;;3056:26:5;;;3038:15;3056:26;;;:9;:26;;;;;;;;:35;;;;;;;;;;3105:23;;;3056:35;3105:23;;;;;;3129:10;3105:35;;;;;;;:42;;-1:-1:-1;;3105:42:5;;;;;3157:46;;-1:-1:-1;;3157:46:5;3056:35;;;:39;3157:46;;;;;;;;;3229:33;;;:16;:33;;;;;;;3056:39;;3229:33;-1:-1:-1;3214:174:5;;;-1:-1:-1;;;;;3278:33:5;;;;;;;:16;:33;;;;;;;;:44;;-1:-1:-1;;3278:44:5;;;;;;;;;;;3336:14;:31;;;:41;;;3214:174;3431:10;-1:-1:-1;;;;;3403:149:5;;3472:15;3506:3;3533:8;3403:149;;;;;;;;:::i;:::-;;;;;;;;2081:1478;;;;;;:::o;3676:168::-;-1:-1:-1;;;;;3806:23:5;3779:4;3806:23;;;:6;:23;;;;;;;;-1:-1:-1;;;;;3806:31:5;;;;;;;;;;;;;;3676:168::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:142:22;95:13;;117:33;95:13;117:33;:::i;161:814::-;;285:3;278:4;270:6;266:17;262:27;252:2;;307:5;300;293:20;252:2;340:6;334:13;366:4;-1:-1:-1;;;;;385:2:22;382:26;379:2;;;411:9;379:2;449;445;441:11;472:27;495:2;491;487:11;472:27;:::i;:::-;533:15;;;564:12;;;;596:15;;;630;;;626:24;;623:33;-1:-1:-1;620:2:22;;;673:5;666;659:20;620:2;699:5;690:14;;713:233;727:2;724:1;721:9;713:233;;;791:3;785:10;808:33;835:5;808:33;:::i;:::-;854:18;;745:1;738:9;;;;;892:12;;;;924;;713:233;;;-1:-1:-1;964:5:22;242:733;-1:-1:-1;;;;;;;242:733:22:o;980:179::-;1060:13;;-1:-1:-1;;;;;;1102:32:22;;1092:43;;1082:2;;1149:1;1146;1139:12;1164:542;;1261:3;1254:4;1246:6;1242:17;1238:27;1228:2;;1283:5;1276;1269:20;1228:2;1323:6;1310:20;-1:-1:-1;;;;;1345:2:22;1342:26;1339:2;;;1371:9;1339:2;1406:54;1448:2;1429:13;;-1:-1:-1;;1425:27:22;1454:4;1421:38;1406:54;:::i;:::-;1485:2;1476:7;1469:19;1531:3;1524:4;1519:2;1511:6;1507:15;1503:26;1500:35;1497:2;;;1552:5;1545;1538:20;1497:2;1621;1614:4;1606:6;1602:17;1595:4;1586:7;1582:18;1569:55;1644:16;;;1662:4;1640:27;1633:42;;;;1648:7;1218:488;-1:-1:-1;;1218:488:22:o;1711:140::-;1791:13;;1813:32;1791:13;1813:32;:::i;1856:400::-;;;1984:2;1972:9;1963:7;1959:23;1955:32;1952:2;;;2005:6;1997;1990:22;1952:2;2049:9;2036:23;2068:33;2095:5;2068:33;:::i;:::-;2120:5;-1:-1:-1;2177:2:22;2162:18;;2149:32;2190:34;2149:32;2190:34;:::i;:::-;2243:7;2233:17;;;1942:314;;;;;:::o;2261:1630::-;;2412:2;2400:9;2391:7;2387:23;2383:32;2380:2;;;2433:6;2425;2418:22;2380:2;2471:9;2465:16;-1:-1:-1;;;;;2541:2:22;2533:6;2530:14;2527:2;;;2562:6;2554;2547:22;2527:2;2605:6;2594:9;2590:22;2580:32;;2631:6;2671:2;2666;2657:7;2653:16;2649:25;2646:2;;;2692:6;2684;2677:22;2646:2;2723:18;2738:2;2723:18;:::i;:::-;2710:31;;2764:34;2795:2;2764:34;:::i;:::-;2757:5;2750:49;2831:43;2870:2;2866;2862:11;2831:43;:::i;:::-;2826:2;2819:5;2815:14;2808:67;2914:2;2910;2906:11;2900:18;2943:2;2933:8;2930:16;2927:2;;;2964:6;2956;2949:22;2927:2;3005:73;3070:7;3059:8;3055:2;3051:17;3005:73;:::i;:::-;3000:2;2993:5;2989:14;2982:97;;3111:43;3150:2;3146;3142:11;3111:43;:::i;:::-;3106:2;3099:5;3095:14;3088:67;3188:44;3227:3;3223:2;3219:12;3188:44;:::i;:::-;3182:3;3175:5;3171:15;3164:69;3266:44;3305:3;3301:2;3297:12;3266:44;:::i;:::-;3260:3;3253:5;3249:15;3242:69;3344:44;3383:3;3379:2;3375:12;3344:44;:::i;:::-;3338:3;3331:5;3327:15;3320:69;3422:44;3461:3;3457:2;3453:12;3422:44;:::i;:::-;3416:3;3409:5;3405:15;3398:69;3486:3;3476:13;;3521:44;3561:2;3557;3553:11;3521:44;:::i;:::-;3516:2;3509:5;3505:14;3498:68;3585:3;3575:13;;3620:44;3660:2;3656;3652:11;3620:44;:::i;:::-;3615:2;3608:5;3604:14;3597:68;3684:3;3674:13;;3719:43;3758:2;3754;3750:11;3719:43;:::i;:::-;3714:2;3707:5;3703:14;3696:67;3782:3;3772:13;;3817:43;3856:2;3852;3848:11;3817:43;:::i;:::-;3801:14;;;3794:67;;;;3805:5;2370:1521;-1:-1:-1;;;;2370:1521:22:o;3896:257::-;;4007:2;3995:9;3986:7;3982:23;3978:32;3975:2;;;4028:6;4020;4013:22;3975:2;4072:9;4059:23;4091:32;4117:5;4091:32;:::i;:::-;4142:5;3965:188;-1:-1:-1;;;3965:188:22:o;4158:477::-;;;4295:2;4283:9;4274:7;4270:23;4266:32;4263:2;;;4316:6;4308;4301:22;4263:2;4360:9;4347:23;4379:32;4405:5;4379:32;:::i;:::-;4430:5;-1:-1:-1;4486:2:22;4471:18;;4458:32;-1:-1:-1;;;;;4502:30:22;;4499:2;;;4550:6;4542;4535:22;4499:2;4578:51;4621:7;4612:6;4601:9;4597:22;4578:51;:::i;:::-;4568:61;;;4253:382;;;;;:::o;4640:618::-;;;;4793:2;4781:9;4772:7;4768:23;4764:32;4761:2;;;4814:6;4806;4799:22;4761:2;4858:9;4845:23;4877:32;4903:5;4877:32;:::i;:::-;4928:5;-1:-1:-1;4985:2:22;4970:18;;4957:32;4998:34;4957:32;4998:34;:::i;:::-;5051:7;-1:-1:-1;5109:2:22;5094:18;;5081:32;-1:-1:-1;;;;;5125:30:22;;5122:2;;;5173:6;5165;5158:22;5122:2;5201:51;5244:7;5235:6;5224:9;5220:22;5201:51;:::i;:::-;5191:61;;;4751:507;;;;;:::o;5263:477::-;;5344:5;5338:12;5371:6;5366:3;5359:19;5396:3;5408:162;5422:6;5419:1;5416:13;5408:162;;;5484:4;5540:13;;;5536:22;;5530:29;5512:11;;;5508:20;;5501:59;5437:12;5408:162;;;5588:6;5585:1;5582:13;5579:2;;;5654:3;5647:4;5638:6;5633:3;5629:16;5625:27;5618:40;5579:2;-1:-1:-1;5722:2:22;5701:15;-1:-1:-1;;5697:29:22;5688:39;;;;5729:4;5684:50;;5314:426;-1:-1:-1;;5314:426:22:o;5745:187::-;5910:14;;5903:22;5885:41;;5873:2;5858:18;;5840:92::o;5937:219::-;;6084:2;6073:9;6066:21;6104:46;6146:2;6135:9;6131:18;6123:6;6104:46;:::i;6161:225::-;-1:-1:-1;;;;;6347:32:22;;;;6329:51;;6317:2;6302:18;;6284:102::o;6391:404::-;6593:2;6575:21;;;6632:2;6612:18;;;6605:30;6671:34;6666:2;6651:18;;6644:62;-1:-1:-1;;;6737:2:22;6722:18;;6715:38;6785:3;6770:19;;6565:230::o;6800:406::-;7002:2;6984:21;;;7041:2;7021:18;;;7014:30;7080:34;7075:2;7060:18;;7053:62;-1:-1:-1;;;7146:2:22;7131:18;;7124:40;7196:3;7181:19;;6974:232::o;7211:411::-;7413:2;7395:21;;;7452:2;7432:18;;;7425:30;7491:34;7486:2;7471:18;;7464:62;-1:-1:-1;;;7557:2:22;7542:18;;7535:45;7612:3;7597:19;;7385:237::o;7627:410::-;7829:2;7811:21;;;7868:2;7848:18;;;7841:30;7907:34;7902:2;7887:18;;7880:62;-1:-1:-1;;;7973:2:22;7958:18;;7951:44;8027:3;8012:19;;7801:236::o;8042:177::-;8188:25;;;8176:2;8161:18;;8143:76::o;8224:200::-;-1:-1:-1;;;;;8386:31:22;;;;8368:50;;8356:2;8341:18;;8323:101::o;8429:412::-;;-1:-1:-1;;;;;8677:2:22;8669:6;8665:15;8654:9;8647:34;8717:2;8712;8701:9;8697:18;8690:30;8737:46;8779:2;8768:9;8764:18;8756:6;8737:46;:::i;:::-;8729:54;;8831:2;8823:6;8819:15;8814:2;8803:9;8799:18;8792:43;;8600:241;;;;;;:::o;8846:242::-;8916:2;8910:9;8946:17;;;-1:-1:-1;;;;;8978:34:22;;9014:22;;;8975:62;8972:2;;;9040:9;8972:2;9067;9060:22;8890:198;;-1:-1:-1;8890:198:22:o;9093:133::-;-1:-1:-1;;;;;9170:31:22;;9160:42;;9150:2;;9216:1;9213;9206:12;9150:2;9140:86;:::o;9231:131::-;-1:-1:-1;;;;;9311:5:22;9307:30;9300:5;9297:41;9287:2;;9352:1;9349;9342:12",
  "language": "Solidity",
  "natspec": {
    "events": {
      "Voted(address,uint64,bytes,uint64)": {
        "params": {
          "key": "The eon public key for which the keyper voted.",
          "keyper": "The address of the keyper who sent the vote.",
          "numVotes": "The number of keypers (including this one) who have voted for the key so     far.",
          "startBatchIndex": "The index of the first batch for which the key should be used."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "vote(uint64,uint64,bytes)": {
        "notice": "Submit a vote.Can only be called by keypers defined in the config responsible for     `startBatchIndex`, and only once per `startBatchIndex`.",
        "params": {
          "key": "The eon public key to vote for.",
          "keyperIndex": "The index of the calling keyper in the batch config.",
          "startBatchIndex": "The index of the first batch for which the key should be used."
        }
      }
    },
    "title": "A contract that keypers can use to vote on eon public keys. For each eon public key     generated, the keypers are expected to submit one vote. The contract logs the number of     votes so that users can only pick keys once they have reached votes from enough keypers     and thus have confidence that the key is actually correct.",
    "version": 1
  },
  "offset": [521, 4330],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE1C3A4A EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x1845BF5C EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x2553600E EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0x41ECDA09 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x6B32C795 EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0xCF1D7A0A EQ PUSH2 0xFA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x11A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x998 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x98 PUSH2 0x93 CALLDATASIZE PUSH1 0x4 PUSH2 0x883 JUMP JUMPDEST PUSH2 0x129 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP2 SWAP1 PUSH2 0xAE4 JUMP JUMPDEST PUSH2 0xB8 PUSH2 0xB3 CALLDATASIZE PUSH1 0x4 PUSH2 0x860 JUMP JUMPDEST PUSH2 0x159 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x985 JUMP JUMPDEST PUSH2 0xD8 PUSH2 0xD3 CALLDATASIZE PUSH1 0x4 PUSH2 0x860 JUMP JUMPDEST PUSH2 0x20F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP2 SWAP1 PUSH2 0xADB JUMP JUMPDEST PUSH2 0xF8 PUSH2 0xF3 CALLDATASIZE PUSH1 0x4 PUSH2 0x8D0 JUMP JUMPDEST PUSH2 0x22D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10D PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x97A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 MLOAD SWAP5 DUP4 ADD SWAP5 SWAP1 SWAP5 KECCAK256 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP4 MSTORE PUSH1 0x3 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP7 AND ISZERO MUL ADD SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 DIV SWAP2 DUP3 ADD DUP5 SWAP1 DIV DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x202 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x202 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x700465B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xE008CB62 SWAP1 PUSH2 0x25E SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x28A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2B2 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x729 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x80 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP1 PUSH2 0x9AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x40 ADD MLOAD MLOAD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND LT PUSH2 0x317 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP1 PUSH2 0xA3E JUMP JUMPDEST DUP1 PUSH1 0x40 ADD MLOAD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MLOAD DUP2 LT PUSH2 0x330 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x368 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP1 PUSH2 0x9F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP1 PUSH2 0xA8D JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP5 AND ISZERO MUL ADD SWAP1 SWAP2 AND DIV ISZERO DUP1 ISZERO PUSH2 0x3E6 JUMPI POP DUP3 MLOAD ISZERO JUMPDEST ISZERO PUSH2 0x40C JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP5 MLOAD PUSH2 0x40A SWAP3 DUP7 ADD SWAP1 PUSH2 0x53A JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP6 DUP6 MSTORE PUSH1 0x1 DUP1 DUP6 MSTORE DUP4 DUP7 KECCAK256 CALLER DUP8 MSTORE DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 OR SWAP1 SSTORE DUP3 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND SWAP2 DUP9 AND ADD DUP1 DUP9 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP5 DUP5 MSTORE PUSH1 0x5 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP3 AND LT ISZERO PUSH2 0x4BA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND SWAP5 DUP7 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0x4 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x305124B6EC831BB4150EB1DDBD4E8CC4B95687B9A6258B110FD0E9865914B0BF DUP7 DUP7 DUP5 PUSH1 0x40 MLOAD PUSH2 0x4F7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x570 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x5B6 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x589 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x5B6 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x5B6 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x5B6 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x59B JUMP JUMPDEST POP PUSH2 0x5C2 SWAP3 SWAP2 POP PUSH2 0x5C6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x5C2 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x5C7 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x20A DUP2 PUSH2 0xB51 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5F6 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x60B JUMPI INVALID JUMPDEST DUP1 DUP3 MUL PUSH2 0x619 DUP3 DUP3 ADD PUSH2 0xB2E JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP1 DUP7 DUP5 ADD DUP4 DUP9 ADD DUP6 ADD DUP10 LT ISZERO PUSH2 0x633 JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP4 POP JUMPDEST DUP6 DUP5 LT ISZERO PUSH2 0x65E JUMPI DUP1 MLOAD PUSH2 0x64A DUP2 PUSH2 0xB51 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP4 SWAP1 SWAP4 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 DUP5 ADD PUSH2 0x637 JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x692 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x6A5 JUMPI INVALID JUMPDEST PUSH2 0x6B8 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0xB2E JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x6CC JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0x20A DUP2 PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x703 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x70E DUP2 PUSH2 0xB51 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x71E DUP2 PUSH2 0xB69 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x73A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x750 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP PUSH2 0x180 DUP1 DUP4 DUP8 SUB SLT ISZERO PUSH2 0x766 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x76F DUP2 PUSH2 0xB2E JUMP JUMPDEST SWAP1 POP PUSH2 0x77A DUP4 PUSH2 0x6E6 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x788 PUSH1 0x20 DUP5 ADD PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH2 0x79E JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x7AA DUP8 DUP3 DUP7 ADD PUSH2 0x5E6 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH2 0x7BC PUSH1 0x60 DUP5 ADD PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x7CD PUSH1 0x80 DUP5 ADD PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x7DE PUSH1 0xA0 DUP5 ADD PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x7EF PUSH1 0xC0 DUP5 ADD PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x800 PUSH1 0xE0 DUP5 ADD PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 SWAP2 POP PUSH2 0x815 DUP3 DUP5 ADD PUSH2 0x5DB JUMP JUMPDEST DUP3 DUP3 ADD MSTORE PUSH2 0x120 SWAP2 POP PUSH2 0x829 DUP3 DUP5 ADD PUSH2 0x5DB JUMP JUMPDEST DUP3 DUP3 ADD MSTORE PUSH2 0x140 SWAP2 POP PUSH2 0x83D DUP3 DUP5 ADD PUSH2 0x66A JUMP JUMPDEST DUP3 DUP3 ADD MSTORE PUSH2 0x160 SWAP2 POP PUSH2 0x851 DUP3 DUP5 ADD PUSH2 0x6E6 JUMP JUMPDEST SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x871 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x87C DUP2 PUSH2 0xB69 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x895 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x8A0 DUP2 PUSH2 0xB69 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x8BA JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x8C6 DUP6 DUP3 DUP7 ADD PUSH2 0x682 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8E4 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x8EF DUP2 PUSH2 0xB69 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x8FF DUP2 PUSH2 0xB69 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x919 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x925 DUP7 DUP3 DUP8 ADD PUSH2 0x682 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x954 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x938 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x965 JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x87C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x92F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x4B657942726F616463617374436F6E74726163743A20636F6E66696720697320 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x696E616374697665 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x4B657942726F616463617374436F6E74726163743A2073656E64657220697320 PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x3737BA1035B2BCB832B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2F SWAP1 DUP3 ADD MSTORE PUSH32 0x4B657942726F616463617374436F6E74726163743A206B657970657220696E64 PUSH1 0x40 DUP3 ADD MSTORE PUSH15 0x6578206F7574206F662072616E6765 PUSH1 0x88 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x4B657942726F616463617374436F6E74726163743A206B657970657220686173 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x8185B1C9958591E481D9BDD1959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP7 AND DUP4 MSTORE PUSH1 0x60 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xB1B PUSH1 0x60 DUP5 ADD DUP7 PUSH2 0x92F JUMP JUMPDEST SWAP2 POP DUP1 DUP5 AND PUSH1 0x40 DUP5 ADD MSTORE POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xB49 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB66 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 0xBC 0xFC CALL 0xBB 0xBE 0xEF 0xC0 0x2E CALLDATALOAD ADDMOD GASPRICE 0xEE DUP8 0xB7 PUSH32 0x89114EB432675DE00C85821AB05D5FB264736F6C634300070600330000000000 ",
  "pcMap": {
    "0": {
      "offset": [521, 4330],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [521, 4330],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [521, 4330],
      "op": "MSTORE",
      "path": "5"
    },
    "5": {
      "fn": null,
      "offset": [521, 4330],
      "op": "CALLVALUE",
      "path": "5"
    },
    "6": {
      "fn": null,
      "offset": [521, 4330],
      "op": "DUP1",
      "path": "5"
    },
    "7": {
      "fn": null,
      "offset": [521, 4330],
      "op": "ISZERO",
      "path": "5"
    },
    "8": {
      "fn": null,
      "offset": [521, 4330],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [521, 4330],
      "op": "JUMPI",
      "path": "5"
    },
    "12": {
      "fn": null,
      "offset": [521, 4330],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [521, 4330],
      "op": "DUP1",
      "path": "5"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [521, 4330],
      "op": "REVERT",
      "path": "5"
    },
    "16": {
      "fn": null,
      "offset": [521, 4330],
      "op": "JUMPDEST",
      "path": "5"
    },
    "17": {
      "fn": null,
      "offset": [521, 4330],
      "op": "POP",
      "path": "5"
    },
    "18": {
      "fn": null,
      "offset": [521, 4330],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [521, 4330],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "21": {
      "fn": null,
      "offset": [521, 4330],
      "op": "LT",
      "path": "5"
    },
    "22": {
      "fn": null,
      "offset": [521, 4330],
      "op": "PUSH2",
      "path": "5",
      "value": "0x62"
    },
    "25": {
      "fn": null,
      "offset": [521, 4330],
      "op": "JUMPI",
      "path": "5"
    },
    "26": {
      "fn": null,
      "offset": [521, 4330],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [521, 4330],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "29": {
      "fn": null,
      "offset": [521, 4330],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [521, 4330],
      "op": "SHR",
      "path": "5"
    },
    "32": {
      "fn": null,
      "offset": [521, 4330],
      "op": "DUP1",
      "path": "5"
    },
    "33": {
      "fn": null,
      "offset": [521, 4330],
      "op": "PUSH4",
      "path": "5",
      "value": "0xE1C3A4A"
    },
    "38": {
      "fn": null,
      "offset": [521, 4330],
      "op": "EQ",
      "path": "5"
    },
    "39": {
      "fn": null,
      "offset": [521, 4330],
      "op": "PUSH2",
      "path": "5",
      "value": "0x67"
    },
    "42": {
      "fn": null,
      "offset": [521, 4330],
      "op": "JUMPI",
      "path": "5"
    },
    "43": {
      "fn": null,
      "offset": [521, 4330],
      "op": "DUP1",
      "path": "5"
    },
    "44": {
      "fn": null,
      "offset": [521, 4330],
      "op": "PUSH4",
      "path": "5",
      "value": "0x1845BF5C"
    },
    "49": {
      "fn": null,
      "offset": [521, 4330],
      "op": "EQ",
      "path": "5"
    },
    "50": {
      "fn": null,
      "offset": [521, 4330],
      "op": "PUSH2",
      "path": "5",
      "value": "0x85"
    },
    "53": {
      "fn": null,
      "offset": [521, 4330],
      "op": "JUMPI",
      "path": "5"
    },
    "54": {
      "fn": null,
      "offset": [521, 4330],
      "op": "DUP1",
      "path": "5"
    },
    "55": {
      "fn": null,
      "offset": [521, 4330],
      "op": "PUSH4",
      "path": "5",
      "value": "0x2553600E"
    },
    "60": {
      "fn": null,
      "offset": [521, 4330],
      "op": "EQ",
      "path": "5"
    },
    "61": {
      "fn": null,
      "offset": [521, 4330],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA5"
    },
    "64": {
      "fn": null,
      "offset": [521, 4330],
      "op": "JUMPI",
      "path": "5"
    },
    "65": {
      "fn": null,
      "offset": [521, 4330],
      "op": "DUP1",
      "path": "5"
    },
    "66": {
      "fn": null,
      "offset": [521, 4330],
      "op": "PUSH4",
      "path": "5",
      "value": "0x41ECDA09"
    },
    "71": {
      "fn": null,
      "offset": [521, 4330],
      "op": "EQ",
      "path": "5"
    },
    "72": {
      "fn": null,
      "offset": [521, 4330],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC5"
    },
    "75": {
      "fn": null,
      "offset": [521, 4330],
      "op": "JUMPI",
      "path": "5"
    },
    "76": {
      "fn": null,
      "offset": [521, 4330],
      "op": "DUP1",
      "path": "5"
    },
    "77": {
      "fn": null,
      "offset": [521, 4330],
      "op": "PUSH4",
      "path": "5",
      "value": "0x6B32C795"
    },
    "82": {
      "fn": null,
      "offset": [521, 4330],
      "op": "EQ",
      "path": "5"
    },
    "83": {
      "fn": null,
      "offset": [521, 4330],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE5"
    },
    "86": {
      "fn": null,
      "offset": [521, 4330],
      "op": "JUMPI",
      "path": "5"
    },
    "87": {
      "fn": null,
      "offset": [521, 4330],
      "op": "DUP1",
      "path": "5"
    },
    "88": {
      "fn": null,
      "offset": [521, 4330],
      "op": "PUSH4",
      "path": "5",
      "value": "0xCF1D7A0A"
    },
    "93": {
      "fn": null,
      "offset": [521, 4330],
      "op": "EQ",
      "path": "5"
    },
    "94": {
      "fn": null,
      "offset": [521, 4330],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFA"
    },
    "97": {
      "fn": null,
      "offset": [521, 4330],
      "op": "JUMPI",
      "path": "5"
    },
    "98": {
      "fn": null,
      "offset": [521, 4330],
      "op": "JUMPDEST",
      "path": "5"
    },
    "99": {
      "fn": null,
      "offset": [521, 4330],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "101": {
      "fn": null,
      "offset": [521, 4330],
      "op": "DUP1",
      "path": "5"
    },
    "102": {
      "first_revert": true,
      "fn": null,
      "offset": [521, 4330],
      "op": "REVERT",
      "path": "5"
    },
    "103": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3565, 3670],
      "op": "JUMPDEST",
      "path": "5"
    },
    "104": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3565, 3670],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6F"
    },
    "107": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3565, 3670],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11A"
    },
    "110": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "jump": "i",
      "offset": [3565, 3670],
      "op": "JUMP",
      "path": "5"
    },
    "111": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3565, 3670],
      "op": "JUMPDEST",
      "path": "5"
    },
    "112": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3565, 3670],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "114": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3565, 3670],
      "op": "MLOAD",
      "path": "5"
    },
    "115": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3565, 3670],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7C"
    },
    "118": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3565, 3670],
      "op": "SWAP2",
      "path": "5"
    },
    "119": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3565, 3670],
      "op": "SWAP1",
      "path": "5"
    },
    "120": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3565, 3670],
      "op": "PUSH2",
      "path": "5",
      "value": "0x998"
    },
    "123": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "jump": "i",
      "offset": [3565, 3670],
      "op": "JUMP",
      "path": "5"
    },
    "124": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3565, 3670],
      "op": "JUMPDEST",
      "path": "5"
    },
    "125": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3565, 3670],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "127": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3565, 3670],
      "op": "MLOAD",
      "path": "5"
    },
    "128": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3565, 3670],
      "op": "DUP1",
      "path": "5"
    },
    "129": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3565, 3670],
      "op": "SWAP2",
      "path": "5"
    },
    "130": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3565, 3670],
      "op": "SUB",
      "path": "5"
    },
    "131": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3565, 3670],
      "op": "SWAP1",
      "path": "5"
    },
    "132": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3565, 3670],
      "op": "RETURN",
      "path": "5"
    },
    "133": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3850, 4036],
      "op": "JUMPDEST",
      "path": "5"
    },
    "134": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3850, 4036],
      "op": "PUSH2",
      "path": "5",
      "value": "0x98"
    },
    "137": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3850, 4036],
      "op": "PUSH2",
      "path": "5",
      "value": "0x93"
    },
    "140": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3850, 4036],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "141": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3850, 4036],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "143": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3850, 4036],
      "op": "PUSH2",
      "path": "5",
      "value": "0x883"
    },
    "146": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "jump": "i",
      "offset": [3850, 4036],
      "op": "JUMP",
      "path": "5"
    },
    "147": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3850, 4036],
      "op": "JUMPDEST",
      "path": "5"
    },
    "148": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3850, 4036],
      "op": "PUSH2",
      "path": "5",
      "value": "0x129"
    },
    "151": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "jump": "i",
      "offset": [3850, 4036],
      "op": "JUMP",
      "path": "5"
    },
    "152": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3850, 4036],
      "op": "JUMPDEST",
      "path": "5"
    },
    "153": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3850, 4036],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "155": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3850, 4036],
      "op": "MLOAD",
      "path": "5"
    },
    "156": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3850, 4036],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7C"
    },
    "159": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3850, 4036],
      "op": "SWAP2",
      "path": "5"
    },
    "160": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3850, 4036],
      "op": "SWAP1",
      "path": "5"
    },
    "161": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3850, 4036],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAE4"
    },
    "164": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "jump": "i",
      "offset": [3850, 4036],
      "op": "JUMP",
      "path": "5"
    },
    "165": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4042, 4183],
      "op": "JUMPDEST",
      "path": "5"
    },
    "166": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4042, 4183],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB8"
    },
    "169": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4042, 4183],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB3"
    },
    "172": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4042, 4183],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "173": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4042, 4183],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "175": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4042, 4183],
      "op": "PUSH2",
      "path": "5",
      "value": "0x860"
    },
    "178": {
      "fn": "KeyBroadcastContract.getBestKey",
      "jump": "i",
      "offset": [4042, 4183],
      "op": "JUMP",
      "path": "5"
    },
    "179": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4042, 4183],
      "op": "JUMPDEST",
      "path": "5"
    },
    "180": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4042, 4183],
      "op": "PUSH2",
      "path": "5",
      "value": "0x159"
    },
    "183": {
      "fn": "KeyBroadcastContract.getBestKey",
      "jump": "i",
      "offset": [4042, 4183],
      "op": "JUMP",
      "path": "5"
    },
    "184": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4042, 4183],
      "op": "JUMPDEST",
      "path": "5"
    },
    "185": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4042, 4183],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "187": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4042, 4183],
      "op": "MLOAD",
      "path": "5"
    },
    "188": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4042, 4183],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7C"
    },
    "191": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4042, 4183],
      "op": "SWAP2",
      "path": "5"
    },
    "192": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4042, 4183],
      "op": "SWAP1",
      "path": "5"
    },
    "193": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4042, 4183],
      "op": "PUSH2",
      "path": "5",
      "value": "0x985"
    },
    "196": {
      "fn": "KeyBroadcastContract.getBestKey",
      "jump": "i",
      "offset": [4042, 4183],
      "op": "JUMP",
      "path": "5"
    },
    "197": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4189, 4328],
      "op": "JUMPDEST",
      "path": "5"
    },
    "198": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4189, 4328],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD8"
    },
    "201": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4189, 4328],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD3"
    },
    "204": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4189, 4328],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "205": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4189, 4328],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "207": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4189, 4328],
      "op": "PUSH2",
      "path": "5",
      "value": "0x860"
    },
    "210": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "jump": "i",
      "offset": [4189, 4328],
      "op": "JUMP",
      "path": "5"
    },
    "211": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4189, 4328],
      "op": "JUMPDEST",
      "path": "5"
    },
    "212": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4189, 4328],
      "op": "PUSH2",
      "path": "5",
      "value": "0x20F"
    },
    "215": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "jump": "i",
      "offset": [4189, 4328],
      "op": "JUMP",
      "path": "5"
    },
    "216": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4189, 4328],
      "op": "JUMPDEST",
      "path": "5"
    },
    "217": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4189, 4328],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "219": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4189, 4328],
      "op": "MLOAD",
      "path": "5"
    },
    "220": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4189, 4328],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7C"
    },
    "223": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4189, 4328],
      "op": "SWAP2",
      "path": "5"
    },
    "224": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4189, 4328],
      "op": "SWAP1",
      "path": "5"
    },
    "225": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4189, 4328],
      "op": "PUSH2",
      "path": "5",
      "value": "0xADB"
    },
    "228": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "jump": "i",
      "offset": [4189, 4328],
      "op": "JUMP",
      "path": "5"
    },
    "229": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2081, 3559],
      "op": "JUMPDEST",
      "path": "5"
    },
    "230": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2081, 3559],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF8"
    },
    "233": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2081, 3559],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF3"
    },
    "236": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2081, 3559],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "237": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2081, 3559],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "239": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2081, 3559],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8D0"
    },
    "242": {
      "fn": "KeyBroadcastContract.vote",
      "jump": "i",
      "offset": [2081, 3559],
      "op": "JUMP",
      "path": "5"
    },
    "243": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2081, 3559],
      "op": "JUMPDEST",
      "path": "5"
    },
    "244": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2081, 3559],
      "op": "PUSH2",
      "path": "5",
      "value": "0x22D"
    },
    "247": {
      "fn": "KeyBroadcastContract.vote",
      "jump": "i",
      "offset": [2081, 3559],
      "op": "JUMP",
      "path": "5"
    },
    "248": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2081, 3559],
      "op": "JUMPDEST",
      "path": "5"
    },
    "249": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2081, 3559],
      "op": "STOP",
      "path": "5"
    },
    "250": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3676, 3844],
      "op": "JUMPDEST",
      "path": "5"
    },
    "251": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3676, 3844],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10D"
    },
    "254": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3676, 3844],
      "op": "PUSH2",
      "path": "5",
      "value": "0x108"
    },
    "257": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3676, 3844],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "258": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3676, 3844],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "260": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3676, 3844],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6F1"
    },
    "263": {
      "fn": "KeyBroadcastContract.hasVoted",
      "jump": "i",
      "offset": [3676, 3844],
      "op": "JUMP",
      "path": "5"
    },
    "264": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3676, 3844],
      "op": "JUMPDEST",
      "path": "5"
    },
    "265": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3676, 3844],
      "op": "PUSH2",
      "path": "5",
      "value": "0x507"
    },
    "268": {
      "fn": "KeyBroadcastContract.hasVoted",
      "jump": "i",
      "offset": [3676, 3844],
      "op": "JUMP",
      "path": "5"
    },
    "269": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3676, 3844],
      "op": "JUMPDEST",
      "path": "5"
    },
    "270": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3676, 3844],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "272": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3676, 3844],
      "op": "MLOAD",
      "path": "5"
    },
    "273": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3676, 3844],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7C"
    },
    "276": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3676, 3844],
      "op": "SWAP2",
      "path": "5"
    },
    "277": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3676, 3844],
      "op": "SWAP1",
      "path": "5"
    },
    "278": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3676, 3844],
      "op": "PUSH2",
      "path": "5",
      "value": "0x97A"
    },
    "281": {
      "fn": "KeyBroadcastContract.hasVoted",
      "jump": "i",
      "offset": [3676, 3844],
      "op": "JUMP",
      "path": "5"
    },
    "282": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3565, 3670],
      "op": "JUMPDEST",
      "path": "5"
    },
    "283": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3615, 3629],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "285": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3648, 3663],
      "op": "SLOAD",
      "path": "5",
      "statement": 0
    },
    "286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "290": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "292": {
      "op": "SHL"
    },
    "293": {
      "op": "SUB"
    },
    "294": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3648, 3663],
      "op": "AND",
      "path": "5"
    },
    "295": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "offset": [3565, 3670],
      "op": "SWAP1",
      "path": "5"
    },
    "296": {
      "fn": "KeyBroadcastContract.getConfigContract",
      "jump": "o",
      "offset": [3565, 3670],
      "op": "JUMP",
      "path": "5"
    },
    "297": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3850, 4036],
      "op": "JUMPDEST",
      "path": "5"
    },
    "298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "302": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "304": {
      "op": "SHL"
    },
    "305": {
      "op": "SUB"
    },
    "306": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4013],
      "op": "SWAP2",
      "path": "5",
      "statement": 1
    },
    "307": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4013],
      "op": "DUP3",
      "path": "5"
    },
    "308": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4013],
      "op": "AND",
      "path": "5"
    },
    "309": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3958, 3964],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "311": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4013],
      "op": "SWAP1",
      "path": "5"
    },
    "312": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4013],
      "op": "DUP2",
      "path": "5"
    },
    "313": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4013],
      "op": "MSTORE",
      "path": "5"
    },
    "314": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 3996],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "316": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4013],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "318": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4013],
      "op": "SWAP1",
      "path": "5"
    },
    "319": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4013],
      "op": "DUP2",
      "path": "5"
    },
    "320": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4013],
      "op": "MSTORE",
      "path": "5"
    },
    "321": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4013],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "323": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4013],
      "op": "DUP1",
      "path": "5"
    },
    "324": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4013],
      "op": "DUP4",
      "path": "5"
    },
    "325": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4013],
      "op": "KECCAK256",
      "path": "5"
    },
    "326": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [4014, 4028],
      "op": "DUP5",
      "path": "5"
    },
    "327": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [4014, 4028],
      "op": "MLOAD",
      "path": "5"
    },
    "328": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [4014, 4028],
      "op": "SWAP5",
      "path": "5"
    },
    "329": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [4014, 4028],
      "op": "DUP4",
      "path": "5"
    },
    "330": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [4014, 4028],
      "op": "ADD",
      "path": "5"
    },
    "331": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [4014, 4028],
      "op": "SWAP5",
      "path": "5"
    },
    "332": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [4014, 4028],
      "op": "SWAP1",
      "path": "5"
    },
    "333": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [4014, 4028],
      "op": "SWAP5",
      "path": "5"
    },
    "334": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [4014, 4028],
      "op": "KECCAK256",
      "path": "5"
    },
    "335": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4029],
      "op": "DUP4",
      "path": "5"
    },
    "336": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4029],
      "op": "MSTORE",
      "path": "5"
    },
    "337": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4029],
      "op": "SWAP3",
      "path": "5"
    },
    "338": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4029],
      "op": "SWAP1",
      "path": "5"
    },
    "339": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4029],
      "op": "MSTORE",
      "path": "5"
    },
    "340": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4029],
      "op": "KECCAK256",
      "path": "5"
    },
    "341": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4029],
      "op": "SLOAD",
      "path": "5"
    },
    "342": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4029],
      "op": "AND",
      "path": "5"
    },
    "343": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3987, 4029],
      "op": "SWAP1",
      "path": "5"
    },
    "344": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "jump": "o",
      "offset": [3850, 4036],
      "op": "JUMP",
      "path": "5"
    },
    "345": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4042, 4183],
      "op": "JUMPDEST",
      "path": "5"
    },
    "346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "350": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "352": {
      "op": "SHL"
    },
    "353": {
      "op": "SUB"
    },
    "354": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4144, 4175],
      "op": "DUP2",
      "path": "5",
      "statement": 2
    },
    "355": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4144, 4175],
      "op": "AND",
      "path": "5"
    },
    "356": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4138, 4176],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "358": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4144, 4175],
      "op": "SWAP1",
      "path": "5"
    },
    "359": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4144, 4175],
      "op": "DUP2",
      "path": "5"
    },
    "360": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4144, 4175],
      "op": "MSTORE",
      "path": "5"
    },
    "361": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4144, 4158],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "363": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4144, 4175],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "365": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4144, 4175],
      "op": "SWAP1",
      "path": "5"
    },
    "366": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4144, 4175],
      "op": "DUP2",
      "path": "5"
    },
    "367": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4144, 4175],
      "op": "MSTORE",
      "path": "5"
    },
    "368": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4144, 4175],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "370": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4144, 4175],
      "op": "DUP1",
      "path": "5"
    },
    "371": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4144, 4175],
      "op": "DUP4",
      "path": "5"
    },
    "372": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4144, 4175],
      "op": "KECCAK256",
      "path": "5"
    },
    "373": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4144, 4175],
      "op": "SLOAD",
      "path": "5"
    },
    "374": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4138, 4176],
      "op": "DUP4",
      "path": "5"
    },
    "375": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4138, 4176],
      "op": "MSTORE",
      "path": "5"
    },
    "376": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4138, 4143],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "378": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4138, 4176],
      "op": "DUP3",
      "path": "5"
    },
    "379": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4138, 4176],
      "op": "MSTORE",
      "path": "5"
    },
    "380": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4138, 4176],
      "op": "SWAP2",
      "path": "5"
    },
    "381": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4138, 4176],
      "op": "DUP3",
      "path": "5"
    },
    "382": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4138, 4176],
      "op": "SWAP1",
      "path": "5"
    },
    "383": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4138, 4176],
      "op": "KECCAK256",
      "path": "5"
    },
    "384": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "DUP1",
      "path": "5"
    },
    "385": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "SLOAD",
      "path": "5"
    },
    "386": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "DUP4",
      "path": "5"
    },
    "387": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "MLOAD",
      "path": "5"
    },
    "388": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "390": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "392": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "394": {
      "op": "NOT"
    },
    "395": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "398": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "400": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "DUP7",
      "path": "5"
    },
    "401": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "AND",
      "path": "5"
    },
    "402": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "ISZERO",
      "path": "5"
    },
    "403": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "MUL",
      "path": "5"
    },
    "404": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "ADD",
      "path": "5"
    },
    "405": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "SWAP1",
      "path": "5"
    },
    "406": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "SWAP4",
      "path": "5"
    },
    "407": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "AND",
      "path": "5"
    },
    "408": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "SWAP3",
      "path": "5"
    },
    "409": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "SWAP1",
      "path": "5"
    },
    "410": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "SWAP3",
      "path": "5"
    },
    "411": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "DIV",
      "path": "5"
    },
    "412": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "SWAP2",
      "path": "5"
    },
    "413": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "DUP3",
      "path": "5"
    },
    "414": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "ADD",
      "path": "5"
    },
    "415": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "DUP5",
      "path": "5"
    },
    "416": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "SWAP1",
      "path": "5"
    },
    "417": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "DIV",
      "path": "5"
    },
    "418": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "DUP5",
      "path": "5"
    },
    "419": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "MUL",
      "path": "5"
    },
    "420": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "DUP2",
      "path": "5"
    },
    "421": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "ADD",
      "path": "5"
    },
    "422": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "DUP5",
      "path": "5"
    },
    "423": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "ADD",
      "path": "5"
    },
    "424": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "SWAP1",
      "path": "5"
    },
    "425": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "SWAP5",
      "path": "5"
    },
    "426": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "MSTORE",
      "path": "5"
    },
    "427": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "DUP1",
      "path": "5"
    },
    "428": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "DUP5",
      "path": "5"
    },
    "429": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "MSTORE",
      "path": "5"
    },
    "430": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4107, 4119],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "432": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4107, 4119],
      "op": "SWAP4",
      "path": "5"
    },
    "433": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "SWAP3",
      "path": "5"
    },
    "434": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "DUP4",
      "path": "5"
    },
    "435": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "ADD",
      "path": "5"
    },
    "436": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4138, 4176],
      "op": "DUP3",
      "path": "5"
    },
    "437": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "DUP3",
      "path": "5"
    },
    "438": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "DUP1",
      "path": "5"
    },
    "439": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "ISZERO",
      "path": "5"
    },
    "440": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "PUSH2",
      "path": "5",
      "value": "0x202"
    },
    "443": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "JUMPI",
      "path": "5"
    },
    "444": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "DUP1",
      "path": "5"
    },
    "445": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "447": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "LT",
      "path": "5"
    },
    "448": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1D7"
    },
    "451": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "JUMPI",
      "path": "5"
    },
    "452": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "455": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "DUP1",
      "path": "5"
    },
    "456": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "DUP4",
      "path": "5"
    },
    "457": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "SLOAD",
      "path": "5"
    },
    "458": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "DIV",
      "path": "5"
    },
    "459": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "MUL",
      "path": "5"
    },
    "460": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "DUP4",
      "path": "5"
    },
    "461": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "MSTORE",
      "path": "5"
    },
    "462": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "SWAP2",
      "path": "5"
    },
    "463": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "465": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "ADD",
      "path": "5"
    },
    "466": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "SWAP2",
      "path": "5"
    },
    "467": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "PUSH2",
      "path": "5",
      "value": "0x202"
    },
    "470": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "JUMP",
      "path": "5"
    },
    "471": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "JUMPDEST",
      "path": "5"
    },
    "472": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "DUP3",
      "path": "5"
    },
    "473": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "ADD",
      "path": "5"
    },
    "474": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "SWAP2",
      "path": "5"
    },
    "475": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "SWAP1",
      "path": "5"
    },
    "476": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "478": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "MSTORE",
      "path": "5"
    },
    "479": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "481": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "483": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "KECCAK256",
      "path": "5"
    },
    "484": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "SWAP1",
      "path": "5"
    },
    "485": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "JUMPDEST",
      "path": "5"
    },
    "486": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "DUP2",
      "path": "5"
    },
    "487": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "SLOAD",
      "path": "5"
    },
    "488": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "DUP2",
      "path": "5"
    },
    "489": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "MSTORE",
      "path": "5"
    },
    "490": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "SWAP1",
      "path": "5"
    },
    "491": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "493": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "ADD",
      "path": "5"
    },
    "494": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "SWAP1",
      "path": "5"
    },
    "495": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "497": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "ADD",
      "path": "5"
    },
    "498": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "DUP1",
      "path": "5"
    },
    "499": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "DUP4",
      "path": "5"
    },
    "500": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "GT",
      "path": "5"
    },
    "501": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E5"
    },
    "504": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "JUMPI",
      "path": "5"
    },
    "505": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "DUP3",
      "path": "5"
    },
    "506": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "SWAP1",
      "path": "5"
    },
    "507": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "SUB",
      "path": "5"
    },
    "508": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "510": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "AND",
      "path": "5"
    },
    "511": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "DUP3",
      "path": "5"
    },
    "512": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "ADD",
      "path": "5"
    },
    "513": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "SWAP2",
      "path": "5"
    },
    "514": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "JUMPDEST",
      "path": "5"
    },
    "515": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "POP",
      "path": "5"
    },
    "516": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "POP",
      "path": "5"
    },
    "517": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "POP",
      "path": "5"
    },
    "518": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "POP",
      "path": "5"
    },
    "519": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "POP",
      "path": "5"
    },
    "520": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "SWAP1",
      "path": "5"
    },
    "521": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4131, 4176],
      "op": "POP",
      "path": "5"
    },
    "522": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4042, 4183],
      "op": "JUMPDEST",
      "path": "5"
    },
    "523": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4042, 4183],
      "op": "SWAP2",
      "path": "5"
    },
    "524": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4042, 4183],
      "op": "SWAP1",
      "path": "5"
    },
    "525": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4042, 4183],
      "op": "POP",
      "path": "5"
    },
    "526": {
      "fn": "KeyBroadcastContract.getBestKey",
      "jump": "o",
      "offset": [4042, 4183],
      "op": "JUMP",
      "path": "5"
    },
    "527": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4189, 4328],
      "op": "JUMPDEST",
      "path": "5"
    },
    "528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "532": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "534": {
      "op": "SHL"
    },
    "535": {
      "op": "SUB"
    },
    "536": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4288, 4321],
      "op": "SWAP1",
      "path": "5",
      "statement": 3
    },
    "537": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4288, 4321],
      "op": "DUP2",
      "path": "5"
    },
    "538": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4288, 4321],
      "op": "AND",
      "path": "5"
    },
    "539": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4262, 4269],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "541": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4288, 4321],
      "op": "SWAP1",
      "path": "5"
    },
    "542": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4288, 4321],
      "op": "DUP2",
      "path": "5"
    },
    "543": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4288, 4321],
      "op": "MSTORE",
      "path": "5"
    },
    "544": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4288, 4304],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "546": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4288, 4321],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "548": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4288, 4321],
      "op": "MSTORE",
      "path": "5"
    },
    "549": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4288, 4321],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "551": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4288, 4321],
      "op": "SWAP1",
      "path": "5"
    },
    "552": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4288, 4321],
      "op": "KECCAK256",
      "path": "5"
    },
    "553": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4288, 4321],
      "op": "SLOAD",
      "path": "5"
    },
    "554": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4288, 4321],
      "op": "AND",
      "path": "5"
    },
    "555": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4288, 4321],
      "op": "SWAP1",
      "path": "5"
    },
    "556": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "jump": "o",
      "offset": [4189, 4328],
      "op": "JUMP",
      "path": "5"
    },
    "557": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2081, 3559],
      "op": "JUMPDEST",
      "path": "5"
    },
    "558": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2204, 2229],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "560": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2247],
      "op": "DUP1",
      "path": "5"
    },
    "561": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2247],
      "op": "SLOAD",
      "path": "5"
    },
    "562": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "564": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "MLOAD",
      "path": "5"
    },
    "565": {
      "op": "PUSH4",
      "value": "0x700465B1"
    },
    "570": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "572": {
      "op": "SHL"
    },
    "573": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "DUP2",
      "path": "5"
    },
    "574": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "MSTORE",
      "path": "5"
    },
    "575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "579": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "581": {
      "op": "SHL"
    },
    "582": {
      "op": "SUB"
    },
    "583": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2247],
      "op": "SWAP1",
      "path": "5"
    },
    "584": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2247],
      "op": "SWAP2",
      "path": "5"
    },
    "585": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2247],
      "op": "AND",
      "path": "5"
    },
    "586": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2247],
      "op": "SWAP1",
      "path": "5"
    },
    "587": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2257],
      "op": "PUSH4",
      "path": "5",
      "value": "0xE008CB62"
    },
    "592": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2257],
      "op": "SWAP1",
      "path": "5"
    },
    "593": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "PUSH2",
      "path": "5",
      "value": "0x25E"
    },
    "596": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "SWAP1",
      "path": "5"
    },
    "597": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2258, 2273],
      "op": "DUP7",
      "path": "5"
    },
    "598": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2258, 2273],
      "op": "SWAP1",
      "path": "5"
    },
    "599": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "601": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "ADD",
      "path": "5"
    },
    "602": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAE4"
    },
    "605": {
      "fn": "KeyBroadcastContract.vote",
      "jump": "i",
      "offset": [2232, 2274],
      "op": "JUMP",
      "path": "5"
    },
    "606": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "JUMPDEST",
      "path": "5"
    },
    "607": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "609": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "611": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "MLOAD",
      "path": "5"
    },
    "612": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "DUP1",
      "path": "5"
    },
    "613": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "DUP4",
      "path": "5"
    },
    "614": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "SUB",
      "path": "5"
    },
    "615": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "DUP2",
      "path": "5"
    },
    "616": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "DUP7",
      "path": "5"
    },
    "617": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "DUP1",
      "path": "5"
    },
    "618": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "619": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "ISZERO",
      "path": "5"
    },
    "620": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "DUP1",
      "path": "5"
    },
    "621": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "ISZERO",
      "path": "5"
    },
    "622": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "PUSH2",
      "path": "5",
      "value": "0x276"
    },
    "625": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "JUMPI",
      "path": "5"
    },
    "626": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "628": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "DUP1",
      "path": "5"
    },
    "629": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "REVERT",
      "path": "5"
    },
    "630": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "JUMPDEST",
      "path": "5"
    },
    "631": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "POP",
      "path": "5"
    },
    "632": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "GAS",
      "path": "5"
    },
    "633": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "STATICCALL",
      "path": "5"
    },
    "634": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "ISZERO",
      "path": "5"
    },
    "635": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "DUP1",
      "path": "5"
    },
    "636": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "ISZERO",
      "path": "5"
    },
    "637": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "PUSH2",
      "path": "5",
      "value": "0x28A"
    },
    "640": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "JUMPI",
      "path": "5"
    },
    "641": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "642": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "644": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "DUP1",
      "path": "5"
    },
    "645": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "646": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "647": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "649": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "REVERT",
      "path": "5"
    },
    "650": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "JUMPDEST",
      "path": "5"
    },
    "651": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "POP",
      "path": "5"
    },
    "652": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "POP",
      "path": "5"
    },
    "653": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "POP",
      "path": "5"
    },
    "654": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "POP",
      "path": "5"
    },
    "655": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "657": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "MLOAD",
      "path": "5"
    },
    "658": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "659": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "661": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "DUP3",
      "path": "5"
    },
    "662": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "663": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "665": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "666": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "SWAP1",
      "path": "5"
    },
    "667": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "DUP2",
      "path": "5"
    },
    "668": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "ADD",
      "path": "5"
    },
    "669": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "671": {
      "op": "NOT"
    },
    "672": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "AND",
      "path": "5"
    },
    "673": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "DUP3",
      "path": "5"
    },
    "674": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "ADD",
      "path": "5"
    },
    "675": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "677": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "MSTORE",
      "path": "5"
    },
    "678": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B2"
    },
    "681": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "SWAP2",
      "path": "5"
    },
    "682": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "SWAP1",
      "path": "5"
    },
    "683": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "DUP2",
      "path": "5"
    },
    "684": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "ADD",
      "path": "5"
    },
    "685": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "SWAP1",
      "path": "5"
    },
    "686": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "PUSH2",
      "path": "5",
      "value": "0x729"
    },
    "689": {
      "fn": "KeyBroadcastContract.vote",
      "jump": "i",
      "offset": [2232, 2274],
      "op": "JUMP",
      "path": "5"
    },
    "690": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2232, 2274],
      "op": "JUMPDEST",
      "path": "5"
    },
    "691": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2204, 2274],
      "op": "SWAP1",
      "path": "5"
    },
    "692": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2204, 2274],
      "op": "POP",
      "path": "5"
    },
    "693": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2324, 2325],
      "op": "PUSH1",
      "path": "5",
      "statement": 4,
      "value": "0x0"
    },
    "695": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2305, 2311],
      "op": "DUP2",
      "path": "5"
    },
    "696": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2305, 2321],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "698": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2305, 2321],
      "op": "ADD",
      "path": "5"
    },
    "699": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2305, 2321],
      "op": "MLOAD",
      "path": "5"
    },
    "700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "704": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "706": {
      "op": "SHL"
    },
    "707": {
      "op": "SUB"
    },
    "708": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2305, 2325],
      "op": "AND",
      "path": "5"
    },
    "709": {
      "branch": 15,
      "fn": "KeyBroadcastContract.vote",
      "offset": [2305, 2325],
      "op": "GT",
      "path": "5"
    },
    "710": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2284, 2391],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2EA"
    },
    "713": {
      "branch": 15,
      "fn": "KeyBroadcastContract.vote",
      "offset": [2284, 2391],
      "op": "JUMPI",
      "path": "5"
    },
    "714": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2284, 2391],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "716": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2284, 2391],
      "op": "MLOAD",
      "path": "5"
    },
    "717": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "721": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "723": {
      "op": "SHL"
    },
    "724": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2284, 2391],
      "op": "DUP2",
      "path": "5"
    },
    "725": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2284, 2391],
      "op": "MSTORE",
      "path": "5"
    },
    "726": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2284, 2391],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "728": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2284, 2391],
      "op": "ADD",
      "path": "5"
    },
    "729": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2284, 2391],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E1"
    },
    "732": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2284, 2391],
      "op": "SWAP1",
      "path": "5"
    },
    "733": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2284, 2391],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9AC"
    },
    "736": {
      "fn": "KeyBroadcastContract.vote",
      "jump": "i",
      "offset": [2284, 2391],
      "op": "JUMP",
      "path": "5"
    },
    "737": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2284, 2391],
      "op": "JUMPDEST",
      "path": "5"
    },
    "738": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2284, 2391],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "740": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2284, 2391],
      "op": "MLOAD",
      "path": "5"
    },
    "741": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2284, 2391],
      "op": "DUP1",
      "path": "5"
    },
    "742": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2284, 2391],
      "op": "SWAP2",
      "path": "5"
    },
    "743": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2284, 2391],
      "op": "SUB",
      "path": "5"
    },
    "744": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2284, 2391],
      "op": "SWAP1",
      "path": "5"
    },
    "745": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2284, 2391],
      "op": "REVERT",
      "path": "5"
    },
    "746": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2284, 2391],
      "op": "JUMPDEST",
      "path": "5"
    },
    "747": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2437, 2443],
      "op": "DUP1",
      "path": "5",
      "statement": 5
    },
    "748": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2437, 2451],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "750": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2437, 2451],
      "op": "ADD",
      "path": "5"
    },
    "751": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2437, 2451],
      "op": "MLOAD",
      "path": "5"
    },
    "752": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2437, 2458],
      "op": "MLOAD",
      "path": "5"
    },
    "753": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2423, 2434],
      "op": "DUP5",
      "path": "5"
    },
    "754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "758": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "760": {
      "op": "SHL"
    },
    "761": {
      "op": "SUB"
    },
    "762": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2423, 2458],
      "op": "AND",
      "path": "5"
    },
    "763": {
      "branch": 16,
      "fn": "KeyBroadcastContract.vote",
      "offset": [2423, 2458],
      "op": "LT",
      "path": "5"
    },
    "764": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2402, 2531],
      "op": "PUSH2",
      "path": "5",
      "value": "0x317"
    },
    "767": {
      "branch": 16,
      "fn": "KeyBroadcastContract.vote",
      "offset": [2402, 2531],
      "op": "JUMPI",
      "path": "5"
    },
    "768": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2402, 2531],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "770": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2402, 2531],
      "op": "MLOAD",
      "path": "5"
    },
    "771": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "775": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "777": {
      "op": "SHL"
    },
    "778": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2402, 2531],
      "op": "DUP2",
      "path": "5"
    },
    "779": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2402, 2531],
      "op": "MSTORE",
      "path": "5"
    },
    "780": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2402, 2531],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "782": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2402, 2531],
      "op": "ADD",
      "path": "5"
    },
    "783": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2402, 2531],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E1"
    },
    "786": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2402, 2531],
      "op": "SWAP1",
      "path": "5"
    },
    "787": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2402, 2531],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA3E"
    },
    "790": {
      "fn": "KeyBroadcastContract.vote",
      "jump": "i",
      "offset": [2402, 2531],
      "op": "JUMP",
      "path": "5"
    },
    "791": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2402, 2531],
      "op": "JUMPDEST",
      "path": "5"
    },
    "792": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2576, 2582],
      "op": "DUP1",
      "path": "5",
      "statement": 6
    },
    "793": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2576, 2590],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "795": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2576, 2590],
      "op": "ADD",
      "path": "5"
    },
    "796": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2576, 2590],
      "op": "MLOAD",
      "path": "5"
    },
    "797": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2591, 2602],
      "op": "DUP5",
      "path": "5"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "802": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "804": {
      "op": "SHL"
    },
    "805": {
      "op": "SUB"
    },
    "806": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2576, 2603],
      "op": "AND",
      "path": "5"
    },
    "807": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2576, 2603],
      "op": "DUP2",
      "path": "5"
    },
    "808": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2576, 2603],
      "op": "MLOAD",
      "path": "5"
    },
    "809": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2576, 2603],
      "op": "DUP2",
      "path": "5"
    },
    "810": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2576, 2603],
      "op": "LT",
      "path": "5"
    },
    "811": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2576, 2603],
      "op": "PUSH2",
      "path": "5",
      "value": "0x330"
    },
    "814": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2576, 2603],
      "op": "JUMPI",
      "path": "5"
    },
    "815": {
      "dev": "Index out of range",
      "fn": "KeyBroadcastContract.vote",
      "offset": [2576, 2603],
      "op": "INVALID",
      "path": "5"
    },
    "816": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2576, 2603],
      "op": "JUMPDEST",
      "path": "5"
    },
    "817": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2576, 2603],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "819": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2576, 2603],
      "op": "MUL",
      "path": "5"
    },
    "820": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2576, 2603],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "822": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2576, 2603],
      "op": "ADD",
      "path": "5"
    },
    "823": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2576, 2603],
      "op": "ADD",
      "path": "5"
    },
    "824": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2576, 2603],
      "op": "MLOAD",
      "path": "5"
    },
    "825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "829": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "831": {
      "op": "SHL"
    },
    "832": {
      "op": "SUB"
    },
    "833": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2562, 2603],
      "op": "AND",
      "path": "5"
    },
    "834": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2562, 2572],
      "op": "CALLER",
      "path": "5"
    },
    "835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "839": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "841": {
      "op": "SHL"
    },
    "842": {
      "op": "SUB"
    },
    "843": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2562, 2603],
      "op": "AND",
      "path": "5"
    },
    "844": {
      "branch": 17,
      "fn": "KeyBroadcastContract.vote",
      "offset": [2562, 2603],
      "op": "EQ",
      "path": "5"
    },
    "845": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2541, 2671],
      "op": "PUSH2",
      "path": "5",
      "value": "0x368"
    },
    "848": {
      "branch": 17,
      "fn": "KeyBroadcastContract.vote",
      "offset": [2541, 2671],
      "op": "JUMPI",
      "path": "5"
    },
    "849": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2541, 2671],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "851": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2541, 2671],
      "op": "MLOAD",
      "path": "5"
    },
    "852": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "856": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "858": {
      "op": "SHL"
    },
    "859": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2541, 2671],
      "op": "DUP2",
      "path": "5"
    },
    "860": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2541, 2671],
      "op": "MSTORE",
      "path": "5"
    },
    "861": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2541, 2671],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "863": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2541, 2671],
      "op": "ADD",
      "path": "5"
    },
    "864": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2541, 2671],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E1"
    },
    "867": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2541, 2671],
      "op": "SWAP1",
      "path": "5"
    },
    "868": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2541, 2671],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9F4"
    },
    "871": {
      "fn": "KeyBroadcastContract.vote",
      "jump": "i",
      "offset": [2541, 2671],
      "op": "JUMP",
      "path": "5"
    },
    "872": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2541, 2671],
      "op": "JUMPDEST",
      "path": "5"
    },
    "873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "877": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "879": {
      "op": "SHL"
    },
    "880": {
      "op": "SUB"
    },
    "881": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2727],
      "op": "DUP4",
      "path": "5",
      "statement": 7
    },
    "882": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2727],
      "op": "AND",
      "path": "5"
    },
    "883": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2727],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "885": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2727],
      "op": "SWAP1",
      "path": "5"
    },
    "886": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2727],
      "op": "DUP2",
      "path": "5"
    },
    "887": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2727],
      "op": "MSTORE",
      "path": "5"
    },
    "888": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2710],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "890": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2727],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "892": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2727],
      "op": "SWAP1",
      "path": "5"
    },
    "893": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2727],
      "op": "DUP2",
      "path": "5"
    },
    "894": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2727],
      "op": "MSTORE",
      "path": "5"
    },
    "895": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2727],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "897": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2727],
      "op": "DUP1",
      "path": "5"
    },
    "898": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2727],
      "op": "DUP4",
      "path": "5"
    },
    "899": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2727],
      "op": "KECCAK256",
      "path": "5"
    },
    "900": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2728, 2738],
      "op": "CALLER",
      "path": "5"
    },
    "901": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2739],
      "op": "DUP5",
      "path": "5"
    },
    "902": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2739],
      "op": "MSTORE",
      "path": "5"
    },
    "903": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2739],
      "op": "SWAP1",
      "path": "5"
    },
    "904": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2739],
      "op": "SWAP2",
      "path": "5"
    },
    "905": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2739],
      "op": "MSTORE",
      "path": "5"
    },
    "906": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2739],
      "op": "SWAP1",
      "path": "5"
    },
    "907": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2739],
      "op": "KECCAK256",
      "path": "5"
    },
    "908": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2739],
      "op": "SLOAD",
      "path": "5"
    },
    "909": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2739],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "911": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2704, 2739],
      "op": "AND",
      "path": "5"
    },
    "912": {
      "branch": 18,
      "fn": "KeyBroadcastContract.vote",
      "offset": [2703, 2739],
      "op": "ISZERO",
      "path": "5"
    },
    "913": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2682, 2811],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3AC"
    },
    "916": {
      "branch": 18,
      "fn": "KeyBroadcastContract.vote",
      "offset": [2682, 2811],
      "op": "JUMPI",
      "path": "5"
    },
    "917": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2682, 2811],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "919": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2682, 2811],
      "op": "MLOAD",
      "path": "5"
    },
    "920": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "924": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "926": {
      "op": "SHL"
    },
    "927": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2682, 2811],
      "op": "DUP2",
      "path": "5"
    },
    "928": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2682, 2811],
      "op": "MSTORE",
      "path": "5"
    },
    "929": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2682, 2811],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "931": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2682, 2811],
      "op": "ADD",
      "path": "5"
    },
    "932": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2682, 2811],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E1"
    },
    "935": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2682, 2811],
      "op": "SWAP1",
      "path": "5"
    },
    "936": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2682, 2811],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA8D"
    },
    "939": {
      "fn": "KeyBroadcastContract.vote",
      "jump": "i",
      "offset": [2682, 2811],
      "op": "JUMP",
      "path": "5"
    },
    "940": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2682, 2811],
      "op": "JUMPDEST",
      "path": "5"
    },
    "941": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2840, 2854],
      "op": "DUP2",
      "path": "5"
    },
    "942": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2840, 2854],
      "op": "MLOAD",
      "path": "5"
    },
    "943": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2840, 2854],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "945": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2840, 2854],
      "op": "DUP1",
      "path": "5"
    },
    "946": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2840, 2854],
      "op": "DUP5",
      "path": "5"
    },
    "947": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2840, 2854],
      "op": "ADD",
      "path": "5"
    },
    "948": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2840, 2854],
      "op": "SWAP2",
      "path": "5"
    },
    "949": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2840, 2854],
      "op": "SWAP1",
      "path": "5"
    },
    "950": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2840, 2854],
      "op": "SWAP2",
      "path": "5"
    },
    "951": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2840, 2854],
      "op": "KECCAK256",
      "path": "5"
    },
    "952": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2822, 2837],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "954": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2928],
      "op": "DUP2",
      "path": "5"
    },
    "955": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2928],
      "op": "DUP2",
      "path": "5"
    },
    "956": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2928],
      "op": "MSTORE",
      "path": "5"
    },
    "957": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2919],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "959": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2928],
      "op": "SWAP1",
      "path": "5"
    },
    "960": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2928],
      "op": "SWAP3",
      "path": "5"
    },
    "961": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2928],
      "op": "MSTORE",
      "path": "5"
    },
    "962": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2928],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "964": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2928],
      "op": "SWAP1",
      "path": "5"
    },
    "965": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2928],
      "op": "SWAP2",
      "path": "5"
    },
    "966": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2928],
      "op": "KECCAK256",
      "path": "5"
    },
    "967": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2935],
      "op": "SLOAD",
      "path": "5"
    },
    "968": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2935],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "970": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "972": {
      "op": "NOT"
    },
    "973": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2935],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "976": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2935],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "978": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2935],
      "op": "DUP5",
      "path": "5"
    },
    "979": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2935],
      "op": "AND",
      "path": "5"
    },
    "980": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2935],
      "op": "ISZERO",
      "path": "5"
    },
    "981": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2935],
      "op": "MUL",
      "path": "5"
    },
    "982": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2935],
      "op": "ADD",
      "path": "5"
    },
    "983": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2935],
      "op": "SWAP1",
      "path": "5"
    },
    "984": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2935],
      "op": "SWAP2",
      "path": "5"
    },
    "985": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2935],
      "op": "AND",
      "path": "5"
    },
    "986": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2935],
      "op": "DIV",
      "path": "5"
    },
    "987": {
      "branch": 19,
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2940],
      "op": "ISZERO",
      "path": "5"
    },
    "988": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2959],
      "op": "DUP1",
      "path": "5"
    },
    "989": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2959],
      "op": "ISZERO",
      "path": "5"
    },
    "990": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2959],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3E6"
    },
    "993": {
      "branch": 19,
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2959],
      "op": "JUMPI",
      "path": "5"
    },
    "994": {
      "op": "POP"
    },
    "995": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2944, 2954],
      "op": "DUP3",
      "path": "5"
    },
    "996": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2944, 2954],
      "op": "MLOAD",
      "path": "5"
    },
    "997": {
      "branch": 20,
      "fn": "KeyBroadcastContract.vote",
      "offset": [2944, 2959],
      "op": "ISZERO",
      "path": "5"
    },
    "998": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2914, 2959],
      "op": "JUMPDEST",
      "path": "5"
    },
    "999": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2910, 3006],
      "op": "ISZERO",
      "path": "5"
    },
    "1000": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2910, 3006],
      "op": "PUSH2",
      "path": "5",
      "value": "0x40C"
    },
    "1003": {
      "branch": 20,
      "fn": "KeyBroadcastContract.vote",
      "offset": [2910, 3006],
      "op": "JUMPI",
      "path": "5"
    },
    "1004": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2989],
      "op": "PUSH1",
      "path": "5",
      "statement": 8,
      "value": "0x0"
    },
    "1006": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2989],
      "op": "DUP2",
      "path": "5"
    },
    "1007": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2989],
      "op": "DUP2",
      "path": "5"
    },
    "1008": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2989],
      "op": "MSTORE",
      "path": "5"
    },
    "1009": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2980],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "1011": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2989],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1013": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2989],
      "op": "SWAP1",
      "path": "5"
    },
    "1014": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2989],
      "op": "DUP2",
      "path": "5"
    },
    "1015": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2989],
      "op": "MSTORE",
      "path": "5"
    },
    "1016": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2989],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1018": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2989],
      "op": "SWAP1",
      "path": "5"
    },
    "1019": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2989],
      "op": "SWAP2",
      "path": "5"
    },
    "1020": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2989],
      "op": "KECCAK256",
      "path": "5"
    },
    "1021": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2995],
      "op": "DUP5",
      "path": "5"
    },
    "1022": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2995],
      "op": "MLOAD",
      "path": "5"
    },
    "1023": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2995],
      "op": "PUSH2",
      "path": "5",
      "value": "0x40A"
    },
    "1026": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2995],
      "op": "SWAP3",
      "path": "5"
    },
    "1027": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2995],
      "op": "DUP7",
      "path": "5"
    },
    "1028": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2995],
      "op": "ADD",
      "path": "5"
    },
    "1029": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2995],
      "op": "SWAP1",
      "path": "5"
    },
    "1030": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2995],
      "op": "PUSH2",
      "path": "5",
      "value": "0x53A"
    },
    "1033": {
      "fn": "KeyBroadcastContract.vote",
      "jump": "i",
      "offset": [2975, 2995],
      "op": "JUMP",
      "path": "5"
    },
    "1034": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2995],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1035": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2975, 2995],
      "op": "POP",
      "path": "5"
    },
    "1036": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2910, 3006],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1041": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1043": {
      "op": "SHL"
    },
    "1044": {
      "op": "SUB"
    },
    "1045": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3082],
      "op": "DUP5",
      "path": "5"
    },
    "1046": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3082],
      "op": "DUP2",
      "path": "5"
    },
    "1047": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3082],
      "op": "AND",
      "path": "5"
    },
    "1048": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3038, 3053],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1050": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3082],
      "op": "DUP2",
      "path": "5"
    },
    "1051": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3082],
      "op": "DUP2",
      "path": "5"
    },
    "1052": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3082],
      "op": "MSTORE",
      "path": "5"
    },
    "1053": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3065],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1055": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3082],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1057": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3082],
      "op": "SWAP1",
      "path": "5"
    },
    "1058": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3082],
      "op": "DUP2",
      "path": "5"
    },
    "1059": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3082],
      "op": "MSTORE",
      "path": "5"
    },
    "1060": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3082],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1062": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3082],
      "op": "DUP1",
      "path": "5"
    },
    "1063": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3082],
      "op": "DUP4",
      "path": "5"
    },
    "1064": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3082],
      "op": "KECCAK256",
      "path": "5"
    },
    "1065": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3091],
      "op": "DUP7",
      "path": "5"
    },
    "1066": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3091],
      "op": "DUP5",
      "path": "5"
    },
    "1067": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3091],
      "op": "MSTORE",
      "path": "5"
    },
    "1068": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3091],
      "op": "DUP3",
      "path": "5"
    },
    "1069": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3091],
      "op": "MSTORE",
      "path": "5"
    },
    "1070": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3091],
      "op": "DUP1",
      "path": "5"
    },
    "1071": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3091],
      "op": "DUP4",
      "path": "5"
    },
    "1072": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3091],
      "op": "KECCAK256",
      "path": "5"
    },
    "1073": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3091],
      "op": "DUP1",
      "path": "5"
    },
    "1074": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3091],
      "op": "SLOAD",
      "path": "5"
    },
    "1075": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3128],
      "op": "DUP6",
      "path": "5",
      "statement": 9
    },
    "1076": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3128],
      "op": "DUP6",
      "path": "5"
    },
    "1077": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3128],
      "op": "MSTORE",
      "path": "5"
    },
    "1078": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3091],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1080": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3128],
      "op": "DUP1",
      "path": "5"
    },
    "1081": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3128],
      "op": "DUP6",
      "path": "5"
    },
    "1082": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3128],
      "op": "MSTORE",
      "path": "5"
    },
    "1083": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3128],
      "op": "DUP4",
      "path": "5"
    },
    "1084": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3128],
      "op": "DUP7",
      "path": "5"
    },
    "1085": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3128],
      "op": "KECCAK256",
      "path": "5"
    },
    "1086": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3129, 3139],
      "op": "CALLER",
      "path": "5"
    },
    "1087": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3140],
      "op": "DUP8",
      "path": "5"
    },
    "1088": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3140],
      "op": "MSTORE",
      "path": "5"
    },
    "1089": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3140],
      "op": "DUP6",
      "path": "5"
    },
    "1090": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3140],
      "op": "MSTORE",
      "path": "5"
    },
    "1091": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3140],
      "op": "DUP4",
      "path": "5"
    },
    "1092": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3140],
      "op": "DUP7",
      "path": "5"
    },
    "1093": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3140],
      "op": "KECCAK256",
      "path": "5"
    },
    "1094": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3147],
      "op": "DUP1",
      "path": "5"
    },
    "1095": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3147],
      "op": "SLOAD",
      "path": "5"
    },
    "1096": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1098": {
      "op": "NOT"
    },
    "1099": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3147],
      "op": "AND",
      "path": "5"
    },
    "1100": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3147],
      "op": "DUP3",
      "path": "5"
    },
    "1101": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3147],
      "op": "OR",
      "path": "5"
    },
    "1102": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3147],
      "op": "SWAP1",
      "path": "5"
    },
    "1103": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3105, 3147],
      "op": "SSTORE",
      "path": "5"
    },
    "1104": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3157, 3203],
      "op": "DUP3",
      "path": "5",
      "statement": 10
    },
    "1105": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3157, 3203],
      "op": "SLOAD",
      "path": "5"
    },
    "1106": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1115": {
      "op": "NOT"
    },
    "1116": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3157, 3203],
      "op": "AND",
      "path": "5"
    },
    "1117": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3091],
      "op": "SWAP2",
      "path": "5"
    },
    "1118": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3091],
      "op": "DUP9",
      "path": "5"
    },
    "1119": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3091],
      "op": "AND",
      "path": "5"
    },
    "1120": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3095],
      "op": "ADD",
      "path": "5"
    },
    "1121": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3157, 3203],
      "op": "DUP1",
      "path": "5"
    },
    "1122": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3157, 3203],
      "op": "DUP9",
      "path": "5"
    },
    "1123": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3157, 3203],
      "op": "AND",
      "path": "5"
    },
    "1124": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3157, 3203],
      "op": "SWAP2",
      "path": "5"
    },
    "1125": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3157, 3203],
      "op": "DUP3",
      "path": "5"
    },
    "1126": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3157, 3203],
      "op": "OR",
      "path": "5"
    },
    "1127": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3157, 3203],
      "op": "SWAP1",
      "path": "5"
    },
    "1128": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3157, 3203],
      "op": "SWAP3",
      "path": "5"
    },
    "1129": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3157, 3203],
      "op": "SSTORE",
      "path": "5"
    },
    "1130": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3262],
      "op": "SWAP5",
      "path": "5"
    },
    "1131": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3262],
      "op": "DUP5",
      "path": "5"
    },
    "1132": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3262],
      "op": "MSTORE",
      "path": "5"
    },
    "1133": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3245],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "1135": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3262],
      "op": "SWAP1",
      "path": "5"
    },
    "1136": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3262],
      "op": "SWAP3",
      "path": "5"
    },
    "1137": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3262],
      "op": "MSTORE",
      "path": "5"
    },
    "1138": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3262],
      "op": "SWAP1",
      "path": "5"
    },
    "1139": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3262],
      "op": "SWAP2",
      "path": "5"
    },
    "1140": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3262],
      "op": "KECCAK256",
      "path": "5"
    },
    "1141": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3262],
      "op": "SLOAD",
      "path": "5"
    },
    "1142": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3095],
      "op": "SWAP1",
      "path": "5"
    },
    "1143": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3056, 3095],
      "op": "SWAP3",
      "path": "5"
    },
    "1144": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3262],
      "op": "AND",
      "path": "5"
    },
    "1145": {
      "op": "LT"
    },
    "1146": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3214, 3388],
      "op": "ISZERO",
      "path": "5"
    },
    "1147": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3214, 3388],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4BA"
    },
    "1150": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3214, 3388],
      "op": "JUMPI",
      "path": "5"
    },
    "1151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1155": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1157": {
      "op": "SHL"
    },
    "1158": {
      "op": "SUB"
    },
    "1159": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3311],
      "op": "DUP6",
      "path": "5",
      "statement": 11
    },
    "1160": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3311],
      "op": "DUP2",
      "path": "5"
    },
    "1161": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3311],
      "op": "AND",
      "path": "5"
    },
    "1162": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3311],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1164": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3311],
      "op": "SWAP1",
      "path": "5"
    },
    "1165": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3311],
      "op": "DUP2",
      "path": "5"
    },
    "1166": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3311],
      "op": "MSTORE",
      "path": "5"
    },
    "1167": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3294],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "1169": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3311],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1171": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3311],
      "op": "SWAP1",
      "path": "5"
    },
    "1172": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3311],
      "op": "DUP2",
      "path": "5"
    },
    "1173": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3311],
      "op": "MSTORE",
      "path": "5"
    },
    "1174": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3311],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1176": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3311],
      "op": "DUP1",
      "path": "5"
    },
    "1177": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3311],
      "op": "DUP4",
      "path": "5"
    },
    "1178": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3311],
      "op": "KECCAK256",
      "path": "5"
    },
    "1179": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3322],
      "op": "DUP1",
      "path": "5"
    },
    "1180": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3322],
      "op": "SLOAD",
      "path": "5"
    },
    "1181": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1190": {
      "op": "NOT"
    },
    "1191": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3322],
      "op": "AND",
      "path": "5"
    },
    "1192": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3322],
      "op": "SWAP5",
      "path": "5"
    },
    "1193": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3322],
      "op": "DUP7",
      "path": "5"
    },
    "1194": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3322],
      "op": "AND",
      "path": "5"
    },
    "1195": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3322],
      "op": "SWAP5",
      "path": "5"
    },
    "1196": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3322],
      "op": "SWAP1",
      "path": "5"
    },
    "1197": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3322],
      "op": "SWAP5",
      "path": "5"
    },
    "1198": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3322],
      "op": "OR",
      "path": "5"
    },
    "1199": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3322],
      "op": "SWAP1",
      "path": "5"
    },
    "1200": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3322],
      "op": "SWAP4",
      "path": "5"
    },
    "1201": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3278, 3322],
      "op": "SSTORE",
      "path": "5"
    },
    "1202": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3336, 3350],
      "op": "PUSH1",
      "path": "5",
      "statement": 12,
      "value": "0x4"
    },
    "1204": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3336, 3367],
      "op": "SWAP1",
      "path": "5"
    },
    "1205": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3336, 3367],
      "op": "MSTORE",
      "path": "5"
    },
    "1206": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3336, 3367],
      "op": "KECCAK256",
      "path": "5"
    },
    "1207": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3336, 3377],
      "op": "DUP3",
      "path": "5"
    },
    "1208": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3336, 3377],
      "op": "SWAP1",
      "path": "5"
    },
    "1209": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3336, 3377],
      "op": "SSTORE",
      "path": "5"
    },
    "1210": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3214, 3388],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1211": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3431, 3441],
      "op": "CALLER",
      "path": "5",
      "statement": 13
    },
    "1212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1216": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1218": {
      "op": "SHL"
    },
    "1219": {
      "op": "SUB"
    },
    "1220": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3403, 3552],
      "op": "AND",
      "path": "5"
    },
    "1221": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3403, 3552],
      "op": "PUSH32",
      "path": "5",
      "value": "0x305124B6EC831BB4150EB1DDBD4E8CC4B95687B9A6258B110FD0E9865914B0BF"
    },
    "1254": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3472, 3487],
      "op": "DUP7",
      "path": "5"
    },
    "1255": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3506, 3509],
      "op": "DUP7",
      "path": "5"
    },
    "1256": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3533, 3541],
      "op": "DUP5",
      "path": "5"
    },
    "1257": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3403, 3552],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1259": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3403, 3552],
      "op": "MLOAD",
      "path": "5"
    },
    "1260": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3403, 3552],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4F7"
    },
    "1263": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3403, 3552],
      "op": "SWAP4",
      "path": "5"
    },
    "1264": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3403, 3552],
      "op": "SWAP3",
      "path": "5"
    },
    "1265": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3403, 3552],
      "op": "SWAP2",
      "path": "5"
    },
    "1266": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3403, 3552],
      "op": "SWAP1",
      "path": "5"
    },
    "1267": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3403, 3552],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAF8"
    },
    "1270": {
      "fn": "KeyBroadcastContract.vote",
      "jump": "i",
      "offset": [3403, 3552],
      "op": "JUMP",
      "path": "5"
    },
    "1271": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3403, 3552],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1272": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3403, 3552],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1274": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3403, 3552],
      "op": "MLOAD",
      "path": "5"
    },
    "1275": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3403, 3552],
      "op": "DUP1",
      "path": "5"
    },
    "1276": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3403, 3552],
      "op": "SWAP2",
      "path": "5"
    },
    "1277": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3403, 3552],
      "op": "SUB",
      "path": "5"
    },
    "1278": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3403, 3552],
      "op": "SWAP1",
      "path": "5"
    },
    "1279": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3403, 3552],
      "op": "LOG2",
      "path": "5"
    },
    "1280": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2081, 3559],
      "op": "POP",
      "path": "5"
    },
    "1281": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2081, 3559],
      "op": "POP",
      "path": "5"
    },
    "1282": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2081, 3559],
      "op": "POP",
      "path": "5"
    },
    "1283": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2081, 3559],
      "op": "POP",
      "path": "5"
    },
    "1284": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2081, 3559],
      "op": "POP",
      "path": "5"
    },
    "1285": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2081, 3559],
      "op": "POP",
      "path": "5"
    },
    "1286": {
      "fn": "KeyBroadcastContract.vote",
      "jump": "o",
      "offset": [2081, 3559],
      "op": "JUMP",
      "path": "5"
    },
    "1287": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3676, 3844],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1292": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1294": {
      "op": "SHL"
    },
    "1295": {
      "op": "SUB"
    },
    "1296": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3829],
      "op": "AND",
      "path": "5",
      "statement": 14
    },
    "1297": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3779, 3783],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1299": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3829],
      "op": "SWAP1",
      "path": "5"
    },
    "1300": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3829],
      "op": "DUP2",
      "path": "5"
    },
    "1301": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3829],
      "op": "MSTORE",
      "path": "5"
    },
    "1302": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3812],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1304": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3829],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1306": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3829],
      "op": "SWAP1",
      "path": "5"
    },
    "1307": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3829],
      "op": "DUP2",
      "path": "5"
    },
    "1308": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3829],
      "op": "MSTORE",
      "path": "5"
    },
    "1309": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3829],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1311": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3829],
      "op": "DUP1",
      "path": "5"
    },
    "1312": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3829],
      "op": "DUP4",
      "path": "5"
    },
    "1313": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3829],
      "op": "KECCAK256",
      "path": "5"
    },
    "1314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1318": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1320": {
      "op": "SHL"
    },
    "1321": {
      "op": "SUB"
    },
    "1322": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3837],
      "op": "SWAP5",
      "path": "5"
    },
    "1323": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3837],
      "op": "SWAP1",
      "path": "5"
    },
    "1324": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3837],
      "op": "SWAP5",
      "path": "5"
    },
    "1325": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3837],
      "op": "AND",
      "path": "5"
    },
    "1326": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3837],
      "op": "DUP4",
      "path": "5"
    },
    "1327": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3837],
      "op": "MSTORE",
      "path": "5"
    },
    "1328": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3837],
      "op": "SWAP3",
      "path": "5"
    },
    "1329": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3837],
      "op": "SWAP1",
      "path": "5"
    },
    "1330": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3837],
      "op": "MSTORE",
      "path": "5"
    },
    "1331": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3837],
      "op": "KECCAK256",
      "path": "5"
    },
    "1332": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3837],
      "op": "SLOAD",
      "path": "5"
    },
    "1333": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3837],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "1335": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3837],
      "op": "AND",
      "path": "5"
    },
    "1336": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3806, 3837],
      "op": "SWAP1",
      "path": "5"
    },
    "1337": {
      "fn": "KeyBroadcastContract.hasVoted",
      "jump": "o",
      "offset": [3676, 3844],
      "op": "JUMP",
      "path": "5"
    },
    "1338": {
      "op": "JUMPDEST"
    },
    "1339": {
      "op": "DUP3"
    },
    "1340": {
      "op": "DUP1"
    },
    "1341": {
      "op": "SLOAD"
    },
    "1342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1344": {
      "op": "DUP2"
    },
    "1345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1347": {
      "op": "AND"
    },
    "1348": {
      "op": "ISZERO"
    },
    "1349": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "1352": {
      "op": "MUL"
    },
    "1353": {
      "op": "SUB"
    },
    "1354": {
      "op": "AND"
    },
    "1355": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1357": {
      "op": "SWAP1"
    },
    "1358": {
      "op": "DIV"
    },
    "1359": {
      "op": "SWAP1"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1362": {
      "op": "MSTORE"
    },
    "1363": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1365": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1367": {
      "op": "KECCAK256"
    },
    "1368": {
      "op": "SWAP1"
    },
    "1369": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1371": {
      "op": "ADD"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1374": {
      "op": "SWAP1"
    },
    "1375": {
      "op": "DIV"
    },
    "1376": {
      "op": "DUP2"
    },
    "1377": {
      "op": "ADD"
    },
    "1378": {
      "op": "SWAP3"
    },
    "1379": {
      "op": "DUP3"
    },
    "1380": {
      "op": "PUSH2",
      "value": "0x570"
    },
    "1383": {
      "op": "JUMPI"
    },
    "1384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1386": {
      "op": "DUP6"
    },
    "1387": {
      "op": "SSTORE"
    },
    "1388": {
      "op": "PUSH2",
      "value": "0x5B6"
    },
    "1391": {
      "op": "JUMP"
    },
    "1392": {
      "op": "JUMPDEST"
    },
    "1393": {
      "op": "DUP3"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1396": {
      "op": "LT"
    },
    "1397": {
      "op": "PUSH2",
      "value": "0x589"
    },
    "1400": {
      "op": "JUMPI"
    },
    "1401": {
      "op": "DUP1"
    },
    "1402": {
      "op": "MLOAD"
    },
    "1403": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1405": {
      "op": "NOT"
    },
    "1406": {
      "op": "AND"
    },
    "1407": {
      "op": "DUP4"
    },
    "1408": {
      "op": "DUP1"
    },
    "1409": {
      "op": "ADD"
    },
    "1410": {
      "op": "OR"
    },
    "1411": {
      "op": "DUP6"
    },
    "1412": {
      "op": "SSTORE"
    },
    "1413": {
      "op": "PUSH2",
      "value": "0x5B6"
    },
    "1416": {
      "op": "JUMP"
    },
    "1417": {
      "op": "JUMPDEST"
    },
    "1418": {
      "op": "DUP3"
    },
    "1419": {
      "op": "DUP1"
    },
    "1420": {
      "op": "ADD"
    },
    "1421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1423": {
      "op": "ADD"
    },
    "1424": {
      "op": "DUP6"
    },
    "1425": {
      "op": "SSTORE"
    },
    "1426": {
      "op": "DUP3"
    },
    "1427": {
      "op": "ISZERO"
    },
    "1428": {
      "op": "PUSH2",
      "value": "0x5B6"
    },
    "1431": {
      "op": "JUMPI"
    },
    "1432": {
      "op": "SWAP2"
    },
    "1433": {
      "op": "DUP3"
    },
    "1434": {
      "op": "ADD"
    },
    "1435": {
      "op": "JUMPDEST"
    },
    "1436": {
      "op": "DUP3"
    },
    "1437": {
      "op": "DUP2"
    },
    "1438": {
      "op": "GT"
    },
    "1439": {
      "op": "ISZERO"
    },
    "1440": {
      "op": "PUSH2",
      "value": "0x5B6"
    },
    "1443": {
      "op": "JUMPI"
    },
    "1444": {
      "op": "DUP3"
    },
    "1445": {
      "op": "MLOAD"
    },
    "1446": {
      "op": "DUP3"
    },
    "1447": {
      "op": "SSTORE"
    },
    "1448": {
      "op": "SWAP2"
    },
    "1449": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1451": {
      "op": "ADD"
    },
    "1452": {
      "op": "SWAP2"
    },
    "1453": {
      "op": "SWAP1"
    },
    "1454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1456": {
      "op": "ADD"
    },
    "1457": {
      "op": "SWAP1"
    },
    "1458": {
      "op": "PUSH2",
      "value": "0x59B"
    },
    "1461": {
      "op": "JUMP"
    },
    "1462": {
      "op": "JUMPDEST"
    },
    "1463": {
      "op": "POP"
    },
    "1464": {
      "op": "PUSH2",
      "value": "0x5C2"
    },
    "1467": {
      "op": "SWAP3"
    },
    "1468": {
      "op": "SWAP2"
    },
    "1469": {
      "op": "POP"
    },
    "1470": {
      "op": "PUSH2",
      "value": "0x5C6"
    },
    "1473": {
      "jump": "i",
      "op": "JUMP"
    },
    "1474": {
      "op": "JUMPDEST"
    },
    "1475": {
      "op": "POP"
    },
    "1476": {
      "op": "SWAP1"
    },
    "1477": {
      "jump": "o",
      "op": "JUMP"
    },
    "1478": {
      "op": "JUMPDEST"
    },
    "1479": {
      "op": "JUMPDEST"
    },
    "1480": {
      "op": "DUP1"
    },
    "1481": {
      "op": "DUP3"
    },
    "1482": {
      "op": "GT"
    },
    "1483": {
      "op": "ISZERO"
    },
    "1484": {
      "op": "PUSH2",
      "value": "0x5C2"
    },
    "1487": {
      "op": "JUMPI"
    },
    "1488": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1490": {
      "op": "DUP2"
    },
    "1491": {
      "op": "SSTORE"
    },
    "1492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1494": {
      "op": "ADD"
    },
    "1495": {
      "op": "PUSH2",
      "value": "0x5C7"
    },
    "1498": {
      "op": "JUMP"
    },
    "1499": {
      "op": "JUMPDEST"
    },
    "1500": {
      "op": "DUP1"
    },
    "1501": {
      "op": "MLOAD"
    },
    "1502": {
      "op": "PUSH2",
      "value": "0x20A"
    },
    "1505": {
      "op": "DUP2"
    },
    "1506": {
      "op": "PUSH2",
      "value": "0xB51"
    },
    "1509": {
      "jump": "i",
      "op": "JUMP"
    },
    "1510": {
      "op": "JUMPDEST"
    },
    "1511": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1513": {
      "op": "DUP3"
    },
    "1514": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1516": {
      "op": "DUP4"
    },
    "1517": {
      "op": "ADD"
    },
    "1518": {
      "op": "SLT"
    },
    "1519": {
      "op": "PUSH2",
      "value": "0x5F6"
    },
    "1522": {
      "op": "JUMPI"
    },
    "1523": {
      "op": "DUP1"
    },
    "1524": {
      "op": "DUP2"
    },
    "1525": {
      "op": "REVERT"
    },
    "1526": {
      "op": "JUMPDEST"
    },
    "1527": {
      "op": "DUP2"
    },
    "1528": {
      "op": "MLOAD"
    },
    "1529": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1535": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1537": {
      "op": "SHL"
    },
    "1538": {
      "op": "SUB"
    },
    "1539": {
      "op": "DUP3"
    },
    "1540": {
      "op": "GT"
    },
    "1541": {
      "op": "ISZERO"
    },
    "1542": {
      "op": "PUSH2",
      "value": "0x60B"
    },
    "1545": {
      "op": "JUMPI"
    },
    "1546": {
      "op": "INVALID"
    },
    "1547": {
      "op": "JUMPDEST"
    },
    "1548": {
      "op": "DUP1"
    },
    "1549": {
      "op": "DUP3"
    },
    "1550": {
      "op": "MUL"
    },
    "1551": {
      "op": "PUSH2",
      "value": "0x619"
    },
    "1554": {
      "op": "DUP3"
    },
    "1555": {
      "op": "DUP3"
    },
    "1556": {
      "op": "ADD"
    },
    "1557": {
      "op": "PUSH2",
      "value": "0xB2E"
    },
    "1560": {
      "jump": "i",
      "op": "JUMP"
    },
    "1561": {
      "op": "JUMPDEST"
    },
    "1562": {
      "op": "DUP4"
    },
    "1563": {
      "op": "DUP2"
    },
    "1564": {
      "op": "MSTORE"
    },
    "1565": {
      "op": "DUP3"
    },
    "1566": {
      "op": "DUP2"
    },
    "1567": {
      "op": "ADD"
    },
    "1568": {
      "op": "SWAP1"
    },
    "1569": {
      "op": "DUP7"
    },
    "1570": {
      "op": "DUP5"
    },
    "1571": {
      "op": "ADD"
    },
    "1572": {
      "op": "DUP4"
    },
    "1573": {
      "op": "DUP9"
    },
    "1574": {
      "op": "ADD"
    },
    "1575": {
      "op": "DUP6"
    },
    "1576": {
      "op": "ADD"
    },
    "1577": {
      "op": "DUP10"
    },
    "1578": {
      "op": "LT"
    },
    "1579": {
      "op": "ISZERO"
    },
    "1580": {
      "op": "PUSH2",
      "value": "0x633"
    },
    "1583": {
      "op": "JUMPI"
    },
    "1584": {
      "op": "DUP7"
    },
    "1585": {
      "op": "DUP8"
    },
    "1586": {
      "op": "REVERT"
    },
    "1587": {
      "op": "JUMPDEST"
    },
    "1588": {
      "op": "DUP7"
    },
    "1589": {
      "op": "SWAP4"
    },
    "1590": {
      "op": "POP"
    },
    "1591": {
      "op": "JUMPDEST"
    },
    "1592": {
      "op": "DUP6"
    },
    "1593": {
      "op": "DUP5"
    },
    "1594": {
      "op": "LT"
    },
    "1595": {
      "op": "ISZERO"
    },
    "1596": {
      "op": "PUSH2",
      "value": "0x65E"
    },
    "1599": {
      "op": "JUMPI"
    },
    "1600": {
      "op": "DUP1"
    },
    "1601": {
      "op": "MLOAD"
    },
    "1602": {
      "op": "PUSH2",
      "value": "0x64A"
    },
    "1605": {
      "op": "DUP2"
    },
    "1606": {
      "op": "PUSH2",
      "value": "0xB51"
    },
    "1609": {
      "jump": "i",
      "op": "JUMP"
    },
    "1610": {
      "op": "JUMPDEST"
    },
    "1611": {
      "op": "DUP4"
    },
    "1612": {
      "op": "MSTORE"
    },
    "1613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1615": {
      "op": "SWAP4"
    },
    "1616": {
      "op": "SWAP1"
    },
    "1617": {
      "op": "SWAP4"
    },
    "1618": {
      "op": "ADD"
    },
    "1619": {
      "op": "SWAP3"
    },
    "1620": {
      "op": "SWAP2"
    },
    "1621": {
      "op": "DUP5"
    },
    "1622": {
      "op": "ADD"
    },
    "1623": {
      "op": "SWAP2"
    },
    "1624": {
      "op": "DUP5"
    },
    "1625": {
      "op": "ADD"
    },
    "1626": {
      "op": "PUSH2",
      "value": "0x637"
    },
    "1629": {
      "op": "JUMP"
    },
    "1630": {
      "op": "JUMPDEST"
    },
    "1631": {
      "op": "POP"
    },
    "1632": {
      "op": "SWAP8"
    },
    "1633": {
      "op": "SWAP7"
    },
    "1634": {
      "op": "POP"
    },
    "1635": {
      "op": "POP"
    },
    "1636": {
      "op": "POP"
    },
    "1637": {
      "op": "POP"
    },
    "1638": {
      "op": "POP"
    },
    "1639": {
      "op": "POP"
    },
    "1640": {
      "op": "POP"
    },
    "1641": {
      "jump": "o",
      "op": "JUMP"
    },
    "1642": {
      "op": "JUMPDEST"
    },
    "1643": {
      "op": "DUP1"
    },
    "1644": {
      "op": "MLOAD"
    },
    "1645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1649": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1651": {
      "op": "SHL"
    },
    "1652": {
      "op": "SUB"
    },
    "1653": {
      "op": "NOT"
    },
    "1654": {
      "op": "DUP2"
    },
    "1655": {
      "op": "AND"
    },
    "1656": {
      "op": "DUP2"
    },
    "1657": {
      "op": "EQ"
    },
    "1658": {
      "op": "PUSH2",
      "value": "0x20A"
    },
    "1661": {
      "op": "JUMPI"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1664": {
      "op": "DUP1"
    },
    "1665": {
      "op": "REVERT"
    },
    "1666": {
      "op": "JUMPDEST"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1669": {
      "op": "DUP3"
    },
    "1670": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1672": {
      "op": "DUP4"
    },
    "1673": {
      "op": "ADD"
    },
    "1674": {
      "op": "SLT"
    },
    "1675": {
      "op": "PUSH2",
      "value": "0x692"
    },
    "1678": {
      "op": "JUMPI"
    },
    "1679": {
      "op": "DUP1"
    },
    "1680": {
      "op": "DUP2"
    },
    "1681": {
      "op": "REVERT"
    },
    "1682": {
      "op": "JUMPDEST"
    },
    "1683": {
      "op": "DUP2"
    },
    "1684": {
      "op": "CALLDATALOAD"
    },
    "1685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1689": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1691": {
      "op": "SHL"
    },
    "1692": {
      "op": "SUB"
    },
    "1693": {
      "op": "DUP2"
    },
    "1694": {
      "op": "GT"
    },
    "1695": {
      "op": "ISZERO"
    },
    "1696": {
      "op": "PUSH2",
      "value": "0x6A5"
    },
    "1699": {
      "op": "JUMPI"
    },
    "1700": {
      "op": "INVALID"
    },
    "1701": {
      "op": "JUMPDEST"
    },
    "1702": {
      "op": "PUSH2",
      "value": "0x6B8"
    },
    "1705": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1707": {
      "op": "DUP3"
    },
    "1708": {
      "op": "ADD"
    },
    "1709": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1711": {
      "op": "NOT"
    },
    "1712": {
      "op": "AND"
    },
    "1713": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1715": {
      "op": "ADD"
    },
    "1716": {
      "op": "PUSH2",
      "value": "0xB2E"
    },
    "1719": {
      "jump": "i",
      "op": "JUMP"
    },
    "1720": {
      "op": "JUMPDEST"
    },
    "1721": {
      "op": "DUP2"
    },
    "1722": {
      "op": "DUP2"
    },
    "1723": {
      "op": "MSTORE"
    },
    "1724": {
      "op": "DUP5"
    },
    "1725": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1727": {
      "op": "DUP4"
    },
    "1728": {
      "op": "DUP7"
    },
    "1729": {
      "op": "ADD"
    },
    "1730": {
      "op": "ADD"
    },
    "1731": {
      "op": "GT"
    },
    "1732": {
      "op": "ISZERO"
    },
    "1733": {
      "op": "PUSH2",
      "value": "0x6CC"
    },
    "1736": {
      "op": "JUMPI"
    },
    "1737": {
      "op": "DUP3"
    },
    "1738": {
      "op": "DUP4"
    },
    "1739": {
      "op": "REVERT"
    },
    "1740": {
      "op": "JUMPDEST"
    },
    "1741": {
      "op": "DUP2"
    },
    "1742": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1744": {
      "op": "DUP6"
    },
    "1745": {
      "op": "ADD"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1748": {
      "op": "DUP4"
    },
    "1749": {
      "op": "ADD"
    },
    "1750": {
      "op": "CALLDATACOPY"
    },
    "1751": {
      "op": "SWAP1"
    },
    "1752": {
      "op": "DUP2"
    },
    "1753": {
      "op": "ADD"
    },
    "1754": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1756": {
      "op": "ADD"
    },
    "1757": {
      "op": "SWAP2"
    },
    "1758": {
      "op": "SWAP1"
    },
    "1759": {
      "op": "SWAP2"
    },
    "1760": {
      "op": "MSTORE"
    },
    "1761": {
      "op": "SWAP3"
    },
    "1762": {
      "op": "SWAP2"
    },
    "1763": {
      "op": "POP"
    },
    "1764": {
      "op": "POP"
    },
    "1765": {
      "jump": "o",
      "op": "JUMP"
    },
    "1766": {
      "op": "JUMPDEST"
    },
    "1767": {
      "op": "DUP1"
    },
    "1768": {
      "op": "MLOAD"
    },
    "1769": {
      "op": "PUSH2",
      "value": "0x20A"
    },
    "1772": {
      "op": "DUP2"
    },
    "1773": {
      "op": "PUSH2",
      "value": "0xB69"
    },
    "1776": {
      "jump": "i",
      "op": "JUMP"
    },
    "1777": {
      "op": "JUMPDEST"
    },
    "1778": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1780": {
      "op": "DUP1"
    },
    "1781": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1783": {
      "op": "DUP4"
    },
    "1784": {
      "op": "DUP6"
    },
    "1785": {
      "op": "SUB"
    },
    "1786": {
      "op": "SLT"
    },
    "1787": {
      "op": "ISZERO"
    },
    "1788": {
      "op": "PUSH2",
      "value": "0x703"
    },
    "1791": {
      "op": "JUMPI"
    },
    "1792": {
      "op": "DUP2"
    },
    "1793": {
      "op": "DUP3"
    },
    "1794": {
      "op": "REVERT"
    },
    "1795": {
      "op": "JUMPDEST"
    },
    "1796": {
      "op": "DUP3"
    },
    "1797": {
      "op": "CALLDATALOAD"
    },
    "1798": {
      "op": "PUSH2",
      "value": "0x70E"
    },
    "1801": {
      "op": "DUP2"
    },
    "1802": {
      "op": "PUSH2",
      "value": "0xB51"
    },
    "1805": {
      "jump": "i",
      "op": "JUMP"
    },
    "1806": {
      "op": "JUMPDEST"
    },
    "1807": {
      "op": "SWAP2"
    },
    "1808": {
      "op": "POP"
    },
    "1809": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1811": {
      "op": "DUP4"
    },
    "1812": {
      "op": "ADD"
    },
    "1813": {
      "op": "CALLDATALOAD"
    },
    "1814": {
      "op": "PUSH2",
      "value": "0x71E"
    },
    "1817": {
      "op": "DUP2"
    },
    "1818": {
      "op": "PUSH2",
      "value": "0xB69"
    },
    "1821": {
      "jump": "i",
      "op": "JUMP"
    },
    "1822": {
      "op": "JUMPDEST"
    },
    "1823": {
      "op": "DUP1"
    },
    "1824": {
      "op": "SWAP2"
    },
    "1825": {
      "op": "POP"
    },
    "1826": {
      "op": "POP"
    },
    "1827": {
      "op": "SWAP3"
    },
    "1828": {
      "op": "POP"
    },
    "1829": {
      "op": "SWAP3"
    },
    "1830": {
      "op": "SWAP1"
    },
    "1831": {
      "op": "POP"
    },
    "1832": {
      "jump": "o",
      "op": "JUMP"
    },
    "1833": {
      "op": "JUMPDEST"
    },
    "1834": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1836": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1838": {
      "op": "DUP3"
    },
    "1839": {
      "op": "DUP5"
    },
    "1840": {
      "op": "SUB"
    },
    "1841": {
      "op": "SLT"
    },
    "1842": {
      "op": "ISZERO"
    },
    "1843": {
      "op": "PUSH2",
      "value": "0x73A"
    },
    "1846": {
      "op": "JUMPI"
    },
    "1847": {
      "op": "DUP1"
    },
    "1848": {
      "op": "DUP2"
    },
    "1849": {
      "op": "REVERT"
    },
    "1850": {
      "op": "JUMPDEST"
    },
    "1851": {
      "op": "DUP2"
    },
    "1852": {
      "op": "MLOAD"
    },
    "1853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1857": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1859": {
      "op": "SHL"
    },
    "1860": {
      "op": "SUB"
    },
    "1861": {
      "op": "DUP1"
    },
    "1862": {
      "op": "DUP3"
    },
    "1863": {
      "op": "GT"
    },
    "1864": {
      "op": "ISZERO"
    },
    "1865": {
      "op": "PUSH2",
      "value": "0x750"
    },
    "1868": {
      "op": "JUMPI"
    },
    "1869": {
      "op": "DUP3"
    },
    "1870": {
      "op": "DUP4"
    },
    "1871": {
      "op": "REVERT"
    },
    "1872": {
      "op": "JUMPDEST"
    },
    "1873": {
      "op": "DUP2"
    },
    "1874": {
      "op": "DUP5"
    },
    "1875": {
      "op": "ADD"
    },
    "1876": {
      "op": "SWAP2"
    },
    "1877": {
      "op": "POP"
    },
    "1878": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "1881": {
      "op": "DUP1"
    },
    "1882": {
      "op": "DUP4"
    },
    "1883": {
      "op": "DUP8"
    },
    "1884": {
      "op": "SUB"
    },
    "1885": {
      "op": "SLT"
    },
    "1886": {
      "op": "ISZERO"
    },
    "1887": {
      "op": "PUSH2",
      "value": "0x766"
    },
    "1890": {
      "op": "JUMPI"
    },
    "1891": {
      "op": "DUP4"
    },
    "1892": {
      "op": "DUP5"
    },
    "1893": {
      "op": "REVERT"
    },
    "1894": {
      "op": "JUMPDEST"
    },
    "1895": {
      "op": "PUSH2",
      "value": "0x76F"
    },
    "1898": {
      "op": "DUP2"
    },
    "1899": {
      "op": "PUSH2",
      "value": "0xB2E"
    },
    "1902": {
      "jump": "i",
      "op": "JUMP"
    },
    "1903": {
      "op": "JUMPDEST"
    },
    "1904": {
      "op": "SWAP1"
    },
    "1905": {
      "op": "POP"
    },
    "1906": {
      "op": "PUSH2",
      "value": "0x77A"
    },
    "1909": {
      "op": "DUP4"
    },
    "1910": {
      "op": "PUSH2",
      "value": "0x6E6"
    },
    "1913": {
      "jump": "i",
      "op": "JUMP"
    },
    "1914": {
      "op": "JUMPDEST"
    },
    "1915": {
      "op": "DUP2"
    },
    "1916": {
      "op": "MSTORE"
    },
    "1917": {
      "op": "PUSH2",
      "value": "0x788"
    },
    "1920": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1922": {
      "op": "DUP5"
    },
    "1923": {
      "op": "ADD"
    },
    "1924": {
      "op": "PUSH2",
      "value": "0x6E6"
    },
    "1927": {
      "jump": "i",
      "op": "JUMP"
    },
    "1928": {
      "op": "JUMPDEST"
    },
    "1929": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1931": {
      "op": "DUP3"
    },
    "1932": {
      "op": "ADD"
    },
    "1933": {
      "op": "MSTORE"
    },
    "1934": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1936": {
      "op": "DUP4"
    },
    "1937": {
      "op": "ADD"
    },
    "1938": {
      "op": "MLOAD"
    },
    "1939": {
      "op": "DUP3"
    },
    "1940": {
      "op": "DUP2"
    },
    "1941": {
      "op": "GT"
    },
    "1942": {
      "op": "ISZERO"
    },
    "1943": {
      "op": "PUSH2",
      "value": "0x79E"
    },
    "1946": {
      "op": "JUMPI"
    },
    "1947": {
      "op": "DUP5"
    },
    "1948": {
      "op": "DUP6"
    },
    "1949": {
      "op": "REVERT"
    },
    "1950": {
      "op": "JUMPDEST"
    },
    "1951": {
      "op": "PUSH2",
      "value": "0x7AA"
    },
    "1954": {
      "op": "DUP8"
    },
    "1955": {
      "op": "DUP3"
    },
    "1956": {
      "op": "DUP7"
    },
    "1957": {
      "op": "ADD"
    },
    "1958": {
      "op": "PUSH2",
      "value": "0x5E6"
    },
    "1961": {
      "jump": "i",
      "op": "JUMP"
    },
    "1962": {
      "op": "JUMPDEST"
    },
    "1963": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1965": {
      "op": "DUP4"
    },
    "1966": {
      "op": "ADD"
    },
    "1967": {
      "op": "MSTORE"
    },
    "1968": {
      "op": "POP"
    },
    "1969": {
      "op": "PUSH2",
      "value": "0x7BC"
    },
    "1972": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1974": {
      "op": "DUP5"
    },
    "1975": {
      "op": "ADD"
    },
    "1976": {
      "op": "PUSH2",
      "value": "0x6E6"
    },
    "1979": {
      "jump": "i",
      "op": "JUMP"
    },
    "1980": {
      "op": "JUMPDEST"
    },
    "1981": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1983": {
      "op": "DUP3"
    },
    "1984": {
      "op": "ADD"
    },
    "1985": {
      "op": "MSTORE"
    },
    "1986": {
      "op": "PUSH2",
      "value": "0x7CD"
    },
    "1989": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1991": {
      "op": "DUP5"
    },
    "1992": {
      "op": "ADD"
    },
    "1993": {
      "op": "PUSH2",
      "value": "0x6E6"
    },
    "1996": {
      "jump": "i",
      "op": "JUMP"
    },
    "1997": {
      "op": "JUMPDEST"
    },
    "1998": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2000": {
      "op": "DUP3"
    },
    "2001": {
      "op": "ADD"
    },
    "2002": {
      "op": "MSTORE"
    },
    "2003": {
      "op": "PUSH2",
      "value": "0x7DE"
    },
    "2006": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2008": {
      "op": "DUP5"
    },
    "2009": {
      "op": "ADD"
    },
    "2010": {
      "op": "PUSH2",
      "value": "0x6E6"
    },
    "2013": {
      "jump": "i",
      "op": "JUMP"
    },
    "2014": {
      "op": "JUMPDEST"
    },
    "2015": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2017": {
      "op": "DUP3"
    },
    "2018": {
      "op": "ADD"
    },
    "2019": {
      "op": "MSTORE"
    },
    "2020": {
      "op": "PUSH2",
      "value": "0x7EF"
    },
    "2023": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2025": {
      "op": "DUP5"
    },
    "2026": {
      "op": "ADD"
    },
    "2027": {
      "op": "PUSH2",
      "value": "0x6E6"
    },
    "2030": {
      "jump": "i",
      "op": "JUMP"
    },
    "2031": {
      "op": "JUMPDEST"
    },
    "2032": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2034": {
      "op": "DUP3"
    },
    "2035": {
      "op": "ADD"
    },
    "2036": {
      "op": "MSTORE"
    },
    "2037": {
      "op": "PUSH2",
      "value": "0x800"
    },
    "2040": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2042": {
      "op": "DUP5"
    },
    "2043": {
      "op": "ADD"
    },
    "2044": {
      "op": "PUSH2",
      "value": "0x6E6"
    },
    "2047": {
      "jump": "i",
      "op": "JUMP"
    },
    "2048": {
      "op": "JUMPDEST"
    },
    "2049": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2051": {
      "op": "DUP3"
    },
    "2052": {
      "op": "ADD"
    },
    "2053": {
      "op": "MSTORE"
    },
    "2054": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "2057": {
      "op": "SWAP2"
    },
    "2058": {
      "op": "POP"
    },
    "2059": {
      "op": "PUSH2",
      "value": "0x815"
    },
    "2062": {
      "op": "DUP3"
    },
    "2063": {
      "op": "DUP5"
    },
    "2064": {
      "op": "ADD"
    },
    "2065": {
      "op": "PUSH2",
      "value": "0x5DB"
    },
    "2068": {
      "jump": "i",
      "op": "JUMP"
    },
    "2069": {
      "op": "JUMPDEST"
    },
    "2070": {
      "op": "DUP3"
    },
    "2071": {
      "op": "DUP3"
    },
    "2072": {
      "op": "ADD"
    },
    "2073": {
      "op": "MSTORE"
    },
    "2074": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "2077": {
      "op": "SWAP2"
    },
    "2078": {
      "op": "POP"
    },
    "2079": {
      "op": "PUSH2",
      "value": "0x829"
    },
    "2082": {
      "op": "DUP3"
    },
    "2083": {
      "op": "DUP5"
    },
    "2084": {
      "op": "ADD"
    },
    "2085": {
      "op": "PUSH2",
      "value": "0x5DB"
    },
    "2088": {
      "jump": "i",
      "op": "JUMP"
    },
    "2089": {
      "op": "JUMPDEST"
    },
    "2090": {
      "op": "DUP3"
    },
    "2091": {
      "op": "DUP3"
    },
    "2092": {
      "op": "ADD"
    },
    "2093": {
      "op": "MSTORE"
    },
    "2094": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "2097": {
      "op": "SWAP2"
    },
    "2098": {
      "op": "POP"
    },
    "2099": {
      "op": "PUSH2",
      "value": "0x83D"
    },
    "2102": {
      "op": "DUP3"
    },
    "2103": {
      "op": "DUP5"
    },
    "2104": {
      "op": "ADD"
    },
    "2105": {
      "op": "PUSH2",
      "value": "0x66A"
    },
    "2108": {
      "jump": "i",
      "op": "JUMP"
    },
    "2109": {
      "op": "JUMPDEST"
    },
    "2110": {
      "op": "DUP3"
    },
    "2111": {
      "op": "DUP3"
    },
    "2112": {
      "op": "ADD"
    },
    "2113": {
      "op": "MSTORE"
    },
    "2114": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "2117": {
      "op": "SWAP2"
    },
    "2118": {
      "op": "POP"
    },
    "2119": {
      "op": "PUSH2",
      "value": "0x851"
    },
    "2122": {
      "op": "DUP3"
    },
    "2123": {
      "op": "DUP5"
    },
    "2124": {
      "op": "ADD"
    },
    "2125": {
      "op": "PUSH2",
      "value": "0x6E6"
    },
    "2128": {
      "jump": "i",
      "op": "JUMP"
    },
    "2129": {
      "op": "JUMPDEST"
    },
    "2130": {
      "op": "SWAP2"
    },
    "2131": {
      "op": "DUP2"
    },
    "2132": {
      "op": "ADD"
    },
    "2133": {
      "op": "SWAP2"
    },
    "2134": {
      "op": "SWAP1"
    },
    "2135": {
      "op": "SWAP2"
    },
    "2136": {
      "op": "MSTORE"
    },
    "2137": {
      "op": "SWAP5"
    },
    "2138": {
      "op": "SWAP4"
    },
    "2139": {
      "op": "POP"
    },
    "2140": {
      "op": "POP"
    },
    "2141": {
      "op": "POP"
    },
    "2142": {
      "op": "POP"
    },
    "2143": {
      "jump": "o",
      "op": "JUMP"
    },
    "2144": {
      "op": "JUMPDEST"
    },
    "2145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2147": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2149": {
      "op": "DUP3"
    },
    "2150": {
      "op": "DUP5"
    },
    "2151": {
      "op": "SUB"
    },
    "2152": {
      "op": "SLT"
    },
    "2153": {
      "op": "ISZERO"
    },
    "2154": {
      "op": "PUSH2",
      "value": "0x871"
    },
    "2157": {
      "op": "JUMPI"
    },
    "2158": {
      "op": "DUP1"
    },
    "2159": {
      "op": "DUP2"
    },
    "2160": {
      "op": "REVERT"
    },
    "2161": {
      "op": "JUMPDEST"
    },
    "2162": {
      "op": "DUP2"
    },
    "2163": {
      "op": "CALLDATALOAD"
    },
    "2164": {
      "op": "PUSH2",
      "value": "0x87C"
    },
    "2167": {
      "op": "DUP2"
    },
    "2168": {
      "op": "PUSH2",
      "value": "0xB69"
    },
    "2171": {
      "jump": "i",
      "op": "JUMP"
    },
    "2172": {
      "op": "JUMPDEST"
    },
    "2173": {
      "op": "SWAP4"
    },
    "2174": {
      "op": "SWAP3"
    },
    "2175": {
      "op": "POP"
    },
    "2176": {
      "op": "POP"
    },
    "2177": {
      "op": "POP"
    },
    "2178": {
      "jump": "o",
      "op": "JUMP"
    },
    "2179": {
      "op": "JUMPDEST"
    },
    "2180": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2182": {
      "op": "DUP1"
    },
    "2183": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2185": {
      "op": "DUP4"
    },
    "2186": {
      "op": "DUP6"
    },
    "2187": {
      "op": "SUB"
    },
    "2188": {
      "op": "SLT"
    },
    "2189": {
      "op": "ISZERO"
    },
    "2190": {
      "op": "PUSH2",
      "value": "0x895"
    },
    "2193": {
      "op": "JUMPI"
    },
    "2194": {
      "op": "DUP2"
    },
    "2195": {
      "op": "DUP3"
    },
    "2196": {
      "op": "REVERT"
    },
    "2197": {
      "op": "JUMPDEST"
    },
    "2198": {
      "op": "DUP3"
    },
    "2199": {
      "op": "CALLDATALOAD"
    },
    "2200": {
      "op": "PUSH2",
      "value": "0x8A0"
    },
    "2203": {
      "op": "DUP2"
    },
    "2204": {
      "op": "PUSH2",
      "value": "0xB69"
    },
    "2207": {
      "jump": "i",
      "op": "JUMP"
    },
    "2208": {
      "op": "JUMPDEST"
    },
    "2209": {
      "op": "SWAP2"
    },
    "2210": {
      "op": "POP"
    },
    "2211": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2213": {
      "op": "DUP4"
    },
    "2214": {
      "op": "ADD"
    },
    "2215": {
      "op": "CALLDATALOAD"
    },
    "2216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2220": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2222": {
      "op": "SHL"
    },
    "2223": {
      "op": "SUB"
    },
    "2224": {
      "op": "DUP2"
    },
    "2225": {
      "op": "GT"
    },
    "2226": {
      "op": "ISZERO"
    },
    "2227": {
      "op": "PUSH2",
      "value": "0x8BA"
    },
    "2230": {
      "op": "JUMPI"
    },
    "2231": {
      "op": "DUP2"
    },
    "2232": {
      "op": "DUP3"
    },
    "2233": {
      "op": "REVERT"
    },
    "2234": {
      "op": "JUMPDEST"
    },
    "2235": {
      "op": "PUSH2",
      "value": "0x8C6"
    },
    "2238": {
      "op": "DUP6"
    },
    "2239": {
      "op": "DUP3"
    },
    "2240": {
      "op": "DUP7"
    },
    "2241": {
      "op": "ADD"
    },
    "2242": {
      "op": "PUSH2",
      "value": "0x682"
    },
    "2245": {
      "jump": "i",
      "op": "JUMP"
    },
    "2246": {
      "op": "JUMPDEST"
    },
    "2247": {
      "op": "SWAP2"
    },
    "2248": {
      "op": "POP"
    },
    "2249": {
      "op": "POP"
    },
    "2250": {
      "op": "SWAP3"
    },
    "2251": {
      "op": "POP"
    },
    "2252": {
      "op": "SWAP3"
    },
    "2253": {
      "op": "SWAP1"
    },
    "2254": {
      "op": "POP"
    },
    "2255": {
      "jump": "o",
      "op": "JUMP"
    },
    "2256": {
      "op": "JUMPDEST"
    },
    "2257": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2259": {
      "op": "DUP1"
    },
    "2260": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2262": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2264": {
      "op": "DUP5"
    },
    "2265": {
      "op": "DUP7"
    },
    "2266": {
      "op": "SUB"
    },
    "2267": {
      "op": "SLT"
    },
    "2268": {
      "op": "ISZERO"
    },
    "2269": {
      "op": "PUSH2",
      "value": "0x8E4"
    },
    "2272": {
      "op": "JUMPI"
    },
    "2273": {
      "op": "DUP1"
    },
    "2274": {
      "op": "DUP2"
    },
    "2275": {
      "op": "REVERT"
    },
    "2276": {
      "op": "JUMPDEST"
    },
    "2277": {
      "op": "DUP4"
    },
    "2278": {
      "op": "CALLDATALOAD"
    },
    "2279": {
      "op": "PUSH2",
      "value": "0x8EF"
    },
    "2282": {
      "op": "DUP2"
    },
    "2283": {
      "op": "PUSH2",
      "value": "0xB69"
    },
    "2286": {
      "jump": "i",
      "op": "JUMP"
    },
    "2287": {
      "op": "JUMPDEST"
    },
    "2288": {
      "op": "SWAP3"
    },
    "2289": {
      "op": "POP"
    },
    "2290": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2292": {
      "op": "DUP5"
    },
    "2293": {
      "op": "ADD"
    },
    "2294": {
      "op": "CALLDATALOAD"
    },
    "2295": {
      "op": "PUSH2",
      "value": "0x8FF"
    },
    "2298": {
      "op": "DUP2"
    },
    "2299": {
      "op": "PUSH2",
      "value": "0xB69"
    },
    "2302": {
      "jump": "i",
      "op": "JUMP"
    },
    "2303": {
      "op": "JUMPDEST"
    },
    "2304": {
      "op": "SWAP2"
    },
    "2305": {
      "op": "POP"
    },
    "2306": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2308": {
      "op": "DUP5"
    },
    "2309": {
      "op": "ADD"
    },
    "2310": {
      "op": "CALLDATALOAD"
    },
    "2311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2315": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2317": {
      "op": "SHL"
    },
    "2318": {
      "op": "SUB"
    },
    "2319": {
      "op": "DUP2"
    },
    "2320": {
      "op": "GT"
    },
    "2321": {
      "op": "ISZERO"
    },
    "2322": {
      "op": "PUSH2",
      "value": "0x919"
    },
    "2325": {
      "op": "JUMPI"
    },
    "2326": {
      "op": "DUP2"
    },
    "2327": {
      "op": "DUP3"
    },
    "2328": {
      "op": "REVERT"
    },
    "2329": {
      "op": "JUMPDEST"
    },
    "2330": {
      "op": "PUSH2",
      "value": "0x925"
    },
    "2333": {
      "op": "DUP7"
    },
    "2334": {
      "op": "DUP3"
    },
    "2335": {
      "op": "DUP8"
    },
    "2336": {
      "op": "ADD"
    },
    "2337": {
      "op": "PUSH2",
      "value": "0x682"
    },
    "2340": {
      "jump": "i",
      "op": "JUMP"
    },
    "2341": {
      "op": "JUMPDEST"
    },
    "2342": {
      "op": "SWAP2"
    },
    "2343": {
      "op": "POP"
    },
    "2344": {
      "op": "POP"
    },
    "2345": {
      "op": "SWAP3"
    },
    "2346": {
      "op": "POP"
    },
    "2347": {
      "op": "SWAP3"
    },
    "2348": {
      "op": "POP"
    },
    "2349": {
      "op": "SWAP3"
    },
    "2350": {
      "jump": "o",
      "op": "JUMP"
    },
    "2351": {
      "op": "JUMPDEST"
    },
    "2352": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2354": {
      "op": "DUP2"
    },
    "2355": {
      "op": "MLOAD"
    },
    "2356": {
      "op": "DUP1"
    },
    "2357": {
      "op": "DUP5"
    },
    "2358": {
      "op": "MSTORE"
    },
    "2359": {
      "op": "DUP2"
    },
    "2360": {
      "op": "JUMPDEST"
    },
    "2361": {
      "op": "DUP2"
    },
    "2362": {
      "op": "DUP2"
    },
    "2363": {
      "op": "LT"
    },
    "2364": {
      "op": "ISZERO"
    },
    "2365": {
      "op": "PUSH2",
      "value": "0x954"
    },
    "2368": {
      "op": "JUMPI"
    },
    "2369": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2371": {
      "op": "DUP2"
    },
    "2372": {
      "op": "DUP6"
    },
    "2373": {
      "op": "ADD"
    },
    "2374": {
      "op": "DUP2"
    },
    "2375": {
      "op": "ADD"
    },
    "2376": {
      "op": "MLOAD"
    },
    "2377": {
      "op": "DUP7"
    },
    "2378": {
      "op": "DUP4"
    },
    "2379": {
      "op": "ADD"
    },
    "2380": {
      "op": "DUP3"
    },
    "2381": {
      "op": "ADD"
    },
    "2382": {
      "op": "MSTORE"
    },
    "2383": {
      "op": "ADD"
    },
    "2384": {
      "op": "PUSH2",
      "value": "0x938"
    },
    "2387": {
      "op": "JUMP"
    },
    "2388": {
      "op": "JUMPDEST"
    },
    "2389": {
      "op": "DUP2"
    },
    "2390": {
      "op": "DUP2"
    },
    "2391": {
      "op": "GT"
    },
    "2392": {
      "op": "ISZERO"
    },
    "2393": {
      "op": "PUSH2",
      "value": "0x965"
    },
    "2396": {
      "op": "JUMPI"
    },
    "2397": {
      "op": "DUP3"
    },
    "2398": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2400": {
      "op": "DUP4"
    },
    "2401": {
      "op": "DUP8"
    },
    "2402": {
      "op": "ADD"
    },
    "2403": {
      "op": "ADD"
    },
    "2404": {
      "op": "MSTORE"
    },
    "2405": {
      "op": "JUMPDEST"
    },
    "2406": {
      "op": "POP"
    },
    "2407": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2409": {
      "op": "ADD"
    },
    "2410": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2412": {
      "op": "NOT"
    },
    "2413": {
      "op": "AND"
    },
    "2414": {
      "op": "SWAP3"
    },
    "2415": {
      "op": "SWAP1"
    },
    "2416": {
      "op": "SWAP3"
    },
    "2417": {
      "op": "ADD"
    },
    "2418": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2420": {
      "op": "ADD"
    },
    "2421": {
      "op": "SWAP3"
    },
    "2422": {
      "op": "SWAP2"
    },
    "2423": {
      "op": "POP"
    },
    "2424": {
      "op": "POP"
    },
    "2425": {
      "jump": "o",
      "op": "JUMP"
    },
    "2426": {
      "op": "JUMPDEST"
    },
    "2427": {
      "op": "SWAP1"
    },
    "2428": {
      "op": "ISZERO"
    },
    "2429": {
      "op": "ISZERO"
    },
    "2430": {
      "op": "DUP2"
    },
    "2431": {
      "op": "MSTORE"
    },
    "2432": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2434": {
      "op": "ADD"
    },
    "2435": {
      "op": "SWAP1"
    },
    "2436": {
      "jump": "o",
      "op": "JUMP"
    },
    "2437": {
      "op": "JUMPDEST"
    },
    "2438": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2440": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2442": {
      "op": "DUP3"
    },
    "2443": {
      "op": "MSTORE"
    },
    "2444": {
      "op": "PUSH2",
      "value": "0x87C"
    },
    "2447": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2449": {
      "op": "DUP4"
    },
    "2450": {
      "op": "ADD"
    },
    "2451": {
      "op": "DUP5"
    },
    "2452": {
      "op": "PUSH2",
      "value": "0x92F"
    },
    "2455": {
      "jump": "i",
      "op": "JUMP"
    },
    "2456": {
      "op": "JUMPDEST"
    },
    "2457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2461": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2463": {
      "op": "SHL"
    },
    "2464": {
      "op": "SUB"
    },
    "2465": {
      "op": "SWAP2"
    },
    "2466": {
      "op": "SWAP1"
    },
    "2467": {
      "op": "SWAP2"
    },
    "2468": {
      "op": "AND"
    },
    "2469": {
      "op": "DUP2"
    },
    "2470": {
      "op": "MSTORE"
    },
    "2471": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2473": {
      "op": "ADD"
    },
    "2474": {
      "op": "SWAP1"
    },
    "2475": {
      "jump": "o",
      "op": "JUMP"
    },
    "2476": {
      "op": "JUMPDEST"
    },
    "2477": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2479": {
      "op": "DUP1"
    },
    "2480": {
      "op": "DUP3"
    },
    "2481": {
      "op": "MSTORE"
    },
    "2482": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "2484": {
      "op": "SWAP1"
    },
    "2485": {
      "op": "DUP3"
    },
    "2486": {
      "op": "ADD"
    },
    "2487": {
      "op": "MSTORE"
    },
    "2488": {
      "op": "PUSH32",
      "value": "0x4B657942726F616463617374436F6E74726163743A20636F6E66696720697320"
    },
    "2521": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2523": {
      "op": "DUP3"
    },
    "2524": {
      "op": "ADD"
    },
    "2525": {
      "op": "MSTORE"
    },
    "2526": {
      "op": "PUSH8",
      "value": "0x696E616374697665"
    },
    "2535": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2537": {
      "op": "SHL"
    },
    "2538": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2540": {
      "op": "DUP3"
    },
    "2541": {
      "op": "ADD"
    },
    "2542": {
      "op": "MSTORE"
    },
    "2543": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2545": {
      "op": "ADD"
    },
    "2546": {
      "op": "SWAP1"
    },
    "2547": {
      "jump": "o",
      "op": "JUMP"
    },
    "2548": {
      "op": "JUMPDEST"
    },
    "2549": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2551": {
      "op": "DUP1"
    },
    "2552": {
      "op": "DUP3"
    },
    "2553": {
      "op": "MSTORE"
    },
    "2554": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "2556": {
      "op": "SWAP1"
    },
    "2557": {
      "op": "DUP3"
    },
    "2558": {
      "op": "ADD"
    },
    "2559": {
      "op": "MSTORE"
    },
    "2560": {
      "op": "PUSH32",
      "value": "0x4B657942726F616463617374436F6E74726163743A2073656E64657220697320"
    },
    "2593": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2595": {
      "op": "DUP3"
    },
    "2596": {
      "op": "ADD"
    },
    "2597": {
      "op": "MSTORE"
    },
    "2598": {
      "op": "PUSH10",
      "value": "0x3737BA1035B2BCB832B9"
    },
    "2609": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "2611": {
      "op": "SHL"
    },
    "2612": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2614": {
      "op": "DUP3"
    },
    "2615": {
      "op": "ADD"
    },
    "2616": {
      "op": "MSTORE"
    },
    "2617": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2619": {
      "op": "ADD"
    },
    "2620": {
      "op": "SWAP1"
    },
    "2621": {
      "jump": "o",
      "op": "JUMP"
    },
    "2622": {
      "op": "JUMPDEST"
    },
    "2623": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2625": {
      "op": "DUP1"
    },
    "2626": {
      "op": "DUP3"
    },
    "2627": {
      "op": "MSTORE"
    },
    "2628": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "2630": {
      "op": "SWAP1"
    },
    "2631": {
      "op": "DUP3"
    },
    "2632": {
      "op": "ADD"
    },
    "2633": {
      "op": "MSTORE"
    },
    "2634": {
      "op": "PUSH32",
      "value": "0x4B657942726F616463617374436F6E74726163743A206B657970657220696E64"
    },
    "2667": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2669": {
      "op": "DUP3"
    },
    "2670": {
      "op": "ADD"
    },
    "2671": {
      "op": "MSTORE"
    },
    "2672": {
      "op": "PUSH15",
      "value": "0x6578206F7574206F662072616E6765"
    },
    "2688": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "2690": {
      "op": "SHL"
    },
    "2691": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2693": {
      "op": "DUP3"
    },
    "2694": {
      "op": "ADD"
    },
    "2695": {
      "op": "MSTORE"
    },
    "2696": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2698": {
      "op": "ADD"
    },
    "2699": {
      "op": "SWAP1"
    },
    "2700": {
      "jump": "o",
      "op": "JUMP"
    },
    "2701": {
      "op": "JUMPDEST"
    },
    "2702": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2704": {
      "op": "DUP1"
    },
    "2705": {
      "op": "DUP3"
    },
    "2706": {
      "op": "MSTORE"
    },
    "2707": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "2709": {
      "op": "SWAP1"
    },
    "2710": {
      "op": "DUP3"
    },
    "2711": {
      "op": "ADD"
    },
    "2712": {
      "op": "MSTORE"
    },
    "2713": {
      "op": "PUSH32",
      "value": "0x4B657942726F616463617374436F6E74726163743A206B657970657220686173"
    },
    "2746": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2748": {
      "op": "DUP3"
    },
    "2749": {
      "op": "ADD"
    },
    "2750": {
      "op": "MSTORE"
    },
    "2751": {
      "op": "PUSH14",
      "value": "0x8185B1C9958591E481D9BDD1959"
    },
    "2766": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "2768": {
      "op": "SHL"
    },
    "2769": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2771": {
      "op": "DUP3"
    },
    "2772": {
      "op": "ADD"
    },
    "2773": {
      "op": "MSTORE"
    },
    "2774": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2776": {
      "op": "ADD"
    },
    "2777": {
      "op": "SWAP1"
    },
    "2778": {
      "jump": "o",
      "op": "JUMP"
    },
    "2779": {
      "op": "JUMPDEST"
    },
    "2780": {
      "op": "SWAP1"
    },
    "2781": {
      "op": "DUP2"
    },
    "2782": {
      "op": "MSTORE"
    },
    "2783": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2785": {
      "op": "ADD"
    },
    "2786": {
      "op": "SWAP1"
    },
    "2787": {
      "jump": "o",
      "op": "JUMP"
    },
    "2788": {
      "op": "JUMPDEST"
    },
    "2789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2793": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2795": {
      "op": "SHL"
    },
    "2796": {
      "op": "SUB"
    },
    "2797": {
      "op": "SWAP2"
    },
    "2798": {
      "op": "SWAP1"
    },
    "2799": {
      "op": "SWAP2"
    },
    "2800": {
      "op": "AND"
    },
    "2801": {
      "op": "DUP2"
    },
    "2802": {
      "op": "MSTORE"
    },
    "2803": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2805": {
      "op": "ADD"
    },
    "2806": {
      "op": "SWAP1"
    },
    "2807": {
      "jump": "o",
      "op": "JUMP"
    },
    "2808": {
      "op": "JUMPDEST"
    },
    "2809": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2815": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2817": {
      "op": "SHL"
    },
    "2818": {
      "op": "SUB"
    },
    "2819": {
      "op": "DUP1"
    },
    "2820": {
      "op": "DUP7"
    },
    "2821": {
      "op": "AND"
    },
    "2822": {
      "op": "DUP4"
    },
    "2823": {
      "op": "MSTORE"
    },
    "2824": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2826": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2828": {
      "op": "DUP5"
    },
    "2829": {
      "op": "ADD"
    },
    "2830": {
      "op": "MSTORE"
    },
    "2831": {
      "op": "PUSH2",
      "value": "0xB1B"
    },
    "2834": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2836": {
      "op": "DUP5"
    },
    "2837": {
      "op": "ADD"
    },
    "2838": {
      "op": "DUP7"
    },
    "2839": {
      "op": "PUSH2",
      "value": "0x92F"
    },
    "2842": {
      "jump": "i",
      "op": "JUMP"
    },
    "2843": {
      "op": "JUMPDEST"
    },
    "2844": {
      "op": "SWAP2"
    },
    "2845": {
      "op": "POP"
    },
    "2846": {
      "op": "DUP1"
    },
    "2847": {
      "op": "DUP5"
    },
    "2848": {
      "op": "AND"
    },
    "2849": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2851": {
      "op": "DUP5"
    },
    "2852": {
      "op": "ADD"
    },
    "2853": {
      "op": "MSTORE"
    },
    "2854": {
      "op": "POP"
    },
    "2855": {
      "op": "SWAP5"
    },
    "2856": {
      "op": "SWAP4"
    },
    "2857": {
      "op": "POP"
    },
    "2858": {
      "op": "POP"
    },
    "2859": {
      "op": "POP"
    },
    "2860": {
      "op": "POP"
    },
    "2861": {
      "jump": "o",
      "op": "JUMP"
    },
    "2862": {
      "op": "JUMPDEST"
    },
    "2863": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2865": {
      "op": "MLOAD"
    },
    "2866": {
      "op": "DUP2"
    },
    "2867": {
      "op": "DUP2"
    },
    "2868": {
      "op": "ADD"
    },
    "2869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2873": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2875": {
      "op": "SHL"
    },
    "2876": {
      "op": "SUB"
    },
    "2877": {
      "op": "DUP2"
    },
    "2878": {
      "op": "GT"
    },
    "2879": {
      "op": "DUP3"
    },
    "2880": {
      "op": "DUP3"
    },
    "2881": {
      "op": "LT"
    },
    "2882": {
      "op": "OR"
    },
    "2883": {
      "op": "ISZERO"
    },
    "2884": {
      "op": "PUSH2",
      "value": "0xB49"
    },
    "2887": {
      "op": "JUMPI"
    },
    "2888": {
      "op": "INVALID"
    },
    "2889": {
      "op": "JUMPDEST"
    },
    "2890": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2892": {
      "op": "MSTORE"
    },
    "2893": {
      "op": "SWAP2"
    },
    "2894": {
      "op": "SWAP1"
    },
    "2895": {
      "op": "POP"
    },
    "2896": {
      "jump": "o",
      "op": "JUMP"
    },
    "2897": {
      "op": "JUMPDEST"
    },
    "2898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2902": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2904": {
      "op": "SHL"
    },
    "2905": {
      "op": "SUB"
    },
    "2906": {
      "op": "DUP2"
    },
    "2907": {
      "op": "AND"
    },
    "2908": {
      "op": "DUP2"
    },
    "2909": {
      "op": "EQ"
    },
    "2910": {
      "op": "PUSH2",
      "value": "0xB66"
    },
    "2913": {
      "op": "JUMPI"
    },
    "2914": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2916": {
      "op": "DUP1"
    },
    "2917": {
      "op": "REVERT"
    },
    "2918": {
      "op": "JUMPDEST"
    },
    "2919": {
      "op": "POP"
    },
    "2920": {
      "jump": "o",
      "op": "JUMP"
    },
    "2921": {
      "op": "JUMPDEST"
    },
    "2922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2926": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2928": {
      "op": "SHL"
    },
    "2929": {
      "op": "SUB"
    },
    "2930": {
      "op": "DUP2"
    },
    "2931": {
      "op": "AND"
    },
    "2932": {
      "op": "DUP2"
    },
    "2933": {
      "op": "EQ"
    },
    "2934": {
      "op": "PUSH2",
      "value": "0xB66"
    },
    "2937": {
      "op": "JUMPI"
    },
    "2938": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2940": {
      "op": "DUP1"
    },
    "2941": {
      "op": "REVERT"
    }
  },
  "sha1": "81331a6f05ccfba9045deb62780aff7c88e29576",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.7.0 <0.8.0;\npragma experimental ABIEncoderV2;\n\nimport {ConfigContract, BatchConfig} from \"./ConfigContract.sol\";\n\n/// @title A contract that keypers can use to vote on eon public keys. For each eon public key\n///     generated, the keypers are expected to submit one vote. The contract logs the number of\n///     votes so that users can only pick keys once they have reached votes from enough keypers\n///     and thus have confidence that the key is actually correct.\ncontract KeyBroadcastContract {\n    /// @notice The event emitted when a keyper voted on an eon key.\n    /// @param keyper The address of the keyper who sent the vote.\n    /// @param startBatchIndex The index of the first batch for which the key should be used.\n    /// @param key The eon public key for which the keyper voted.\n    /// @param numVotes The number of keypers (including this one) who have voted for the key so\n    ///     far.\n    event Voted(\n        address indexed keyper,\n        uint64 startBatchIndex,\n        bytes key,\n        uint64 numVotes\n    );\n\n    ConfigContract private _configContract;\n    mapping(uint64 => mapping(address => bool)) private _voted; // start batch index => keyper => voted or not\n    mapping(uint64 => mapping(bytes32 => uint64)) private _numVotes; // start batch index => key hash => number of votes\n    mapping(bytes32 => bytes) private _keys; // key hash => key\n\n    mapping(uint64 => bytes32) private _bestKeyHashes;\n    mapping(uint64 => uint64) private _bestKeyNumVotes;\n\n    constructor(address configContractAddress) {\n        _configContract = ConfigContract(configContractAddress);\n    }\n\n    /// @notice Submit a vote.\n    /// @notice Can only be called by keypers defined in the config responsible for\n    ///     `startBatchIndex`, and only once per `startBatchIndex`.\n    /// @param keyperIndex The index of the calling keyper in the batch config.\n    /// @param startBatchIndex The index of the first batch for which the key should be used.\n    /// @param key The eon public key to vote for.\n    function vote(\n        uint64 keyperIndex,\n        uint64 startBatchIndex,\n        bytes memory key\n    ) public {\n        BatchConfig memory config = _configContract.getConfig(startBatchIndex);\n        require(\n            config.batchSpan > 0,\n            \"KeyBroadcastContract: config is inactive\"\n        );\n\n        require(\n            keyperIndex < config.keypers.length,\n            \"KeyBroadcastContract: keyper index out of range\"\n        );\n        require(\n            msg.sender == config.keypers[keyperIndex],\n            \"KeyBroadcastContract: sender is not keyper\"\n        );\n\n        require(\n            !_voted[startBatchIndex][msg.sender],\n            \"KeyBroadcastContract: keyper has already voted\"\n        );\n\n        bytes32 keyHash = keccak256(key);\n        // store the key if it hasn't already\n        if (_keys[keyHash].length == 0 && key.length == 0) {\n            _keys[keyHash] = key;\n        }\n\n        // count vote\n        uint64 numVotes = _numVotes[startBatchIndex][keyHash] + 1;\n        _voted[startBatchIndex][msg.sender] = true;\n        _numVotes[startBatchIndex][keyHash] = numVotes;\n\n        if (numVotes > _bestKeyNumVotes[startBatchIndex]) {\n            _bestKeyNumVotes[startBatchIndex] = numVotes;\n            _bestKeyHashes[startBatchIndex] = keyHash;\n        }\n\n        emit Voted({\n            keyper: msg.sender,\n            startBatchIndex: startBatchIndex,\n            key: key,\n            numVotes: numVotes\n        });\n    }\n\n    function getConfigContract() public view returns (ConfigContract) {\n        return _configContract;\n    }\n\n    function hasVoted(address keyper, uint64 startBatchIndex)\n        public\n        view\n        returns (bool)\n    {\n        return _voted[startBatchIndex][keyper];\n    }\n\n    function getNumVotes(uint64 startBatchIndex, bytes memory key)\n        public\n        view\n        returns (uint64)\n    {\n        return _numVotes[startBatchIndex][keccak256(key)];\n    }\n\n    function getBestKey(uint64 startBatchIndex) public view returns (bytes memory) {\n        return _keys[_bestKeyHashes[startBatchIndex]];\n    }\n\n    function getBestKeyNumVotes(uint64 startBatchIndex) public view returns (uint256) {\n        return _bestKeyNumVotes[startBatchIndex];\n    }\n}\n",
  "sourceMap": "521:3809:5:-:0;;;1552:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1605:15;:55;;-1:-1:-1;;;;;;1605:55:5;-1:-1:-1;;;;;1605:55:5;;;;;;;;;;521:3809;;14:310:22;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:22;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:22:o;:::-;521:3809:5;;;;;;",
  "sourcePath": "contracts/KeyBroadcastContract.sol",
  "type": "contract"
}
