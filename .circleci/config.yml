version: 2.1

commands:
  install-nox:
    steps:
      - run:
          name: Fingerprint the python installation
          command: |
            python3 tools/fingerprint_python.py | tee ~/fingerprint_python.txt
      - run:
          name: Disable pip version check
          command: |
            echo >> ${BASH_ENV} export PIP_DISABLE_PIP_VERSION_CHECK=1
      - restore_cache:
          key: nox-v1-{{ checksum "~/fingerprint_python.txt" }}
      - run:
          name: Install nox
          command: |
            pip install --user nox
      - save_cache:
          key: nox-v1-{{ checksum "~/fingerprint_python.txt" }}
          paths:
            - ~/.local
  install-go:
    steps:
      - run:
          name: Install go
          command: |
            curl -sSL "https://golang.org/dl/go1.15.8.linux-amd64.tar.gz" | sudo tar -xz -C /usr/local/
      - run:
          name: Configure go
          command: |
            mkdir -p ~/go/bin
            echo >${BASH_ENV} 'export PATH=/usr/local/go/bin:~/go/bin:${PATH}'

  install-ganache:
    steps:
      - run:
          name: Install ganache-cli
          command: |
            sudo npm install -g ganache-cli@6.12.2

executors:
  py37:
    docker:
      - image: cimg/python:3.7
  go:
    docker:
      - image: cimg/go:1.15-node
        environment:
          GO111MODULE: "on"
jobs:
  lint:
    executor: py37
    working_directory: ~/shielder
    steps:
      - checkout
      - install-nox
      - restore_cache:
          key: lint-v2-{{ checksum "~/fingerprint_python.txt" }}-{{ checksum "requirements.txt" }}
      - run:
          name: "Run black, flake8 with nox"
          command: |
            nox -s black flake8
      - save_cache:
          key: lint-v2-{{ checksum "~/fingerprint_python.txt" }}-{{ checksum "requirements.txt" }}
          paths:
            - ~/shielder/.nox

  mypy:
    executor: py37
    working_directory: ~/shielder
    steps:
      - checkout
      - install-nox
      - restore_cache:
          key: mypy-v1-{{ checksum "~/fingerprint_python.txt" }}-{{ checksum "requirements.txt" }}
      - run:
          name: "Run mypy with nox"
          command: |
            nox -s mypy
      - save_cache:
          key: mypy-v1-{{ checksum "~/fingerprint_python.txt" }}-{{ checksum "requirements.txt" }}
          paths:
            - ~/shielder/.nox

  pre-commit:
    executor: py37
    working_directory: ~/shielder
    steps:
      - checkout
      - install-go
      - run:
          name: Fingerprint the python installation
          command: |
            python3 tools/fingerprint_python.py | tee ~/fingerprint_python.txt
      - run:
          name: Prepare config
          command: |
            sed -e '/CircleCI stop here/q' .pre-commit-config.yaml >pre-commit-config

      - restore_cache:
          key: pre-commit-cache-v5-{{ checksum "~/fingerprint_python.txt" }}-{{ checksum "pre-commit-config" }}-{{checksum "requirements.txt"}}
      - run:
          name: Install pre-commit
          command: |
            pip install --user -c requirements.txt pre-commit
            pre-commit install-hooks -c pre-commit-config
      - save_cache:
          key: pre-commit-cache-v5-{{ checksum "~/fingerprint_python.txt" }}-{{ checksum "pre-commit-config" }}-{{checksum "requirements.txt"}}
          paths:
            - ~/.cache/pre-commit
            - ~/.local
      - run: pre-commit run  -c pre-commit-config --show-diff-on-failure -a

  prettier:
    executor: py37
    working_directory: ~/shielder
    steps:
      - checkout
      - install-nox
      - restore_cache:
          key: prettier-v4-{{ checksum "~/fingerprint_python.txt" }}-{{ checksum "requirements.txt" }}
      - run:
          name: "Run prettier with nox"
          command: |
            nox -s prettier
      - save_cache:
          key: prettier-v4-{{ checksum "~/fingerprint_python.txt" }}-{{ checksum "requirements.txt" }}
          paths:
            - ~/shielder/.nox

  test-contracts:
    executor: py37
    working_directory: ~/shielder
    steps:
      - checkout
      - install-nox
      - restore_cache:
          keys:
            - test-contracts-v4-{{ checksum "~/fingerprint_python.txt" }}-{{ checksum "requirements.txt" }}-{{ checksum "contracts/brownie-config.yaml" }}
      - run:
          name: "Run tests"
          command: |
            nox -s test_contracts
      - save_cache:
          key: test-contracts-v4-{{ checksum "~/fingerprint_python.txt" }}-{{ checksum "requirements.txt" }}-{{ checksum "contracts/brownie-config.yaml" }}
          paths:
            - ~/shielder/.nox
            - ~/shielder/.mypy_cache
            - ~/shielder/.brownie
            - ~/.solcx

  mint-build:
    executor: go
    working_directory: ~/shielder/shuttermint
    steps:
      - checkout:
          path: ~/shielder
      - restore_cache:
          keys:
            - shuttermint-go-v7-{{ checksum "go.sum" }}
      - run: make build wasm
      - run: mkdir report
      - run: gotestsum -f standard-verbose --junitfile report/unit-tests.xml
      - store_test_results:
          path: report
      - save_cache:
          key: shuttermint-go-v7-{{ checksum "go.sum" }}
          paths:
            - "~/go/pkg/mod"
            - "~/.cache/go-build"

  mint-lint:
    executor: go
    working_directory: ~/shielder/shuttermint
    steps:
      - checkout:
          path: ~/shielder
      - restore_cache:
          keys:
            - lint-shuttermint-go-v2-{{ checksum "go.sum" }}
      - run: make install-golangci-lint
      - run: make lint-changes
      - save_cache:
          key: lint-shuttermint-go-v2-{{ checksum "go.sum" }}
          paths:
            - "~/go/pkg/mod"
            - "~/.cache/go-build"
            - "~/.cache/golangci-lint"
workflows:
  version: 2
  main:
    jobs:
      - lint
      - pre-commit
      - mypy
      - prettier
      - test-contracts

  shuttermint:
    jobs:
      - mint-build
      - mint-lint:
          filters:
            branches:
              ignore: /master/
